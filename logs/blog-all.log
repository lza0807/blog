2020-04-08 00:04:11.744 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 11404 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 00:04:11.788 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-08 00:04:11.790 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 00:04:12.712 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f7edaab8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.749 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.757 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d0f0c3d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.760 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$b7c8681a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.763 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 00:04:12.797 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.814 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.831 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.113 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 00:04:17.114 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.164 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.349 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.355 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.361 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.365 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.366 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.367 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.396 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.415 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.657 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 00:04:17.666 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 00:04:17.673 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 00:04:17.673 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 00:04:17.808 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 00:04:17.808 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5971 ms
2020-04-08 00:04:18.853 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 00:04:18.871 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 00:04:18.873 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.748 seconds (JVM running for 8.768)
2020-04-08 00:04:23.217 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 00:04:23.218 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 00:04:23.231 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2020-04-08 00:04:23.264 WARN  [http-nio-1000-exec-3]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for OPTIONS /login.jsp
2020-04-08 00:04:23.281 ERROR [http-nio-1000-exec-3]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:04:23.283 ERROR [http-nio-1000-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is com.lza.blog.exception.BlogException: 当前账号未登录！
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:04:24.901 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 00:04:24.902 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:04:24.903 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:04:24.904 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 00:04:24.905 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:04:24.980 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-08 00:04:24.998 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-08 00:04:25.090 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-08 00:04:25.141 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 240
2020-04-08 00:04:25.194 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"6B46840D750350D257ED8D9F7691BA60"},"msg":"操作成功!"}
2020-04-08 00:04:25.245 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:04:25.248 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 240(Long), {"code":20000,"data":{"token":"6B46840D750350D257ED8D9F7691BA60"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:04:25.355 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:04:25.395 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 00:04:25.395 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:04:25.395 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:04:25.395 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 00:04:25.396 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:04:25.396 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 00:04:25.399 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:04:25.452 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:04:25.453 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:04:25.550 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:04:25.957 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 00:04:25.958 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:04:25.958 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:04:25.958 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 00:04:25.958 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:04:25.970 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 00:04:25.971 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:04:25.971 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:04:25.971 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 00:04:25.971 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:04:26.010 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-04-08 00:04:26.010 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==> Parameters: 
2020-04-08 00:04:26.019 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count,enable from bl_type where deleted = 0 
2020-04-08 00:04:26.019 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-08 00:04:26.061 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.TypeMapper.getList.debug:159 -<==      Total: 7
2020-04-08 00:04:26.061 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 104
2020-04-08 00:04:26.064 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 7
2020-04-08 00:04:26.064 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":6,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:04:26.065 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 95
2020-04-08 00:04:26.065 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":6,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:04:26.110 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:04:26.111 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 95(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":6,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:04:26.112 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:04:26.113 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 104(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":6,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:04:26.207 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:04:26.213 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:04:31.487 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:04:31.488 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:04:31.488 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:04:31.489 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:04:31.490 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:04:31.587 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 limit ?,? 
2020-04-08 00:04:31.588 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:04:31.709 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-08 00:04:31.758 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-08 00:04:31.758 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:04:31.806 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:04:31.807 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 320
2020-04-08 00:04:31.814 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366697506082816","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:49","typeName":"springboot","updateTime":"2020-04-07 03:41:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:04:32.283 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:04:32.283 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 320(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366697506082816","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:49","typeName":"springboot","updateTime":"2020-04-07 03:41:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:04:32.383 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:06:12.214 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 00:06:12.215 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:06:12.215 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:06:12.215 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 00:06:12.216 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:06:12.266 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count,enable from bl_type where deleted = 0 
2020-04-08 00:06:12.267 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-08 00:06:12.318 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 7
2020-04-08 00:06:12.319 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 00:06:12.320 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:06:12.368 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:06:12.368 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:06:12.465 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:06:16.266 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:06:16.267 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:06:16.267 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:06:16.267 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:06:16.268 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:06:16.315 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 limit ?,? 
2020-04-08 00:06:16.316 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:06:16.366 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 4
2020-04-08 00:06:16.417 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-08 00:06:16.418 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:06:16.463 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:06:16.464 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 198
2020-04-08 00:06:16.464 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:06:16.512 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:06:16.513 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 198(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:06:16.611 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:21.617 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 00:07:21.617 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:21.617 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:21.617 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 00:07:21.618 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:07:21.618 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 00:07:21.618 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:07:21.674 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:21.675 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:21.776 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:21.928 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 00:07:21.929 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:21.929 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:21.929 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:07:21.980 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 limit ?,? 
2020-04-08 00:07:21.981 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:07:21.986 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-04-08 00:07:21.987 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==> Parameters: 
2020-04-08 00:07:22.029 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-08 00:07:22.034 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getList.debug:159 -<==      Total: 7
2020-04-08 00:07:22.035 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 107
2020-04-08 00:07:22.035 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:07:22.093 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-08 00:07:22.093 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:07:22.094 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:22.095 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:22.138 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:07:22.139 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 209
2020-04-08 00:07:22.140 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:22.206 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:22.208 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:22.210 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 209(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:22.307 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:24.899 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 00:07:24.899 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:24.899 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:24.900 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 00:07:24.900 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:07:24.944 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count,enable from bl_type where deleted = 0 
2020-04-08 00:07:24.945 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-08 00:07:25.247 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 7
2020-04-08 00:07:25.247 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 348
2020-04-08 00:07:25.248 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:07:25.294 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:25.294 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 348(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:25.393 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:27.833 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:07:27.833 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:07:27.833 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:27.834 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:07:27.834 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:07:27.881 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 limit ?,? 
2020-04-08 00:07:27.882 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:07:27.929 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-08 00:07:27.980 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-08 00:07:27.980 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:07:28.027 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:07:28.027 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 194
2020-04-08 00:07:28.028 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:28.074 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:28.074 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 194(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:28.172 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:30.969 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/get/1247365394201612288
2020-04-08 00:07:30.969 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:30.969 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:30.970 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.get
2020-04-08 00:07:30.970 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247365394201612288]
2020-04-08 00:07:31.020 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==>  Preparing: select blog_id, blog_image,blog_title, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time,version from bl_blog where deleted = 0 and blog_id = ? 
2020-04-08 00:07:31.020 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==> Parameters: 1247365394201612288(String)
2020-04-08 00:07:31.066 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -<==      Total: 1
2020-04-08 00:07:31.067 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 98
2020-04-08 00:07:31.070 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<pre class=\"language-java\"><code> \nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.*;\nimport java.net.URLEncoder;\n \n/**\n * 下载工具类\n * @author czs\n * @date 2020-2-22 11:02:54\n */\npublic class DownloadUtils {\n \n    /**\n     * 根据字符串下载内容\n     *\n     * @param request  request\n     * @param response response\n     * @param fileName 下载的文件名\n     * @param content  字符串内容\n     * @throws IOException\n     */\n    public static void downloadByStringContent(HttpServletRequest request,\n                                               HttpServletResponse response,\n                                               String fileName, String content)\n            throws IOException {\n        //设置向浏览器端传送的文件格式\n        response.setContentType(\"application/octet-stream;charset=utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        if (request.getHeader(\"User-Agent\").toLowerCase().indexOf(\"firefox\") &gt; 0) {\n            // firefox浏览器\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"MSIE\") &gt; 0) {\n\t\t\t// IE浏览器\n            fileName = URLEncoder.encode(fileName, \"UTF-8\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"CHROME\") &gt; 0) {\n            // 谷歌\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        }\n        response.setHeader(\"Content-disposition\", \"attachment; filename=\" + fileName);\n        BufferedInputStream inp = null;\n        OutputStream out = response.getOutputStream();\n        try {\n            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes(\"utf-8\")));\n            int len = 0;\n            byte[] buf = new byte[1024];\n            while ((len = inp.read(buf)) &gt; 0) {\n                out.write(buf, 0, len);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (inp != null) {\n                inp.close();\n            }\n            if (out != null) {\n                out.close();\n            }\n        }\n    }\n \n}</code></pre>\n<pre class=\"language-java\"><code>@ResponseBody\n@RequestMapping(method = RequestMethod.GET, value = \"/exportKtrAndKjb\")\npublic void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {\n    String xml = xxxService.getXmlByXXX(path);\n    String fileName = xxxService.getFileNameByXml(xml);\n    DownloadUtils.downloadByStringContent(request, response, fileName, xml);\n}</code></pre>","blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","blogType":6,"createdTime":"2020-04-07 03:27:38","version":4},"msg":"操作成功!"}
2020-04-08 00:07:31.115 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:31.116 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/get/1247365394201612288(String), [1247365394201612288](String), 1(Integer), null, GET(String), 98(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<pre class=\"language-java\"><code> \nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.*;\nimport java.net.URLEncoder;\n \n/**\n * 下载工具类\n * @author czs\n * @date 2020-2-22 11:02:54\n */\npublic class DownloadUtils {\n \n    /**\n     * 根据字符串下载内容\n     *\n     * @param request  request\n     * @param response response\n     * @param fileName 下载的文件名\n     * @param content  字符串内容\n     * @throws IOException\n     */\n    public static void downloadByStringContent(HttpServletRequest request,\n                                               HttpServletResponse response,\n                                               String fileName, String content)\n            throws IOException {\n        //设置向浏览器端传送的文件格式\n        response.setContentType(\"application/octet-stream;charset=utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        if (request.getHeader(\"User-Agent\").toLowerCase().indexOf(\"firefox\") &gt; 0) {\n            // firefox浏览器\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"MSIE\") &gt; 0) {\n\t\t\t// IE浏览器\n            fileName = URLEncoder.encode(fileName, \"UTF-8\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"CHROME\") &gt; 0) {\n            // 谷歌\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        }\n        response.setHeader(\"Content-disposition\", \"attachment; filename=\" + fileName);\n        BufferedInputStream inp = null;\n        OutputStream out = response.getOutputStream();\n        try {\n            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes(\"utf-8\")));\n            int len = 0;\n            byte[] buf = new byte[1024];\n            while ((len = inp.read(buf)) &gt; 0) {\n                out.write(buf, 0, len);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (inp != null) {\n                inp.close();\n            }\n            if (out != null) {\n                out.close();\n            }\n        }\n    }\n \n}</code></pre>\n<pre class=\"language-java\"><code>@ResponseBody\n@RequestMapping(method = RequestMethod.GET, value = \"/exportKtrAndKjb\")\npublic void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {\n    String xml = xxxService.getXmlByXXX(path);\n    String fileName = xxxService.getFileNameByXml(xml);\n    DownloadUtils.downloadByStringContent(request, response, fileName, xml);\n}</code></pre>","blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","blogType":6,"createdTime":"2020-04-07 03:27:38","version":4},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:31.215 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:35.568 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/update
2020-04-08 00:07:35.568 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:07:35.568 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:35.568 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.updateBlogInfoById
2020-04-08 00:07:35.569 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Blog(blogId=1247365394201612288, blogTitle=java下载字符串, blogImage=http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg, blogContent=<pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>, blogGoods=0, blogRead=0, blogCollection=0, blogType=7, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-04-07 03:27:38, updateTime=null, version=4, deleted=null)]
2020-04-08 00:07:35.685 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==>  Preparing: select blog_id, blog_image,blog_title, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time,version from bl_blog where deleted = 0 and blog_id = ? 
2020-04-08 00:07:35.685 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==> Parameters: 1247365394201612288(String)
2020-04-08 00:07:35.734 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -<==      Total: 1
2020-04-08 00:07:35.736 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-04-08 00:07:35.737 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==> Parameters: java下载字符串(String), http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg(String), <pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>(String), 0(Integer), 0(Integer), 7(Integer), 0(Integer), 1247365394201612288(String), 4(Integer)
2020-04-08 00:07:35.828 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -<==    Updates: 1
2020-04-08 00:07:35.828 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==>  Preparing: select * from bl_type where type_id = ? and deleted = 0 
2020-04-08 00:07:35.829 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==> Parameters: 6(Integer)
2020-04-08 00:07:35.875 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -<==      Total: 1
2020-04-08 00:07:35.876 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -==>  Preparing: update bl_type set version = version + 1 ,type_name = ? ,type_blog_count = ? ,enable = ? where type_id = ? and deleted = 0 and version = ? 
2020-04-08 00:07:35.877 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -==> Parameters: java(String), 1(Integer), 1(Integer), 6(Integer), 17(Integer)
2020-04-08 00:07:35.969 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -<==    Updates: 1
2020-04-08 00:07:35.969 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==>  Preparing: select * from bl_type where type_id = ? and deleted = 0 
2020-04-08 00:07:35.970 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==> Parameters: 7(Integer)
2020-04-08 00:07:36.014 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -<==      Total: 1
2020-04-08 00:07:36.014 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -==>  Preparing: update bl_type set version = version + 1 ,type_name = ? ,type_blog_count = ? ,enable = ? where type_id = ? and deleted = 0 and version = ? 
2020-04-08 00:07:36.015 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -==> Parameters: springboot(String), 3(Integer), 1(Integer), 7(Integer), 3(Integer)
2020-04-08 00:07:36.112 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -<==    Updates: 1
2020-04-08 00:07:36.245 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 677
2020-04-08 00:07:36.246 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"更新成功!"}
2020-04-08 00:07:36.294 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:36.295 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/update(String), [Blog(blogId=1247365394201612288, blogTitle=java下载字符串, blogImage=http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg, blogContent=<pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>, blogGoods=0, blogRead=0, blogCollection=0, blogType=7, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-04-07 03:27:38, updateTime=null, version=4, deleted=null)](String), 1(Integer), null, PUT(String), 677(Long), {"code":20000,"msg":"更新成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:36.387 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:36.712 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:07:36.712 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:07:36.712 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:36.712 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:07:36.712 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[BlogVo(typeName=java), BlogVo(typeName=springboot), BlogVo(typeName=springboot), BlogVo(typeName=dubbo), BlogVo(typeName=java)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:07:36.759 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 limit ?,? 
2020-04-08 00:07:36.759 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:07:36.809 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-08 00:07:36.858 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-08 00:07:36.859 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:07:36.909 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:07:36.910 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 198
2020-04-08 00:07:36.910 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"springboot","updateTime":"2020-04-07 16:07:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:37.209 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:37.210 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[BlogVo(typeName=java), BlogVo(typeName=springboot), BlogVo(typeName=springboot), BlogVo(typeName=dubbo), BlogVo(typeName=java)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 198(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"springboot","updateTime":"2020-04-07 16:07:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:37.302 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:38.299 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 00:07:38.299 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:38.299 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:38.299 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 00:07:38.299 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:07:38.347 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count,enable from bl_type where deleted = 0 
2020-04-08 00:07:38.348 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-08 00:07:38.394 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 7
2020-04-08 00:07:38.394 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 96
2020-04-08 00:07:38.395 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":3,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:07:38.442 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:38.444 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 96(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":3,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:38.540 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:41.766 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:07:41.767 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:07:41.767 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:41.767 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:07:41.767 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:07:41.816 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 limit ?,? 
2020-04-08 00:07:41.816 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:07:41.862 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-08 00:07:41.910 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-08 00:07:41.911 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:07:41.957 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:07:41.958 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 192
2020-04-08 00:07:41.958 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"springboot","updateTime":"2020-04-07 16:07:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:42.003 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:42.004 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 192(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"springboot","updateTime":"2020-04-07 16:07:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:42.109 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:46.508 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/get/1247365394201612288
2020-04-08 00:07:46.508 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:46.509 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:46.509 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.get
2020-04-08 00:07:46.509 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247365394201612288]
2020-04-08 00:07:46.560 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==>  Preparing: select blog_id, blog_image,blog_title, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time,version from bl_blog where deleted = 0 and blog_id = ? 
2020-04-08 00:07:46.560 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==> Parameters: 1247365394201612288(String)
2020-04-08 00:07:46.608 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -<==      Total: 1
2020-04-08 00:07:46.608 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 100
2020-04-08 00:07:46.609 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<pre class=\"language-java\"><code> \nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.*;\nimport java.net.URLEncoder;\n \n/**\n * 下载工具类\n * @author czs\n * @date 2020-2-22 11:02:54\n */\npublic class DownloadUtils {\n \n    /**\n     * 根据字符串下载内容\n     *\n     * @param request  request\n     * @param response response\n     * @param fileName 下载的文件名\n     * @param content  字符串内容\n     * @throws IOException\n     */\n    public static void downloadByStringContent(HttpServletRequest request,\n                                               HttpServletResponse response,\n                                               String fileName, String content)\n            throws IOException {\n        //设置向浏览器端传送的文件格式\n        response.setContentType(\"application/octet-stream;charset=utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        if (request.getHeader(\"User-Agent\").toLowerCase().indexOf(\"firefox\") &gt; 0) {\n            // firefox浏览器\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"MSIE\") &gt; 0) {\n\t\t\t// IE浏览器\n            fileName = URLEncoder.encode(fileName, \"UTF-8\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"CHROME\") &gt; 0) {\n            // 谷歌\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        }\n        response.setHeader(\"Content-disposition\", \"attachment; filename=\" + fileName);\n        BufferedInputStream inp = null;\n        OutputStream out = response.getOutputStream();\n        try {\n            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes(\"utf-8\")));\n            int len = 0;\n            byte[] buf = new byte[1024];\n            while ((len = inp.read(buf)) &gt; 0) {\n                out.write(buf, 0, len);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (inp != null) {\n                inp.close();\n            }\n            if (out != null) {\n                out.close();\n            }\n        }\n    }\n \n}</code></pre>\n<pre class=\"language-java\"><code>@ResponseBody\n@RequestMapping(method = RequestMethod.GET, value = \"/exportKtrAndKjb\")\npublic void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {\n    String xml = xxxService.getXmlByXXX(path);\n    String fileName = xxxService.getFileNameByXml(xml);\n    DownloadUtils.downloadByStringContent(request, response, fileName, xml);\n}</code></pre>","blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","blogType":7,"createdTime":"2020-04-07 03:27:38","version":5},"msg":"操作成功!"}
2020-04-08 00:07:46.656 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:46.657 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/get/1247365394201612288(String), [1247365394201612288](String), 1(Integer), null, GET(String), 100(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<pre class=\"language-java\"><code> \nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.*;\nimport java.net.URLEncoder;\n \n/**\n * 下载工具类\n * @author czs\n * @date 2020-2-22 11:02:54\n */\npublic class DownloadUtils {\n \n    /**\n     * 根据字符串下载内容\n     *\n     * @param request  request\n     * @param response response\n     * @param fileName 下载的文件名\n     * @param content  字符串内容\n     * @throws IOException\n     */\n    public static void downloadByStringContent(HttpServletRequest request,\n                                               HttpServletResponse response,\n                                               String fileName, String content)\n            throws IOException {\n        //设置向浏览器端传送的文件格式\n        response.setContentType(\"application/octet-stream;charset=utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        if (request.getHeader(\"User-Agent\").toLowerCase().indexOf(\"firefox\") &gt; 0) {\n            // firefox浏览器\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"MSIE\") &gt; 0) {\n\t\t\t// IE浏览器\n            fileName = URLEncoder.encode(fileName, \"UTF-8\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"CHROME\") &gt; 0) {\n            // 谷歌\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        }\n        response.setHeader(\"Content-disposition\", \"attachment; filename=\" + fileName);\n        BufferedInputStream inp = null;\n        OutputStream out = response.getOutputStream();\n        try {\n            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes(\"utf-8\")));\n            int len = 0;\n            byte[] buf = new byte[1024];\n            while ((len = inp.read(buf)) &gt; 0) {\n                out.write(buf, 0, len);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (inp != null) {\n                inp.close();\n            }\n            if (out != null) {\n                out.close();\n            }\n        }\n    }\n \n}</code></pre>\n<pre class=\"language-java\"><code>@ResponseBody\n@RequestMapping(method = RequestMethod.GET, value = \"/exportKtrAndKjb\")\npublic void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {\n    String xml = xxxService.getXmlByXXX(path);\n    String fileName = xxxService.getFileNameByXml(xml);\n    DownloadUtils.downloadByStringContent(request, response, fileName, xml);\n}</code></pre>","blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","blogType":7,"createdTime":"2020-04-07 03:27:38","version":5},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:46.751 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:52.141 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/update
2020-04-08 00:07:52.141 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:07:52.141 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:52.141 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.updateBlogInfoById
2020-04-08 00:07:52.141 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Blog(blogId=1247365394201612288, blogTitle=java下载字符串, blogImage=http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg, blogContent=<pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>, blogGoods=0, blogRead=0, blogCollection=0, blogType=6, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-04-07 03:27:38, updateTime=null, version=5, deleted=null)]
2020-04-08 00:07:52.497 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==>  Preparing: select blog_id, blog_image,blog_title, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time,version from bl_blog where deleted = 0 and blog_id = ? 
2020-04-08 00:07:52.497 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==> Parameters: 1247365394201612288(String)
2020-04-08 00:07:52.544 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -<==      Total: 1
2020-04-08 00:07:52.545 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-04-08 00:07:52.546 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==> Parameters: java下载字符串(String), http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg(String), <pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>(String), 0(Integer), 0(Integer), 6(Integer), 0(Integer), 1247365394201612288(String), 5(Integer)
2020-04-08 00:07:52.638 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -<==    Updates: 1
2020-04-08 00:07:52.638 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==>  Preparing: select * from bl_type where type_id = ? and deleted = 0 
2020-04-08 00:07:52.639 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==> Parameters: 7(Integer)
2020-04-08 00:07:52.682 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -<==      Total: 1
2020-04-08 00:07:52.683 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -==>  Preparing: update bl_type set version = version + 1 ,type_name = ? ,type_blog_count = ? ,enable = ? where type_id = ? and deleted = 0 and version = ? 
2020-04-08 00:07:52.683 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -==> Parameters: springboot(String), 2(Integer), 1(Integer), 7(Integer), 4(Integer)
2020-04-08 00:07:52.774 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -<==    Updates: 1
2020-04-08 00:07:52.775 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==>  Preparing: select * from bl_type where type_id = ? and deleted = 0 
2020-04-08 00:07:52.775 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==> Parameters: 6(Integer)
2020-04-08 00:07:53.070 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -<==      Total: 1
2020-04-08 00:07:53.070 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -==>  Preparing: update bl_type set version = version + 1 ,type_name = ? ,type_blog_count = ? ,enable = ? where type_id = ? and deleted = 0 and version = ? 
2020-04-08 00:07:53.071 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -==> Parameters: java(String), 2(Integer), 1(Integer), 6(Integer), 18(Integer)
2020-04-08 00:07:53.161 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.updateTypeById.debug:159 -<==    Updates: 1
2020-04-08 00:07:53.297 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1156
2020-04-08 00:07:53.298 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"更新成功!"}
2020-04-08 00:07:53.590 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:53.591 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/update(String), [Blog(blogId=1247365394201612288, blogTitle=java下载字符串, blogImage=http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg, blogContent=<pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>, blogGoods=0, blogRead=0, blogCollection=0, blogType=6, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-04-07 03:27:38, updateTime=null, version=5, deleted=null)](String), 1(Integer), null, PUT(String), 1156(Long), {"code":20000,"msg":"更新成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:54.204 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:54.227 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:07:54.227 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:07:54.228 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:54.228 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:07:54.228 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[BlogVo(typeName=springboot), BlogVo(typeName=springboot), BlogVo(typeName=springboot), BlogVo(typeName=dubbo), BlogVo(typeName=java)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:07:54.308 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 limit ?,? 
2020-04-08 00:07:54.308 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:07:54.355 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-08 00:07:54.404 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-08 00:07:54.405 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:07:54.453 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:07:54.453 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 226
2020-04-08 00:07:54.454 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:54.501 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:54.502 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[BlogVo(typeName=springboot), BlogVo(typeName=springboot), BlogVo(typeName=springboot), BlogVo(typeName=dubbo), BlogVo(typeName=java)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 226(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:54.594 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:07:56.623 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 00:07:56.624 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:56.624 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:56.624 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 00:07:56.624 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:07:56.671 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count,enable from bl_type where deleted = 0 
2020-04-08 00:07:56.671 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-08 00:07:56.715 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 7
2020-04-08 00:07:56.716 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 93
2020-04-08 00:07:56.716 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:07:56.762 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:07:56.763 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 93(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:07:56.855 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:15:41.356 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:15:41.357 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:15:41.357 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:15:41.357 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:15:41.357 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:15:43.420 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 limit ?,? 
2020-04-08 00:15:43.420 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:15:43.449 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:15:43.450 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:15:43.450 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:15:43.450 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:15:43.450 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=7}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:15:43.469 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-08 00:15:43.525 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-08 00:15:43.525 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:15:43.829 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:15:43.830 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2474
2020-04-08 00:15:43.830 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:15:43.878 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:15:43.878 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 2474(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:15:43.978 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:15:44.503 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 and type_id = ? limit ?,? 
2020-04-08 00:15:44.503 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 7(Integer), 0(Integer), 10(Integer)
2020-04-08 00:15:44.550 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 00:15:44.602 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 and type_id = ? 
2020-04-08 00:15:44.602 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 7(Integer)
2020-04-08 00:15:44.650 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:15:44.651 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1202
2020-04-08 00:15:44.651 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"}],"pageSize":10,"params":{"typeId":7},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:15:44.698 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:15:44.699 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=7}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 1202(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"}],"pageSize":10,"params":{"typeId":7},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:15:44.793 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:15:48.699 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:15:48.699 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:15:48.699 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:15:48.700 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:15:48.700 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(typeName=springboot), BlogVo(typeName=springboot)], params={typeId=9}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:15:48.753 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 and type_id = ? limit ?,? 
2020-04-08 00:15:48.754 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 9(Integer), 0(Integer), 10(Integer)
2020-04-08 00:15:49.062 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 0
2020-04-08 00:15:50.112 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 and type_id = ? 
2020-04-08 00:15:50.112 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 9(Integer)
2020-04-08 00:15:50.158 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:15:50.158 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1459
2020-04-08 00:15:50.158 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":9},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 00:15:50.212 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:15:50.213 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(typeName=springboot), BlogVo(typeName=springboot)], params={typeId=9}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 1459(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":9},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:15:50.319 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:15:52.246 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:15:52.246 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:15:52.246 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:15:52.247 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:15:52.247 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=9}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:15:52.551 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 and type_id = ? limit ?,? 
2020-04-08 00:15:52.551 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 9(Integer), 0(Integer), 10(Integer)
2020-04-08 00:15:52.598 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 0
2020-04-08 00:15:52.646 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 and type_id = ? 
2020-04-08 00:15:52.647 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 9(Integer)
2020-04-08 00:15:52.693 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:15:52.694 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 448
2020-04-08 00:15:52.694 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":9},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 00:15:52.747 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:15:52.748 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=9}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 448(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":9},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:15:52.847 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:15:56.895 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:15:56.896 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:15:56.896 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:15:56.896 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:15:56.896 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=6}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:15:56.943 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 and type_id = ? limit ?,? 
2020-04-08 00:15:56.943 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 6(Integer), 0(Integer), 10(Integer)
2020-04-08 00:15:57.062 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 00:15:57.173 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 and type_id = ? 
2020-04-08 00:15:57.173 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 6(Integer)
2020-04-08 00:15:57.653 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:15:57.658 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 763
2020-04-08 00:15:57.658 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{"typeId":6},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:15:57.796 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:15:57.797 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=6}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 763(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{"typeId":6},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:15:58.610 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:16:02.396 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:16:02.397 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:16:02.397 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:16:02.397 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:16:02.397 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(typeName=java), BlogVo(typeName=java)], params={typeId=6, blogTitle=java}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:16:02.461 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 and blog_title like CONCAT('%',?,'%') and type_id = ? limit ?,? 
2020-04-08 00:16:02.462 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: java(String), 6(Integer), 0(Integer), 10(Integer)
2020-04-08 00:16:02.513 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2020-04-08 00:16:02.561 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 and blog_title like CONCAT('%',?,'%') and type_id = ? 
2020-04-08 00:16:02.561 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: java(String), 6(Integer)
2020-04-08 00:16:02.608 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:16:02.608 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 212
2020-04-08 00:16:02.609 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"}],"pageSize":10,"params":{"typeId":6,"blogTitle":"java"},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:16:02.659 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:16:02.660 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(typeName=java), BlogVo(typeName=java)], params={typeId=6, blogTitle=java}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 212(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"}],"pageSize":10,"params":{"typeId":6,"blogTitle":"java"},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:16:02.758 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:16:57.793 WARN  [http-nio-1000-exec-1]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for GET /admin/getAdmin
2020-04-08 00:16:57.795 ERROR [http-nio-1000-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:16:57.796 ERROR [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:17:10.332 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /about/getByPage
2020-04-08 00:17:10.332 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:17:10.333 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:17:10.333 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AboutController.getByPage
2020-04-08 00:17:10.333 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:17:10.391 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.getByPage.debug:159 -==>  Preparing: select about_id, about_title, about_read, created_time, update_time, enable from bl_about where deleted = 0 limit ?,? 
2020-04-08 00:17:10.392 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:17:10.443 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.getByPage.debug:159 -<==      Total: 3
2020-04-08 00:17:10.493 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_about where deleted = 0 
2020-04-08 00:17:10.494 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:17:10.541 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:17:10.541 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 209
2020-04-08 00:17:10.543 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试1","createdTime":"2020-04-01 14:56:59","enable":0,"updateTime":"2020-04-07 07:06:53"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-04-01 14:57:12","enable":1,"updateTime":"2020-04-07 07:07:00"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-04-07 06:53:43","enable":0,"updateTime":"2020-04-07 06:53:43"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:17:10.591 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:17:10.591 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /about/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 209(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试1","createdTime":"2020-04-01 14:56:59","enable":0,"updateTime":"2020-04-07 07:06:53"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-04-01 14:57:12","enable":1,"updateTime":"2020-04-07 07:07:00"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-04-07 06:53:43","enable":0,"updateTime":"2020-04-07 06:53:43"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:17:10.949 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:17:11.943 WARN  [http-nio-1000-exec-2]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for GET /admin/getAdmin
2020-04-08 00:17:11.944 ERROR [http-nio-1000-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:17:11.945 ERROR [http-nio-1000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:17:48.051 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 22900 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 00:17:48.055 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-08 00:17:48.055 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 00:17:48.952 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$17a03216] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:48.996 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:49.004 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a34b36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:49.007 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d77aef78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:49.009 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 00:17:49.043 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:49.054 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:49.071 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.736 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 00:17:54.737 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.790 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.944 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.951 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.958 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.961 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.963 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.964 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.991 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:55.010 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:55.254 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 00:17:55.263 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 00:17:55.269 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 00:17:55.269 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 00:17:55.412 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 00:17:55.412 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 7261 ms
2020-04-08 00:17:56.446 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 00:17:56.462 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 00:17:56.464 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 8.953 seconds (JVM running for 9.924)
2020-04-08 00:18:35.755 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 00:18:35.756 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 00:18:35.771 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 15 ms
2020-04-08 00:18:35.806 WARN  [http-nio-1000-exec-2]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for OPTIONS /login.jsp
2020-04-08 00:18:35.824 ERROR [http-nio-1000-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:18:35.826 ERROR [http-nio-1000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is com.lza.blog.exception.BlogException: 当前账号未登录！
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:18:37.333 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 00:18:37.334 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:18:37.334 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:18:37.335 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 00:18:37.336 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:18:37.412 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-08 00:18:37.430 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-08 00:18:37.497 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-08 00:18:37.512 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 179
2020-04-08 00:18:37.561 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"50FCB611EE8D45BD4D9116AC719C7E00"},"msg":"操作成功!"}
2020-04-08 00:18:37.613 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:18:37.616 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 179(Long), {"code":20000,"data":{"token":"50FCB611EE8D45BD4D9116AC719C7E00"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:18:37.722 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:18:37.762 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 00:18:37.762 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:18:37.762 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:18:37.762 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 00:18:37.763 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:18:37.763 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 00:18:37.766 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:18:37.821 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:18:37.822 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:18:38.493 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:18:38.882 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:18:38.882 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:18:38.882 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 00:18:38.883 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:18:38.883 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:18:38.883 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:18:38.883 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:18:38.884 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 00:18:38.884 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:18:38.884 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:18:38.935 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 00:18:38.936 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 00:18:38.940 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-04-08 00:18:38.941 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==> Parameters: 
2020-04-08 00:18:38.985 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 00:18:38.986 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 104
2020-04-08 00:18:38.986 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:18:38.990 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getList.debug:159 -<==      Total: 7
2020-04-08 00:18:38.991 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 109
2020-04-08 00:18:38.994 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:18:39.035 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:18:39.036 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 104(Long), {"code":20000,"data":{"header":"test","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:18:39.043 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:18:39.044 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 109(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:18:39.139 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:18:39.146 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:18:42.836 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 00:18:42.836 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:18:42.836 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:18:42.837 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 00:18:42.837 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@46c7ac09]
2020-04-08 00:18:43.113 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 277
2020-04-08 00:18:43.113 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6Mp-OAadO2AAB28yzuliM121.jpg","msg":"上传成功!"}
2020-04-08 00:18:43.168 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:18:43.168 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@46c7ac09](String), 1(Integer), null, POST(String), 277(Long), {"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6Mp-OAadO2AAB28yzuliM121.jpg","msg":"上传成功!"}(String), 127.0.0.1(String)
2020-04-08 00:18:43.265 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:18:46.414 WARN  [http-nio-1000-exec-8]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for PUT /admin/updateInfo
2020-04-08 00:18:46.416 ERROR [http-nio-1000-exec-8]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:18:46.417 ERROR [http-nio-1000-exec-8]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:18:52.303 WARN  [http-nio-1000-exec-9]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for PUT /admin/updateInfo
2020-04-08 00:18:52.304 ERROR [http-nio-1000-exec-9]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:18:52.304 ERROR [http-nio-1000-exec-9]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:19:15.312 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 380 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 00:19:15.315 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-08 00:19:15.316 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 00:19:16.194 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$bba4e762] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.235 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.243 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$94a80082] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.247 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$7b7fa4c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.249 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 00:19:16.284 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.296 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.314 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:20.959 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 00:19:20.960 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.011 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.179 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.185 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.192 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.195 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.196 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.196 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.223 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.242 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.467 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 00:19:21.478 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 00:19:21.484 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 00:19:21.484 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 00:19:21.632 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 00:19:21.632 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 6232 ms
2020-04-08 00:19:22.650 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 00:19:22.667 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 00:19:22.669 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.835 seconds (JVM running for 8.797)
2020-04-08 00:20:13.613 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 00:20:13.613 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 00:20:13.625 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2020-04-08 00:20:13.662 WARN  [http-nio-1000-exec-2]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for OPTIONS /login.jsp
2020-04-08 00:20:13.681 ERROR [http-nio-1000-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:20:13.682 ERROR [http-nio-1000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is com.lza.blog.exception.BlogException: 当前账号未登录！
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:20:15.548 WARN  [http-nio-1000-exec-4]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for OPTIONS /login.jsp
2020-04-08 00:20:15.549 ERROR [http-nio-1000-exec-4]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:20:15.550 ERROR [http-nio-1000-exec-4]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is com.lza.blog.exception.BlogException: 当前账号未登录！
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:20:16.660 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 00:20:16.661 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:20:16.661 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:16.663 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 00:20:16.663 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:20:16.850 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-08 00:20:16.869 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-08 00:20:16.935 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-08 00:20:16.938 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 278
2020-04-08 00:20:16.987 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"2E89FD3F714534D3E1495D9CF53C4389"},"msg":"操作成功!"}
2020-04-08 00:20:17.460 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:20:17.462 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 278(Long), {"code":20000,"data":{"token":"2E89FD3F714534D3E1495D9CF53C4389"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:20:17.672 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:20:18.017 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 00:20:18.017 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:20:18.017 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:18.018 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 00:20:18.018 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:20:18.018 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 00:20:18.021 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:20:18.107 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:20:18.107 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:20:18.326 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:20:18.415 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 00:20:18.416 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:20:18.416 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:18.416 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 00:20:18.417 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:20:18.535 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-04-08 00:20:18.536 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==> Parameters: 
2020-04-08 00:20:18.679 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getList.debug:159 -<==      Total: 7
2020-04-08 00:20:18.680 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 265
2020-04-08 00:20:18.683 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:20:18.715 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:20:18.715 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:20:18.715 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:18.715 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:20:18.715 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:20:18.740 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:20:18.741 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 265(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:20:18.766 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 00:20:18.767 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 00:20:18.817 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 00:20:18.818 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 103
2020-04-08 00:20:18.818 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:20:18.850 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:20:18.873 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:20:18.874 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 103(Long), {"code":20000,"data":{"header":"test","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:20:19.225 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:20:22.029 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 00:20:22.030 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:20:22.030 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:22.030 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 00:20:22.031 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4d81072f]
2020-04-08 00:20:22.319 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 290
2020-04-08 00:20:22.320 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","msg":"上传成功!"}
2020-04-08 00:20:22.372 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:20:22.373 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4d81072f](String), 1(Integer), null, POST(String), 290(Long), {"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","msg":"上传成功!"}(String), 127.0.0.1(String)
2020-04-08 00:20:22.471 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:20:23.955 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/updateInfo
2020-04-08 00:20:23.955 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:20:23.956 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:23.956 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.updateAdminInfo
2020-04-08 00:20:23.956 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=null)]
2020-04-08 00:20:24.017 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ? where id = ? 
2020-04-08 00:20:24.018 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -==> Parameters: 刘子安(String), http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg(String), 加分(String), admin(String), 1(Integer)
2020-04-08 00:20:24.116 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -<==    Updates: 1
2020-04-08 00:20:24.117 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 162
2020-04-08 00:20:24.117 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"更新成功"}
2020-04-08 00:20:24.168 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:20:24.169 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/updateInfo(String), [Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=null)](String), 1(Integer), null, PUT(String), 162(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-04-08 00:20:24.271 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:20:34.589 WARN  [http-nio-1000-exec-1]o.s.w.s.mvc.support.DefaultHandlerExceptionResolver.logException:199 -Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-04-08 00:20:34.591 ERROR [http-nio-1000-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:20:34.592 ERROR [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:20:36.565 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:20:36.566 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:20:36.566 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:36.566 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:20:36.566 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:20:36.614 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 00:20:36.614 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 00:20:36.663 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 00:20:36.663 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 98
2020-04-08 00:20:36.663 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:20:36.714 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:20:36.715 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 98(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:20:36.815 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:20:39.975 WARN  [http-nio-1000-exec-3]o.s.w.s.mvc.support.DefaultHandlerExceptionResolver.logException:199 -Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-04-08 00:20:39.977 ERROR [http-nio-1000-exec-3]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:20:39.977 ERROR [http-nio-1000-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:20:45.359 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:20:45.359 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:20:45.360 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:45.360 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:20:45.360 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:20:45.413 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 00:20:45.413 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 00:20:45.461 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 00:20:45.462 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 103
2020-04-08 00:20:45.462 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:20:45.511 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:20:45.511 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 103(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:20:45.614 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:20:47.028 WARN  [http-nio-1000-exec-5]o.s.w.s.mvc.support.DefaultHandlerExceptionResolver.logException:199 -Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-04-08 00:20:47.030 ERROR [http-nio-1000-exec-5]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:20:47.030 ERROR [http-nio-1000-exec-5]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:21:17.905 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 20592 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 00:21:17.909 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-08 00:21:17.910 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 00:21:18.791 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$de1094f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.826 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.834 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b713ae13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.837 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$9deb5255] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.840 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 00:21:18.874 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.885 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.903 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:24.991 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 00:21:24.991 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.056 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.215 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.220 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.226 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.230 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.231 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.232 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.258 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.277 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.510 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 00:21:25.520 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 00:21:25.526 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 00:21:25.526 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 00:21:25.662 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 00:21:25.663 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 7679 ms
2020-04-08 00:21:26.719 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 00:21:26.735 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 00:21:26.738 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 9.32 seconds (JVM running for 10.268)
2020-04-08 00:24:52.995 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 00:24:52.996 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 00:24:53.010 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 13 ms
2020-04-08 00:24:53.046 WARN  [http-nio-1000-exec-5]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for OPTIONS /login.jsp
2020-04-08 00:24:53.064 ERROR [http-nio-1000-exec-5]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:24:53.065 ERROR [http-nio-1000-exec-5]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is com.lza.blog.exception.BlogException: 当前账号未登录！
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:24:54.415 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 00:24:54.416 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:24:54.416 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:24:54.418 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 00:24:54.418 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:24:54.491 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-08 00:24:54.511 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-08 00:24:54.596 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-08 00:24:54.599 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 184
2020-04-08 00:24:54.662 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"440F6F847AF9FFCFDFB42487152093E2"},"msg":"操作成功!"}
2020-04-08 00:24:54.711 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:24:54.713 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 184(Long), {"code":20000,"data":{"token":"440F6F847AF9FFCFDFB42487152093E2"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:24:54.816 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:24:54.860 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 00:24:54.860 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:24:54.861 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:24:54.861 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 00:24:54.862 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:24:54.862 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 00:24:54.867 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:24:54.915 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:24:54.916 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:24:55.023 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:24:55.493 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 00:24:55.494 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:24:55.494 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:24:55.494 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 00:24:55.494 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:24:55.506 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:24:55.506 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:24:55.507 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:24:55.507 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:24:55.507 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:24:55.544 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-04-08 00:24:55.545 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==> Parameters: 
2020-04-08 00:24:55.574 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 00:24:55.575 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:24:55.591 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getList.debug:159 -<==      Total: 7
2020-04-08 00:24:55.592 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 99
2020-04-08 00:24:55.596 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:24:55.625 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-04-08 00:24:55.658 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:24:55.659 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 99(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:24:55.675 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 00:24:55.676 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:24:55.725 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:24:55.725 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 219
2020-04-08 00:24:55.731 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"无","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-06 14:14:49","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:24:55.753 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:24:55.778 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:24:55.779 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 219(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"无","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-06 14:14:49","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:24:55.882 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:25:04.378 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/get/3
2020-04-08 00:25:04.378 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:25:04.378 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:04.379 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getById
2020-04-08 00:25:04.379 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[3]
2020-04-08 00:25:04.426 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time, version from bl_user where user_id = ? and deleted = 0 and version = ? 
2020-04-08 00:25:04.426 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer), 3(Integer)
2020-04-08 00:25:04.474 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 1
2020-04-08 00:25:04.475 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 97
2020-04-08 00:25:04.475 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"createdTime":"2020-04-06 14:11:18","header":"无","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-06 14:14:49","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111","version":3},"msg":"操作成功!"}
2020-04-08 00:25:04.526 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:25:04.527 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, GET(String), 97(Long), {"code":20000,"data":{"createdTime":"2020-04-06 14:11:18","header":"无","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-06 14:14:49","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111","version":3},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:25:04.618 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:25:07.552 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 00:25:07.552 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:25:07.553 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:07.553 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 00:25:07.553 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@64f56f64]
2020-04-08 00:25:07.842 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 290
2020-04-08 00:25:07.842 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","msg":"上传成功!"}
2020-04-08 00:25:07.892 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:25:07.893 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@64f56f64](String), 1(Integer), null, POST(String), 290(Long), {"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","msg":"上传成功!"}(String), 127.0.0.1(String)
2020-04-08 00:25:07.991 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:25:11.230 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/update
2020-04-08 00:25:11.231 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:25:11.231 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:11.231 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.update
2020-04-08 00:25:11.231 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-06 14:14:49, version=3, deleted=null)]
2020-04-08 00:25:11.287 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,username = ? ,name = ? ,sex = ? ,header = ? ,nickname = ? ,user_email = ? where user_id = ? and deleted = 0 
2020-04-08 00:25:11.288 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.update.debug:159 -==> Parameters: liuzian111(String), liuzian1(String), 1(Integer), http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg(String), 昵称刘子安(String), 2282816304@qq.com(String), 3(Integer)
2020-04-08 00:25:11.383 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-04-08 00:25:11.383 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 153
2020-04-08 00:25:11.384 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"修改成功！"}
2020-04-08 00:25:11.687 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:25:11.688 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/update(String), [User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-06 14:14:49, version=3, deleted=null)](String), 1(Integer), null, PUT(String), 153(Long), {"code":20000,"msg":"修改成功！"}(String), 127.0.0.1(String)
2020-04-08 00:25:11.787 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:25:11.812 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:25:11.812 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:25:11.812 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:11.813 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:25:11.813 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=无, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-06 14:14:49, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:25:11.863 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 00:25:11.864 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:25:11.912 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-04-08 00:25:11.962 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 00:25:11.963 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:25:12.037 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:25:12.038 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 226
2020-04-08 00:25:12.038 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:25:12.092 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:25:12.094 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=无, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-06 14:14:49, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 226(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:25:12.188 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:25:19.065 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:25:19.065 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:25:19.065 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:19.066 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:25:19.066 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:25:19.116 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 00:25:19.117 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 00:25:19.165 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 00:25:19.166 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 101
2020-04-08 00:25:19.166 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:25:19.214 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:25:19.214 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 101(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:25:19.317 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:25:20.023 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:25:20.023 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:25:20.023 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:20.024 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:25:20.024 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:25:20.330 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 00:25:20.331 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:25:20.378 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-04-08 00:25:20.428 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 00:25:20.429 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:25:20.474 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:25:20.474 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 451
2020-04-08 00:25:20.475 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:25:20.522 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:25:20.523 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 451(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:25:20.621 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:25:22.182 WARN  [http-nio-1000-exec-6]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for PUT /user/resetPwd
2020-04-08 00:25:22.184 ERROR [http-nio-1000-exec-6]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:25:22.185 ERROR [http-nio-1000-exec-6]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:25:37.559 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/get/3
2020-04-08 00:25:37.559 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:25:37.560 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:37.560 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getById
2020-04-08 00:25:37.560 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[3]
2020-04-08 00:25:37.615 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time, version from bl_user where user_id = ? and deleted = 0 and version = ? 
2020-04-08 00:25:37.616 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer), 3(Integer)
2020-04-08 00:25:37.663 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 0
2020-04-08 00:25:37.664 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 00:25:37.664 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"操作成功!"}
2020-04-08 00:25:37.711 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:25:37.711 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:25:37.821 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:25:53.024 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/get/3
2020-04-08 00:25:53.025 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:25:53.025 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:53.025 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getById
2020-04-08 00:25:53.025 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[3]
2020-04-08 00:25:53.072 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.getById.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time, version from bl_user where user_id = ? and deleted = 0 and version = ? 
2020-04-08 00:25:53.072 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.getById.debug:159 -==> Parameters: 3(Integer), 3(Integer)
2020-04-08 00:25:53.118 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.getById.debug:159 -<==      Total: 0
2020-04-08 00:25:53.119 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 95
2020-04-08 00:25:53.119 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"操作成功!"}
2020-04-08 00:25:53.169 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:25:53.170 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/get/3(String), [3](String), 1(Integer), null, GET(String), 95(Long), {"code":20000,"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:25:53.271 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:27:13.992 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 00:27:13.992 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:13.992 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:13.993 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 00:27:13.993 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@59ea446]
2020-04-08 00:27:14.202 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 210
2020-04-08 00:27:14.202 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","msg":"上传成功!"}
2020-04-08 00:27:14.249 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:27:14.250 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /upload/uploadImage(String), [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@59ea446](String), 1(Integer), null, POST(String), 210(Long), {"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","msg":"上传成功!"}(String), 127.0.0.1(String)
2020-04-08 00:27:14.345 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:27:16.240 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/save
2020-04-08 00:27:16.241 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:16.241 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:16.241 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.save
2020-04-08 00:27:16.241 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[User(userId=null, username=admin11, password=21232f297a57a5a743894a0e4a801fc3, name=test11, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png, nickname=测试, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-04-08 00:27:16.290 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?,?,?,?,?,?,? ) 
2020-04-08 00:27:16.291 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.UserMapper.save.debug:159 -==> Parameters: admin11(String), 21232f297a57a5a743894a0e4a801fc3(String), test11(String), 1(Integer), http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png(String), 测试(String), 2@qq.com(String)
2020-04-08 00:27:16.385 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-04-08 00:27:16.386 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 146
2020-04-08 00:27:16.386 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"添加成功！"}
2020-04-08 00:27:16.439 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:27:16.439 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/save(String), [User(userId=null, username=admin11, password=21232f297a57a5a743894a0e4a801fc3, name=test11, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png, nickname=测试, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 146(Long), {"code":20000,"msg":"添加成功！"}(String), 127.0.0.1(String)
2020-04-08 00:27:16.530 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:27:16.861 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:27:16.861 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:16.862 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:16.862 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:27:16.862 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-07 16:25:11, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:27:17.167 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 00:27:17.168 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:27:17.216 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 00:27:17.266 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 00:27:17.267 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:27:17.313 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:27:17.314 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 453
2020-04-08 00:27:17.314 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:27:17.360 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:27:17.361 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-07 16:25:11, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 453(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:27:17.762 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:27:42.314 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:27:42.314 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:27:42.314 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:42.314 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:27:42.315 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:27:42.361 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 00:27:42.362 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 00:27:42.410 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 00:27:42.411 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 97
2020-04-08 00:27:42.411 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:27:42.461 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:27:42.462 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 97(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:27:42.561 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:27:50.428 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:27:50.429 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:50.429 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:50.429 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:27:50.429 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:27:50.520 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 00:27:50.521 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 00:27:50.567 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 00:27:50.617 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 00:27:50.618 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 00:27:50.664 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:27:50.664 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 236
2020-04-08 00:27:50.665 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:27:50.712 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:27:50.713 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 236(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:27:50.808 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:27:55.471 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:27:55.471 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:55.471 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:55.471 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:27:55.471 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-07 16:25:11, version=null, deleted=null), User(userId=4, username=admin11, password=null, name=test11, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png, nickname=测试, userEmail=2@qq.com, createdTime=2020-04-07 16:27:16, updateTime=2020-04-07 16:27:16, version=null, deleted=null)], params={sex=2}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:27:55.522 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 and sex = ? limit ?, ? 
2020-04-08 00:27:55.522 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 2(Integer), 0(Integer), 10(Integer)
2020-04-08 00:27:55.570 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 0
2020-04-08 00:27:55.617 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 and sex = ? 
2020-04-08 00:27:55.618 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 2(Integer)
2020-04-08 00:27:55.672 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:27:55.673 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 202
2020-04-08 00:27:55.673 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"sex":2},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 00:27:55.719 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:27:55.720 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-07 16:25:11, version=null, deleted=null), User(userId=4, username=admin11, password=null, name=test11, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png, nickname=测试, userEmail=2@qq.com, createdTime=2020-04-07 16:27:16, updateTime=2020-04-07 16:27:16, version=null, deleted=null)], params={sex=2}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 202(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"sex":2},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:27:55.813 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:27:57.907 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:27:57.908 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:57.908 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:57.908 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:27:57.908 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={sex=1}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:27:57.959 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 and sex = ? limit ?, ? 
2020-04-08 00:27:57.961 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2020-04-08 00:27:58.011 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 00:27:58.059 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 and sex = ? 
2020-04-08 00:27:58.059 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 1(Integer)
2020-04-08 00:27:58.129 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:27:58.130 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 223
2020-04-08 00:27:58.130 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{"sex":1},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:27:58.178 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:27:58.179 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={sex=1}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 223(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{"sex":1},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:27:58.273 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:28:19.011 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:28:19.012 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:28:19.012 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:28:19.012 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:28:19.012 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-07 16:25:11, version=null, deleted=null), User(userId=4, username=admin11, password=null, name=test11, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png, nickname=测试, userEmail=2@qq.com, createdTime=2020-04-07 16:27:16, updateTime=2020-04-07 16:27:16, version=null, deleted=null)], params={sex=1, nickname=刘}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:28:19.058 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 and sex = ? and nickname like CONCAT('%', ?, '%') limit ?, ? 
2020-04-08 00:28:19.059 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 刘(String), 0(Integer), 10(Integer)
2020-04-08 00:28:19.105 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2020-04-08 00:28:19.153 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 and sex = ? and nickname like CONCAT('%', ?, '%') 
2020-04-08 00:28:19.153 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 1(Integer), 刘(String)
2020-04-08 00:28:19.198 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 00:28:19.199 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 188
2020-04-08 00:28:19.199 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{"sex":1,"nickname":"刘"},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:28:19.246 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:28:19.246 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-07 16:25:11, version=null, deleted=null), User(userId=4, username=admin11, password=null, name=test11, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png, nickname=测试, userEmail=2@qq.com, createdTime=2020-04-07 16:27:16, updateTime=2020-04-07 16:27:16, version=null, deleted=null)], params={sex=1, nickname=刘}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 188(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{"sex":1,"nickname":"刘"},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:28:19.346 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:28:23.070 WARN  [http-nio-1000-exec-3]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for POST /comment/getByPage
2020-04-08 00:28:23.072 ERROR [http-nio-1000-exec-3]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 00:28:23.072 ERROR [http-nio-1000-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 00:28:25.716 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:28:25.717 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:28:25.717 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:28:25.717 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:28:25.717 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:28:25.766 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 00:28:25.766 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 00:28:25.812 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 00:28:25.812 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 96
2020-04-08 00:28:25.813 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:28:25.860 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:28:25.861 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 96(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 00:28:25.955 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:29:05.018 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/updatePassword
2020-04-08 00:29:05.018 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:29:05.018 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:29:05.018 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.updatePassword
2020-04-08 00:29:05.018 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=698d51a19d8a121ce581499d7b701668)]
2020-04-08 00:29:05.066 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 00:29:05.067 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 00:29:05.113 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 00:29:05.415 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ?, password = ? where id = ? 
2020-04-08 00:29:05.416 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -==> Parameters: 刘子安(String), http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg(String), 加分(String), admin(String), 698d51a19d8a121ce581499d7b701668(String), 1(Integer)
2020-04-08 00:29:05.510 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -<==    Updates: 1
2020-04-08 00:29:05.510 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 492
2020-04-08 00:29:05.510 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"修改成功！"}
2020-04-08 00:29:05.559 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:29:05.560 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/updatePassword(String), [Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=698d51a19d8a121ce581499d7b701668)](String), 1(Integer), null, PUT(String), 492(Long), {"code":20000,"msg":"修改成功！"}(String), 127.0.0.1(String)
2020-04-08 00:29:05.651 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:31:15.564 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/updatePassword
2020-04-08 00:31:15.565 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:31:15.565 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:31:15.565 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.updatePassword
2020-04-08 00:31:15.565 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:31:15.613 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 00:31:15.613 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 00:31:15.660 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 00:31:15.709 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ?, password = ? where id = ? 
2020-04-08 00:31:15.710 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -==> Parameters: 刘子安(String), http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg(String), 加分(String), admin(String), 21232f297a57a5a743894a0e4a801fc3(String), 1(Integer)
2020-04-08 00:31:15.803 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -<==    Updates: 1
2020-04-08 00:31:15.803 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 239
2020-04-08 00:31:15.803 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"修改成功！"}
2020-04-08 00:31:15.851 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:31:15.852 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/updatePassword(String), [Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, PUT(String), 239(Long), {"code":20000,"msg":"修改成功！"}(String), 127.0.0.1(String)
2020-04-08 00:31:15.946 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 00:31:53.233 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/updatePassword
2020-04-08 00:31:53.233 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:31:53.233 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:31:53.233 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.updatePassword
2020-04-08 00:31:53.233 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:31:53.286 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 00:31:53.287 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 00:31:53.333 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 00:31:53.381 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ?, password = ? where id = ? 
2020-04-08 00:31:53.382 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -==> Parameters: 刘子安(String), http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg(String), 加分(String), admin(String), 21232f297a57a5a743894a0e4a801fc3(String), 1(Integer)
2020-04-08 00:31:53.476 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -<==    Updates: 1
2020-04-08 00:31:53.477 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 245
2020-04-08 00:31:53.477 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"修改成功！"}
2020-04-08 00:31:53.529 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 00:31:53.529 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/updatePassword(String), [Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, PUT(String), 245(Long), {"code":20000,"msg":"修改成功！"}(String), 127.0.0.1(String)
2020-04-08 00:31:53.621 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 08:07:12.733 ERROR [commons-pool-evictor-thread]com.github.tobato.fastdfs.domain.conn.DefaultConnection.close:76 -close connection error
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:143)
	at com.github.tobato.fastdfs.domain.conn.DefaultConnection.close(DefaultConnection.java:73)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:89)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:22)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.destroy(GenericKeyedObjectPool.java:1081)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.evict(GenericKeyedObjectPool.java:930)
	at org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor.run(BaseGenericObjectPool.java:1138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 08:07:12.733 ERROR [commons-pool-evictor-thread]com.github.tobato.fastdfs.domain.conn.DefaultConnection.close:76 -close connection error
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:143)
	at com.github.tobato.fastdfs.domain.conn.DefaultConnection.close(DefaultConnection.java:73)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:89)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:22)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.destroy(GenericKeyedObjectPool.java:1081)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.evict(GenericKeyedObjectPool.java:930)
	at org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor.run(BaseGenericObjectPool.java:1138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 08:07:12.734 ERROR [commons-pool-evictor-thread]com.github.tobato.fastdfs.domain.conn.DefaultConnection.close:76 -close connection error
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:143)
	at com.github.tobato.fastdfs.domain.conn.DefaultConnection.close(DefaultConnection.java:73)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:89)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:22)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.destroy(GenericKeyedObjectPool.java:1081)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.evict(GenericKeyedObjectPool.java:930)
	at org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor.run(BaseGenericObjectPool.java:1138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 08:07:12.734 ERROR [commons-pool-evictor-thread]com.github.tobato.fastdfs.domain.conn.DefaultConnection.close:76 -close connection error
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:143)
	at com.github.tobato.fastdfs.domain.conn.DefaultConnection.close(DefaultConnection.java:73)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:89)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:22)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.destroy(GenericKeyedObjectPool.java:1081)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.evict(GenericKeyedObjectPool.java:930)
	at org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor.run(BaseGenericObjectPool.java:1138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 08:07:12.734 ERROR [commons-pool-evictor-thread]com.github.tobato.fastdfs.domain.conn.DefaultConnection.close:76 -close connection error
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:143)
	at com.github.tobato.fastdfs.domain.conn.DefaultConnection.close(DefaultConnection.java:73)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:89)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:22)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.destroy(GenericKeyedObjectPool.java:1081)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.evict(GenericKeyedObjectPool.java:930)
	at org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor.run(BaseGenericObjectPool.java:1138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 08:07:12.735 ERROR [commons-pool-evictor-thread]com.github.tobato.fastdfs.domain.conn.DefaultConnection.close:76 -close connection error
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:143)
	at com.github.tobato.fastdfs.domain.conn.DefaultConnection.close(DefaultConnection.java:73)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:89)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:22)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.destroy(GenericKeyedObjectPool.java:1081)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.evict(GenericKeyedObjectPool.java:930)
	at org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor.run(BaseGenericObjectPool.java:1138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 08:07:12.735 ERROR [commons-pool-evictor-thread]com.github.tobato.fastdfs.domain.conn.DefaultConnection.close:76 -close connection error
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:143)
	at com.github.tobato.fastdfs.domain.conn.DefaultConnection.close(DefaultConnection.java:73)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:89)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:22)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.destroy(GenericKeyedObjectPool.java:1081)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.evict(GenericKeyedObjectPool.java:930)
	at org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor.run(BaseGenericObjectPool.java:1138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 08:07:12.736 ERROR [commons-pool-evictor-thread]com.github.tobato.fastdfs.domain.conn.DefaultConnection.close:76 -close connection error
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:143)
	at com.github.tobato.fastdfs.domain.conn.DefaultConnection.close(DefaultConnection.java:73)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:89)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:22)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.destroy(GenericKeyedObjectPool.java:1081)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.evict(GenericKeyedObjectPool.java:930)
	at org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor.run(BaseGenericObjectPool.java:1138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 08:07:12.736 ERROR [commons-pool-evictor-thread]com.github.tobato.fastdfs.domain.conn.DefaultConnection.close:76 -close connection error
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:143)
	at com.github.tobato.fastdfs.domain.conn.DefaultConnection.close(DefaultConnection.java:73)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:89)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:22)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.destroy(GenericKeyedObjectPool.java:1081)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.evict(GenericKeyedObjectPool.java:930)
	at org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor.run(BaseGenericObjectPool.java:1138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 08:07:12.736 ERROR [commons-pool-evictor-thread]com.github.tobato.fastdfs.domain.conn.DefaultConnection.close:76 -close connection error
java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:143)
	at com.github.tobato.fastdfs.domain.conn.DefaultConnection.close(DefaultConnection.java:73)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:89)
	at com.github.tobato.fastdfs.domain.conn.PooledConnectionFactory.destroyObject(PooledConnectionFactory.java:22)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.destroy(GenericKeyedObjectPool.java:1081)
	at org.apache.commons.pool2.impl.GenericKeyedObjectPool.evict(GenericKeyedObjectPool.java:930)
	at org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor.run(BaseGenericObjectPool.java:1138)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:09:26.484 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 18856 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 10:09:26.490 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-08 10:09:26.491 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 10:09:27.422 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$100fa1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.461 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.469 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$da04133b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.472 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$c0dbb77d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.474 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 10:09:27.505 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.518 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.534 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.622 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 10:09:31.622 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.672 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.818 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.823 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.828 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.831 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.833 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.833 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.858 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.876 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:32.079 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 10:09:32.088 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 10:09:32.093 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 10:09:32.094 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 10:09:32.219 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 10:09:32.219 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5611 ms
2020-04-08 10:09:33.174 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 10:09:33.190 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 10:09:33.193 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.182 seconds (JVM running for 8.122)
2020-04-08 10:09:55.232 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 10:09:55.232 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 10:09:55.246 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 14 ms
2020-04-08 10:09:55.327 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 10:09:55.328 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:09:55.329 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:09:55.330 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 10:09:55.331 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 10:09:55.413 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-08 10:09:55.431 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-08 10:09:55.499 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-08 10:09:55.508 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 181
2020-04-08 10:09:55.551 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"B2186712409E70E48CA244D6A447CC0C"},"msg":"操作成功!"}
2020-04-08 10:09:55.605 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:09:55.607 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 181(Long), {"code":20000,"data":{"token":"B2186712409E70E48CA244D6A447CC0C"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:09:55.713 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:09:55.765 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 10:09:55.766 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:09:55.766 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:09:55.767 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 10:09:55.767 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:09:55.768 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 3
2020-04-08 10:09:55.772 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:09:55.826 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:09:55.826 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 3(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:09:55.931 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:09:56.420 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 10:09:56.421 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:09:56.421 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:09:56.421 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 10:09:56.422 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:09:56.436 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:09:56.437 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:09:56.437 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:09:56.438 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:09:56.438 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:09:56.480 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-04-08 10:09:56.481 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==> Parameters: 
2020-04-08 10:09:56.520 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 10:09:56.521 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 10:09:56.534 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.TypeMapper.getList.debug:159 -<==      Total: 7
2020-04-08 10:09:56.536 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 116
2020-04-08 10:09:56.539 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 10:09:56.579 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 10:09:56.593 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:09:56.594 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 116(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:09:56.636 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 10:09:56.637 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 10:09:56.693 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 10:09:56.693 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 257
2020-04-08 10:09:56.697 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:09:56.700 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:09:56.754 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:09:56.755 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 257(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:09:56.867 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:10:04.429 WARN  [http-nio-1000-exec-4]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for PUT /user/resetPwd
2020-04-08 10:10:04.441 ERROR [http-nio-1000-exec-4]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:10:04.442 ERROR [http-nio-1000-exec-4]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 10:31:40.366 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 19232 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 10:31:40.369 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-08 10:31:40.370 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 10:31:41.195 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$2bae7331] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.233 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.241 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4b18c51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.244 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$eb893093] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.246 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 10:31:41.278 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.292 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.308 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.310 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 10:31:45.311 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.367 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.518 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.523 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.529 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.532 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.533 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.534 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.561 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.580 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.796 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 10:31:45.806 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 10:31:45.812 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 10:31:45.812 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 10:31:45.941 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 10:31:45.941 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5525 ms
2020-04-08 10:31:46.931 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 10:31:46.947 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 10:31:46.949 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.032 seconds (JVM running for 7.984)
2020-04-08 10:31:54.277 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 10:31:54.278 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 10:31:54.293 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 15 ms
2020-04-08 10:31:54.331 WARN  [http-nio-1000-exec-2]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for OPTIONS /login.jsp
2020-04-08 10:31:54.350 ERROR [http-nio-1000-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:31:54.351 ERROR [http-nio-1000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is com.lza.blog.exception.BlogException: 当前账号未登录！
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 10:31:55.829 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 10:31:55.830 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:31:55.831 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:31:55.832 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 10:31:55.832 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 10:31:55.906 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-08 10:31:55.925 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-08 10:31:55.991 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-08 10:31:55.994 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 165
2020-04-08 10:31:56.050 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"D217B2CCC473E2CFB1F1D40F1E5B8826"},"msg":"操作成功!"}
2020-04-08 10:31:56.100 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:31:56.103 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 165(Long), {"code":20000,"data":{"token":"D217B2CCC473E2CFB1F1D40F1E5B8826"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:31:56.205 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:31:56.251 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 10:31:56.252 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:31:56.252 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:31:56.253 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 10:31:56.253 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:31:56.253 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 10:31:56.257 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:31:56.309 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:31:56.310 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:31:56.411 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:31:56.864 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 10:31:56.864 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:31:56.865 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:31:56.865 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 10:31:56.865 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:31:56.877 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:31:56.878 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:31:56.878 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:31:56.878 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:31:56.879 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:31:56.919 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-04-08 10:31:56.919 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==> Parameters: 
2020-04-08 10:31:56.968 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.TypeMapper.getList.debug:159 -<==      Total: 7
2020-04-08 10:31:56.969 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 10:31:56.969 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 10:31:56.970 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 10:31:56.972 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 10:31:57.022 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:31:57.023 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:31:57.024 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 10:31:57.079 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 10:31:57.079 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 10:31:57.124 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:31:57.133 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 10:31:57.133 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 256
2020-04-08 10:31:57.139 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:31:57.191 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:31:57.192 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 256(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:31:57.298 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:32:06.002 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:32:06.002 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:32:06.002 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:32:06.003 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:32:06.003 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3, 4]]
2020-04-08 10:32:06.061 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==>  Preparing: select user_id,version from bl_user WHERE ( user_id = ? user_id = ? ) 
2020-04-08 10:32:06.061 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==> Parameters: 3(Integer), 4(Integer)
2020-04-08 10:32:06.264 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:32:06.265 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/resetPwd(String), [[3, 4]](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'user_id = 4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'user_id = 4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'user_id = 4
	at com.lza.blog.service.impl.UserServiceImpl.resetPwd(UserServiceImpl.java:68)
	at com.lza.blog.controller.UserController.resetPwd(UserController.java:98)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$b46ec66b.resetPwd(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'user_id = 4
(String), PUT(String), 0(Long), null, 127.0.0.1(String)
2020-04-08 10:32:06.372 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:32:06.374 ERROR [http-nio-1000-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'user_id = 4
            )' at line 5
### The error may exist in file [D:\software\JAVA\blog\target\classes\mapper\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select user_id,version from bl_user          WHERE (                 user_id = ?                              user_id = ?             )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'user_id = 4
            )' at line 5
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'user_id = 4
            )' at line 5] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'user_id = 4
            )' at line 5
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy99.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy74.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy88.getUserByIds(Unknown Source)
	at com.lza.blog.service.impl.UserServiceImpl.resetPwd(UserServiceImpl.java:68)
	at com.lza.blog.controller.UserController.resetPwd(UserController.java:98)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$b46ec66b.resetPwd(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:32:06.376 ERROR [http-nio-1000-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:32:06.377 ERROR [http-nio-1000-exec-7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-04-08 10:34:06.053 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 15632 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 10:34:06.057 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-08 10:34:06.058 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 10:34:07.077 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$9d2a1e26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.118 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.127 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$762d3746] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.131 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$5d04db88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.133 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 10:34:07.172 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.187 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.205 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.162 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 10:34:11.162 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.218 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.390 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.395 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.423 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.426 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.427 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.428 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.459 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.479 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.734 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 10:34:11.744 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 10:34:11.750 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 10:34:11.751 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 10:34:11.895 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 10:34:11.895 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5751 ms
2020-04-08 10:34:13.029 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 10:34:13.047 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 10:34:13.050 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.613 seconds (JVM running for 8.727)
2020-04-08 10:34:30.620 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 10:34:30.621 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 10:34:30.637 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-04-08 10:34:30.686 WARN  [http-nio-1000-exec-2]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for OPTIONS /login.jsp
2020-04-08 10:34:30.713 ERROR [http-nio-1000-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:34:30.714 ERROR [http-nio-1000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is com.lza.blog.exception.BlogException: 当前账号未登录！
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 10:34:32.280 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 10:34:32.282 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:34:32.282 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:34:32.284 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 10:34:32.285 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 10:34:32.363 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-08 10:34:32.386 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-08 10:34:32.455 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-08 10:34:32.458 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 178
2020-04-08 10:34:32.524 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"69154A50465C5D4F5D213962863D003E"},"msg":"操作成功!"}
2020-04-08 10:34:32.574 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:34:32.577 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 178(Long), {"code":20000,"data":{"token":"69154A50465C5D4F5D213962863D003E"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:34:32.675 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:34:32.723 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 10:34:32.723 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:34:32.724 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:34:32.724 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 10:34:32.724 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:34:32.724 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 10:34:32.728 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:34:32.779 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:34:32.780 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:34:32.880 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:34:33.354 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 10:34:33.355 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:34:33.355 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:34:33.356 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 10:34:33.356 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:34:33.377 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:34:33.377 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:34:33.378 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:34:33.378 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:34:33.378 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:34:33.414 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-04-08 10:34:33.414 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==> Parameters: 
2020-04-08 10:34:33.464 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getList.debug:159 -<==      Total: 7
2020-04-08 10:34:33.464 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 110
2020-04-08 10:34:33.466 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 10:34:33.466 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 10:34:33.468 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 10:34:33.519 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:34:33.520 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:34:33.522 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 10:34:33.579 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 10:34:33.580 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 10:34:33.618 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:34:33.632 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 10:34:33.632 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 255
2020-04-08 10:34:33.655 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:34:33.711 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:34:33.712 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 255(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:34:33.824 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:34:39.877 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:34:39.877 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:34:39.877 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:34:39.877 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:34:39.878 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[4]]
2020-04-08 10:34:47.632 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==>  Preparing: select user_id,version from bl_user WHERE user_id in ( ? ) 
2020-04-08 10:34:47.633 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==> Parameters: 4(Integer)
2020-04-08 10:34:47.689 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -<==      Total: 1
2020-04-08 10:34:58.288 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-04-08 10:34:58.290 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.update.debug:159 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 4(Integer), 1(Integer)
2020-04-08 10:34:58.398 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-04-08 10:35:12.811 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 32935
2020-04-08 10:35:12.811 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"密码重置成功!"}
2020-04-08 10:35:12.866 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:35:12.867 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/resetPwd(String), [[4]](String), 1(Integer), null, PUT(String), 32935(Long), {"code":20000,"msg":"密码重置成功!"}(String), 127.0.0.1(String)
2020-04-08 10:35:12.971 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:36:21.211 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:36:21.212 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:36:21.212 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:36:21.212 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:36:21.212 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3]]
2020-04-08 10:36:21.268 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==>  Preparing: select user_id,version from bl_user WHERE user_id in ( ? ) 
2020-04-08 10:36:21.269 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==> Parameters: 3(Integer)
2020-04-08 10:36:21.323 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -<==      Total: 1
2020-04-08 10:36:21.377 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-04-08 10:36:21.378 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.update.debug:159 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 3(Integer), 4(Integer)
2020-04-08 10:36:21.482 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-04-08 10:36:21.483 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 272
2020-04-08 10:36:21.483 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"密码重置成功!"}
2020-04-08 10:36:21.535 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:36:21.536 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/resetPwd(String), [[3]](String), 1(Integer), null, PUT(String), 272(Long), {"code":20000,"msg":"密码重置成功!"}(String), 127.0.0.1(String)
2020-04-08 10:36:21.647 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:36:54.959 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:36:54.959 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:36:54.960 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:36:54.960 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:36:54.960 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:36:55.015 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 10:36:55.016 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 10:36:55.068 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 10:36:55.122 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 10:36:55.123 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 10:36:55.175 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 10:36:55.176 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 217
2020-04-08 10:36:55.176 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:36:20","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:34:57","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:36:55.230 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:36:55.231 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 217(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:36:20","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:34:57","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:36:55.335 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:37:09.441 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:37:09.442 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:37:09.442 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:37:09.442 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:37:09.442 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3]]
2020-04-08 10:37:09.496 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==>  Preparing: select user_id,version from bl_user WHERE user_id in ( ? ) 
2020-04-08 10:37:09.497 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==> Parameters: 3(Integer)
2020-04-08 10:37:09.548 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -<==      Total: 1
2020-04-08 10:37:09.603 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-04-08 10:37:09.603 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.update.debug:159 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 3(Integer), 5(Integer)
2020-04-08 10:37:09.713 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-04-08 10:37:09.714 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 273
2020-04-08 10:37:09.714 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"密码重置成功!"}
2020-04-08 10:37:09.767 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:37:09.768 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/resetPwd(String), [[3]](String), 1(Integer), null, PUT(String), 273(Long), {"code":20000,"msg":"密码重置成功!"}(String), 127.0.0.1(String)
2020-04-08 10:37:09.871 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:37:21.464 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:37:21.465 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:37:21.465 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:37:21.465 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:37:21.465 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3, 4]]
2020-04-08 10:37:21.524 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==>  Preparing: select user_id,version from bl_user WHERE user_id in ( ? ? ) 
2020-04-08 10:37:21.525 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==> Parameters: 3(Integer), 4(Integer)
2020-04-08 10:37:21.736 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:37:21.737 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/resetPwd(String), [[3, 4]](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
	at com.lza.blog.service.impl.UserServiceImpl.resetPwd(UserServiceImpl.java:68)
	at com.lza.blog.controller.UserController.resetPwd(UserController.java:98)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$698fba78.resetPwd(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
(String), PUT(String), 0(Long), null, 127.0.0.1(String)
2020-04-08 10:37:21.843 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:37:21.845 ERROR [http-nio-1000-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
            )' at line 5
### The error may exist in file [D:\software\JAVA\blog\target\classes\mapper\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select user_id,version from bl_user          WHERE user_id in (                  ?                               ?             )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
            )' at line 5
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
            )' at line 5] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
            )' at line 5
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy99.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy74.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy88.getUserByIds(Unknown Source)
	at com.lza.blog.service.impl.UserServiceImpl.resetPwd(UserServiceImpl.java:68)
	at com.lza.blog.controller.UserController.resetPwd(UserController.java:98)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$698fba78.resetPwd(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:37:21.847 ERROR [http-nio-1000-exec-2]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:37:21.848 ERROR [http-nio-1000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-04-08 10:37:46.289 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:37:46.290 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:37:46.290 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:37:46.290 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:37:46.290 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3, 4]]
2020-04-08 10:37:46.346 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==>  Preparing: select user_id,version from bl_user WHERE user_id in ( ? ? ) 
2020-04-08 10:37:46.346 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==> Parameters: 3(Integer), 4(Integer)
2020-04-08 10:37:46.459 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:37:46.459 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/resetPwd(String), [[3, 4]](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
	at com.lza.blog.service.impl.UserServiceImpl.resetPwd(UserServiceImpl.java:68)
	at com.lza.blog.controller.UserController.resetPwd(UserController.java:98)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$698fba78.resetPwd(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
(String), PUT(String), 0(Long), {"code":20000,"data":{"token":"69154A50465C5D4F5D213962863D003E"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:37:46.565 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:37:46.565 ERROR [http-nio-1000-exec-3]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
            )' at line 5
### The error may exist in file [D:\software\JAVA\blog\target\classes\mapper\UserMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select user_id,version from bl_user          WHERE user_id in (                  ?                               ?             )
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
            )' at line 5
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
            )' at line 5] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '4
            )' at line 5
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy99.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy74.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy88.getUserByIds(Unknown Source)
	at com.lza.blog.service.impl.UserServiceImpl.resetPwd(UserServiceImpl.java:68)
	at com.lza.blog.controller.UserController.resetPwd(UserController.java:98)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$698fba78.resetPwd(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:37:46.567 ERROR [http-nio-1000-exec-3]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:37:46.567 ERROR [http-nio-1000-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:663)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-04-08 10:38:14.082 INFO  [Thread-17]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-08 10:38:14.086 INFO  [Thread-17]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-08 10:38:17.397 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 28368 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 10:38:17.401 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-08 10:38:17.402 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 10:38:18.231 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$1866080e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.264 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.271 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f169212e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.274 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d840c570] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.277 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 10:38:18.308 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.320 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.336 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.328 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 10:38:22.329 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.380 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.527 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.533 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.538 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.541 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.542 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.544 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.569 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.588 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.804 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 10:38:22.813 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 10:38:22.818 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 10:38:22.819 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 10:38:22.942 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 10:38:22.942 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5464 ms
2020-04-08 10:38:23.924 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 10:38:23.939 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 10:38:23.942 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 6.984 seconds (JVM running for 7.897)
2020-04-08 10:38:36.623 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 10:38:36.624 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 10:38:36.640 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-04-08 10:38:36.687 WARN  [http-nio-1000-exec-5]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for OPTIONS /login.jsp
2020-04-08 10:38:36.708 ERROR [http-nio-1000-exec-5]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:38:36.709 ERROR [http-nio-1000-exec-5]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is com.lza.blog.exception.BlogException: 当前账号未登录！
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doOptions(FrameworkServlet.java:945)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:669)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.lza.blog.exception.BlogException: 当前账号未登录！
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:53)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 10:38:37.992 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 10:38:37.993 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:38:37.993 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:38:37.995 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 10:38:37.995 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 10:38:38.074 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-08 10:38:38.097 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-08 10:38:38.170 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-08 10:38:38.175 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 183
2020-04-08 10:38:38.241 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"0F1675B2117D6F92F7E9A9186F8C8BD7"},"msg":"操作成功!"}
2020-04-08 10:38:38.296 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:38:38.299 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 183(Long), {"code":20000,"data":{"token":"0F1675B2117D6F92F7E9A9186F8C8BD7"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:38:38.401 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:38:38.441 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 10:38:38.441 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:38:38.442 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:38:38.442 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 10:38:38.442 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:38:38.443 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 10:38:38.447 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:38:38.501 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:38:38.502 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:38:38.621 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:38:39.067 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 10:38:39.068 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:38:39.068 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:38:39.069 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 10:38:39.069 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:38:39.080 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:38:39.080 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:38:39.081 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:38:39.081 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:38:39.081 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:38:39.128 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-04-08 10:38:39.128 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==> Parameters: 
2020-04-08 10:38:39.155 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 10:38:39.155 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 10:38:39.178 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.TypeMapper.getList.debug:159 -<==      Total: 7
2020-04-08 10:38:39.179 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 112
2020-04-08 10:38:39.182 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 10:38:39.208 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 10:38:39.234 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:38:39.235 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:38:39.261 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 10:38:39.262 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 10:38:39.313 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 10:38:39.314 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 234
2020-04-08 10:38:39.318 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:37:08","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:34:57","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:38:39.339 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:38:39.372 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:38:39.372 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 234(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:37:08","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:34:57","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:38:39.477 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:38:41.665 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:38:41.665 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:38:41.666 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:38:41.666 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:38:41.666 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3, 4]]
2020-04-08 10:38:41.720 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==>  Preparing: select user_id,version from bl_user WHERE user_id in ( ? , ? ) 
2020-04-08 10:38:41.720 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==> Parameters: 3(Integer), 4(Integer)
2020-04-08 10:38:41.770 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -<==      Total: 2
2020-04-08 10:38:41.824 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-04-08 10:38:41.825 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.update.debug:159 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 3(Integer), 6(Integer)
2020-04-08 10:38:41.927 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-04-08 10:38:41.981 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-04-08 10:38:41.983 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.update.debug:159 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 4(Integer), 2(Integer)
2020-04-08 10:38:42.085 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-04-08 10:38:42.086 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 421
2020-04-08 10:38:42.086 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"密码重置成功!"}
2020-04-08 10:38:42.138 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:38:42.138 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/resetPwd(String), [[3, 4]](String), 1(Integer), null, PUT(String), 421(Long), {"code":20000,"msg":"密码重置成功!"}(String), 127.0.0.1(String)
2020-04-08 10:38:42.240 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:39:03.792 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:39:03.793 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:39:03.793 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:39:03.793 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:39:03.793 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3, 4]]
2020-04-08 10:39:03.844 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==>  Preparing: select user_id,version from bl_user WHERE user_id in ( ? , ? ) 
2020-04-08 10:39:03.845 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -==> Parameters: 3(Integer), 4(Integer)
2020-04-08 10:39:03.897 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getUserByIds.debug:159 -<==      Total: 2
2020-04-08 10:39:03.949 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-04-08 10:39:03.950 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.update.debug:159 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 3(Integer), 7(Integer)
2020-04-08 10:39:04.054 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-04-08 10:39:04.107 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.update.debug:159 -==>  Preparing: update bl_user set version = version + 1 ,password = ? where user_id = ? and version = ? 
2020-04-08 10:39:04.107 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.update.debug:159 -==> Parameters: e10adc3949ba59abbe56e057f20f883e(String), 4(Integer), 3(Integer)
2020-04-08 10:39:04.210 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.update.debug:159 -<==    Updates: 1
2020-04-08 10:39:04.211 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 419
2020-04-08 10:39:04.211 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"密码重置成功!"}
2020-04-08 10:39:04.263 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:39:04.264 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/resetPwd(String), [[3, 4]](String), 1(Integer), null, PUT(String), 419(Long), {"code":20000,"msg":"密码重置成功!"}(String), 127.0.0.1(String)
2020-04-08 10:39:04.369 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:39:36.414 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 10:39:36.415 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:39:36.415 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:39:36.415 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 10:39:36.415 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:39:36.468 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 10:39:36.469 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 10:39:36.519 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 10:39:36.519 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 10:39:36.519 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:39:36.573 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:39:36.573 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:39:36.677 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:40:36.346 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/updateInfo
2020-04-08 10:40:36.346 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:40:36.346 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:36.346 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.updateAdminInfo
2020-04-08 10:40:36.347 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=勤能补拙, comment=null, username=admin, password=null)]
2020-04-08 10:40:36.417 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -==>  Preparing: update bl_admin SET name = ?, header = ?, signature = ?, username = ? where id = ? 
2020-04-08 10:40:36.418 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -==> Parameters: 刘子安(String), http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg(String), 勤能补拙(String), admin(String), 1(Integer)
2020-04-08 10:40:36.543 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.updateAdminInfo.debug:159 -<==    Updates: 1
2020-04-08 10:40:36.544 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 198
2020-04-08 10:40:36.544 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"更新成功"}
2020-04-08 10:40:36.597 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:40:36.598 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/updateInfo(String), [Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=勤能补拙, comment=null, username=admin, password=null)](String), 1(Integer), null, PUT(String), 198(Long), {"code":20000,"msg":"更新成功"}(String), 127.0.0.1(String)
2020-04-08 10:40:36.701 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:40:40.425 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:40:40.426 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:40:40.426 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:40.426 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:40:40.426 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:40:40.489 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 10:40:40.489 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 10:40:40.547 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 10:40:40.603 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 10:40:40.603 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 10:40:40.689 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 10:40:40.689 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 264
2020-04-08 10:40:40.690 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:39:02","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:39:03","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:40:40.744 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:40:40.745 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 264(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:39:02","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:39:03","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:40:40.863 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:40:41.917 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 10:40:41.917 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:40:41.918 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:41.918 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 10:40:41.918 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:40:41.976 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 10:40:41.976 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 10:40:42.029 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 10:40:42.029 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 112
2020-04-08 10:40:42.029 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:40:42.087 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:40:42.088 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:40:42.215 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:40:44.065 WARN  [http-nio-1000-exec-4]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for POST /comment/getByPage
2020-04-08 10:40:44.067 ERROR [http-nio-1000-exec-4]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:40:44.068 ERROR [http-nio-1000-exec-4]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 10:40:46.546 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 10:40:46.546 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:40:46.547 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:46.547 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 10:40:46.547 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:40:46.599 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count,enable from bl_type where deleted = 0 
2020-04-08 10:40:46.600 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-08 10:40:46.652 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 7
2020-04-08 10:40:46.652 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 106
2020-04-08 10:40:46.653 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 10:40:46.705 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:40:46.706 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 106(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:40:46.810 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:40:48.490 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 10:40:48.490 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:40:48.491 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:48.491 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 10:40:48.491 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:40:48.548 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 limit ?,? 
2020-04-08 10:40:48.548 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 10:40:48.600 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-08 10:40:48.652 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-08 10:40:48.653 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 10:40:48.705 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 10:40:48.706 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 216
2020-04-08 10:40:48.708 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:40:48.760 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:40:48.761 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 216(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:40:48.870 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:40:57.007 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 10:40:57.007 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:40:57.008 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:57.008 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 10:40:57.008 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:40:57.060 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-08 10:40:57.061 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-08 10:40:57.112 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-08 10:40:57.112 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 10:40:57.112 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:40:57.164 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:40:57.164 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 105(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:40:57.268 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:40:59.045 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:40:59.046 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:40:59.046 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:59.046 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:40:59.046 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:40:59.097 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2020-04-08 10:40:59.098 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-08 10:40:59.149 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 2
2020-04-08 10:40:59.201 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2020-04-08 10:40:59.201 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-08 10:40:59.252 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-08 10:40:59.253 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 208
2020-04-08 10:40:59.254 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:39:02","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:39:03","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:40:59.307 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-08 10:40:59.308 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 208(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:39:02","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:39:03","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-08 10:40:59.415 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-08 10:41:02.642 WARN  [http-nio-1000-exec-3]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for POST /comment/getByPage
2020-04-08 10:41:02.643 ERROR [http-nio-1000-exec-3]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:41:02.644 ERROR [http-nio-1000-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 10:41:07.950 WARN  [http-nio-1000-exec-10]o.s.w.s.mvc.support.DefaultHandlerExceptionResolver.logException:199 -Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-04-08 10:41:07.951 ERROR [http-nio-1000-exec-10]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:41:07.951 ERROR [http-nio-1000-exec-10]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 10:41:09.582 WARN  [http-nio-1000-exec-1]o.s.w.s.mvc.support.DefaultHandlerExceptionResolver.logException:199 -Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2020-04-08 10:41:09.583 ERROR [http-nio-1000-exec-1]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:41:09.583 ERROR [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-08 10:41:11.160 WARN  [http-nio-1000-exec-5]org.springframework.web.servlet.PageNotFound.noHandlerFound:1250 -No mapping for GET /link/list
2020-04-08 10:41:11.161 ERROR [http-nio-1000-exec-5]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-08 10:41:11.161 ERROR [http-nio-1000-exec-5]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.lza.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:29)
	at com.lza.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:47)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
