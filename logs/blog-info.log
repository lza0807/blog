2020-04-08 00:04:11.744 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 11404 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 00:04:11.790 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 00:04:12.712 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f7edaab8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.749 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.757 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d0f0c3d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.760 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$b7c8681a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.763 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 00:04:12.797 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.814 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:12.831 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.113 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 00:04:17.114 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.164 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.349 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.355 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.361 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.365 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.366 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.367 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.396 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.415 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:04:17.657 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 00:04:17.666 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 00:04:17.673 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 00:04:17.673 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 00:04:17.808 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 00:04:17.808 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5971 ms
2020-04-08 00:04:18.853 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 00:04:18.871 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 00:04:18.873 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.748 seconds (JVM running for 8.768)
2020-04-08 00:04:23.217 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 00:04:23.218 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 00:04:23.231 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2020-04-08 00:04:24.901 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 00:04:24.902 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:04:24.903 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:04:24.904 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 00:04:24.905 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:04:25.141 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 240
2020-04-08 00:04:25.194 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"6B46840D750350D257ED8D9F7691BA60"},"msg":"操作成功!"}
2020-04-08 00:04:25.395 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 00:04:25.395 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:04:25.395 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:04:25.395 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 00:04:25.396 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:04:25.396 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 00:04:25.399 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:04:25.957 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 00:04:25.958 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:04:25.958 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:04:25.958 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 00:04:25.958 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:04:25.970 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 00:04:25.971 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:04:25.971 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:04:25.971 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 00:04:25.971 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:04:26.061 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 104
2020-04-08 00:04:26.064 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":6,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:04:26.065 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 95
2020-04-08 00:04:26.065 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":6,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:04:31.487 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:04:31.488 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:04:31.488 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:04:31.489 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:04:31.490 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:04:31.807 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 320
2020-04-08 00:04:31.814 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366697506082816","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:49","typeName":"springboot","updateTime":"2020-04-07 03:41:25"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:06:12.214 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 00:06:12.215 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:06:12.215 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:06:12.215 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 00:06:12.216 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:06:12.319 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 00:06:12.320 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:06:16.266 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:06:16.267 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:06:16.267 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:06:16.267 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:06:16.268 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:06:16.464 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 198
2020-04-08 00:06:16.464 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:21.617 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 00:07:21.617 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:21.617 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:21.617 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 00:07:21.618 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:07:21.618 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 00:07:21.618 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:07:21.928 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 00:07:21.929 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:21.929 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:21.929 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:07:21.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:07:22.035 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 107
2020-04-08 00:07:22.035 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:07:22.139 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 209
2020-04-08 00:07:22.140 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:24.899 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 00:07:24.899 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:24.899 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:24.900 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 00:07:24.900 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:07:25.247 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 348
2020-04-08 00:07:25.248 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:07:27.833 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:07:27.833 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:07:27.833 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:27.834 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:07:27.834 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:07:28.027 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 194
2020-04-08 00:07:28.028 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 12:57:23"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:30.969 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/get/1247365394201612288
2020-04-08 00:07:30.969 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:30.969 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:30.970 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.get
2020-04-08 00:07:30.970 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247365394201612288]
2020-04-08 00:07:31.067 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 98
2020-04-08 00:07:31.070 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<pre class=\"language-java\"><code> \nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.*;\nimport java.net.URLEncoder;\n \n/**\n * 下载工具类\n * @author czs\n * @date 2020-2-22 11:02:54\n */\npublic class DownloadUtils {\n \n    /**\n     * 根据字符串下载内容\n     *\n     * @param request  request\n     * @param response response\n     * @param fileName 下载的文件名\n     * @param content  字符串内容\n     * @throws IOException\n     */\n    public static void downloadByStringContent(HttpServletRequest request,\n                                               HttpServletResponse response,\n                                               String fileName, String content)\n            throws IOException {\n        //设置向浏览器端传送的文件格式\n        response.setContentType(\"application/octet-stream;charset=utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        if (request.getHeader(\"User-Agent\").toLowerCase().indexOf(\"firefox\") &gt; 0) {\n            // firefox浏览器\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"MSIE\") &gt; 0) {\n\t\t\t// IE浏览器\n            fileName = URLEncoder.encode(fileName, \"UTF-8\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"CHROME\") &gt; 0) {\n            // 谷歌\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        }\n        response.setHeader(\"Content-disposition\", \"attachment; filename=\" + fileName);\n        BufferedInputStream inp = null;\n        OutputStream out = response.getOutputStream();\n        try {\n            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes(\"utf-8\")));\n            int len = 0;\n            byte[] buf = new byte[1024];\n            while ((len = inp.read(buf)) &gt; 0) {\n                out.write(buf, 0, len);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (inp != null) {\n                inp.close();\n            }\n            if (out != null) {\n                out.close();\n            }\n        }\n    }\n \n}</code></pre>\n<pre class=\"language-java\"><code>@ResponseBody\n@RequestMapping(method = RequestMethod.GET, value = \"/exportKtrAndKjb\")\npublic void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {\n    String xml = xxxService.getXmlByXXX(path);\n    String fileName = xxxService.getFileNameByXml(xml);\n    DownloadUtils.downloadByStringContent(request, response, fileName, xml);\n}</code></pre>","blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","blogType":6,"createdTime":"2020-04-07 03:27:38","version":4},"msg":"操作成功!"}
2020-04-08 00:07:35.568 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/update
2020-04-08 00:07:35.568 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:07:35.568 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:35.568 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.updateBlogInfoById
2020-04-08 00:07:35.569 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Blog(blogId=1247365394201612288, blogTitle=java下载字符串, blogImage=http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg, blogContent=<pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>, blogGoods=0, blogRead=0, blogCollection=0, blogType=7, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-04-07 03:27:38, updateTime=null, version=4, deleted=null)]
2020-04-08 00:07:36.245 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 677
2020-04-08 00:07:36.246 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"更新成功!"}
2020-04-08 00:07:36.712 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:07:36.712 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:07:36.712 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:36.712 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:07:36.712 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[BlogVo(typeName=java), BlogVo(typeName=springboot), BlogVo(typeName=springboot), BlogVo(typeName=dubbo), BlogVo(typeName=java)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:07:36.910 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 198
2020-04-08 00:07:36.910 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"springboot","updateTime":"2020-04-07 16:07:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:38.299 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 00:07:38.299 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:38.299 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:38.299 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 00:07:38.299 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:07:38.394 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 96
2020-04-08 00:07:38.395 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":3,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:07:41.766 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:07:41.767 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:07:41.767 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:41.767 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:07:41.767 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:07:41.958 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 192
2020-04-08 00:07:41.958 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"springboot","updateTime":"2020-04-07 16:07:35"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:46.508 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/get/1247365394201612288
2020-04-08 00:07:46.508 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:46.509 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:46.509 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.get
2020-04-08 00:07:46.509 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247365394201612288]
2020-04-08 00:07:46.608 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 100
2020-04-08 00:07:46.609 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<pre class=\"language-java\"><code> \nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.*;\nimport java.net.URLEncoder;\n \n/**\n * 下载工具类\n * @author czs\n * @date 2020-2-22 11:02:54\n */\npublic class DownloadUtils {\n \n    /**\n     * 根据字符串下载内容\n     *\n     * @param request  request\n     * @param response response\n     * @param fileName 下载的文件名\n     * @param content  字符串内容\n     * @throws IOException\n     */\n    public static void downloadByStringContent(HttpServletRequest request,\n                                               HttpServletResponse response,\n                                               String fileName, String content)\n            throws IOException {\n        //设置向浏览器端传送的文件格式\n        response.setContentType(\"application/octet-stream;charset=utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        if (request.getHeader(\"User-Agent\").toLowerCase().indexOf(\"firefox\") &gt; 0) {\n            // firefox浏览器\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"MSIE\") &gt; 0) {\n\t\t\t// IE浏览器\n            fileName = URLEncoder.encode(fileName, \"UTF-8\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"CHROME\") &gt; 0) {\n            // 谷歌\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        }\n        response.setHeader(\"Content-disposition\", \"attachment; filename=\" + fileName);\n        BufferedInputStream inp = null;\n        OutputStream out = response.getOutputStream();\n        try {\n            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes(\"utf-8\")));\n            int len = 0;\n            byte[] buf = new byte[1024];\n            while ((len = inp.read(buf)) &gt; 0) {\n                out.write(buf, 0, len);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (inp != null) {\n                inp.close();\n            }\n            if (out != null) {\n                out.close();\n            }\n        }\n    }\n \n}</code></pre>\n<pre class=\"language-java\"><code>@ResponseBody\n@RequestMapping(method = RequestMethod.GET, value = \"/exportKtrAndKjb\")\npublic void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {\n    String xml = xxxService.getXmlByXXX(path);\n    String fileName = xxxService.getFileNameByXml(xml);\n    DownloadUtils.downloadByStringContent(request, response, fileName, xml);\n}</code></pre>","blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","blogType":7,"createdTime":"2020-04-07 03:27:38","version":5},"msg":"操作成功!"}
2020-04-08 00:07:52.141 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/update
2020-04-08 00:07:52.141 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:07:52.141 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:52.141 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.updateBlogInfoById
2020-04-08 00:07:52.141 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Blog(blogId=1247365394201612288, blogTitle=java下载字符串, blogImage=http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg, blogContent=<pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>, blogGoods=0, blogRead=0, blogCollection=0, blogType=6, blogRemark=null, blogComment=0, blogSource=null, createdTime=2020-04-07 03:27:38, updateTime=null, version=5, deleted=null)]
2020-04-08 00:07:53.297 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1156
2020-04-08 00:07:53.298 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"更新成功!"}
2020-04-08 00:07:54.227 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:07:54.227 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:07:54.228 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:54.228 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:07:54.228 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=5, list=[BlogVo(typeName=springboot), BlogVo(typeName=springboot), BlogVo(typeName=springboot), BlogVo(typeName=dubbo), BlogVo(typeName=java)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:07:54.453 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 226
2020-04-08 00:07:54.454 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:07:56.623 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 00:07:56.624 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:07:56.624 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:07:56.624 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 00:07:56.624 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:07:56.716 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 93
2020-04-08 00:07:56.716 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:15:41.356 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:15:41.357 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:15:41.357 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:15:41.357 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:15:41.357 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:15:43.449 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:15:43.450 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:15:43.450 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:15:43.450 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:15:43.450 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=7}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:15:43.830 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2474
2020-04-08 00:15:43.830 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:15:44.651 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1202
2020-04-08 00:15:44.651 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"}],"pageSize":10,"params":{"typeId":7},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:15:48.699 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:15:48.699 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:15:48.699 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:15:48.700 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:15:48.700 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(typeName=springboot), BlogVo(typeName=springboot)], params={typeId=9}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:15:50.158 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1459
2020-04-08 00:15:50.158 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":9},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 00:15:52.246 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:15:52.246 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:15:52.246 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:15:52.247 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:15:52.247 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=9}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:15:52.694 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 448
2020-04-08 00:15:52.694 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"typeId":9},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 00:15:56.895 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:15:56.896 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:15:56.896 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:15:56.896 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:15:56.896 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={typeId=6}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:15:57.658 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 763
2020-04-08 00:15:57.658 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{"typeId":6},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:16:02.396 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 00:16:02.397 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:16:02.397 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:16:02.397 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 00:16:02.397 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[BlogVo(typeName=java), BlogVo(typeName=java)], params={typeId=6, blogTitle=java}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:16:02.608 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 212
2020-04-08 00:16:02.609 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"}],"pageSize":10,"params":{"typeId":6,"blogTitle":"java"},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:17:10.332 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /about/getByPage
2020-04-08 00:17:10.332 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:17:10.333 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:17:10.333 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AboutController.getByPage
2020-04-08 00:17:10.333 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:17:10.541 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 209
2020-04-08 00:17:10.543 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"aboutId":1,"aboutRead":0,"aboutTitle":"测试1","createdTime":"2020-04-01 14:56:59","enable":0,"updateTime":"2020-04-07 07:06:53"},{"aboutId":2,"aboutRead":0,"aboutTitle":"测试2","createdTime":"2020-04-01 14:57:12","enable":1,"updateTime":"2020-04-07 07:07:00"},{"aboutId":3,"aboutRead":0,"aboutTitle":"测试3","createdTime":"2020-04-07 06:53:43","enable":0,"updateTime":"2020-04-07 06:53:43"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:17:48.051 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 22900 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 00:17:48.055 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 00:17:48.952 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$17a03216] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:48.996 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:49.004 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f0a34b36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:49.007 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d77aef78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:49.009 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 00:17:49.043 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:49.054 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:49.071 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.736 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 00:17:54.737 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.790 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.944 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.951 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.958 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.961 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.963 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.964 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:54.991 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:55.010 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:17:55.254 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 00:17:55.263 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 00:17:55.269 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 00:17:55.269 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 00:17:55.412 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 00:17:55.412 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 7261 ms
2020-04-08 00:17:56.446 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 00:17:56.462 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 00:17:56.464 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 8.953 seconds (JVM running for 9.924)
2020-04-08 00:18:35.755 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 00:18:35.756 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 00:18:35.771 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 15 ms
2020-04-08 00:18:37.333 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 00:18:37.334 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:18:37.334 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:18:37.335 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 00:18:37.336 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:18:37.512 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 179
2020-04-08 00:18:37.561 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"50FCB611EE8D45BD4D9116AC719C7E00"},"msg":"操作成功!"}
2020-04-08 00:18:37.762 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 00:18:37.762 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:18:37.762 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:18:37.762 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 00:18:37.763 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:18:37.763 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 00:18:37.766 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:18:38.882 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:18:38.882 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:18:38.882 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 00:18:38.883 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:18:38.883 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:18:38.883 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:18:38.883 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:18:38.884 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 00:18:38.884 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:18:38.884 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:18:38.986 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 104
2020-04-08 00:18:38.986 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:18:38.991 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 109
2020-04-08 00:18:38.994 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:18:42.836 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 00:18:42.836 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:18:42.836 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:18:42.837 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 00:18:42.837 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@46c7ac09]
2020-04-08 00:18:43.113 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 277
2020-04-08 00:18:43.113 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6Mp-OAadO2AAB28yzuliM121.jpg","msg":"上传成功!"}
2020-04-08 00:19:15.312 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 380 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 00:19:15.316 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 00:19:16.194 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$bba4e762] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.235 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.243 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$94a80082] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.247 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$7b7fa4c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.249 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 00:19:16.284 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.296 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:16.314 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:20.959 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 00:19:20.960 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.011 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.179 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.185 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.192 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.195 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.196 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.196 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.223 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.242 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:19:21.467 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 00:19:21.478 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 00:19:21.484 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 00:19:21.484 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 00:19:21.632 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 00:19:21.632 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 6232 ms
2020-04-08 00:19:22.650 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 00:19:22.667 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 00:19:22.669 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.835 seconds (JVM running for 8.797)
2020-04-08 00:20:13.613 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 00:20:13.613 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 00:20:13.625 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2020-04-08 00:20:16.660 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 00:20:16.661 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:20:16.661 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:16.663 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 00:20:16.663 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:20:16.938 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 278
2020-04-08 00:20:16.987 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"2E89FD3F714534D3E1495D9CF53C4389"},"msg":"操作成功!"}
2020-04-08 00:20:18.017 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 00:20:18.017 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:20:18.017 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:18.018 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 00:20:18.018 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:20:18.018 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 00:20:18.021 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:20:18.415 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 00:20:18.416 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:20:18.416 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:18.416 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 00:20:18.417 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:20:18.680 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 265
2020-04-08 00:20:18.683 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:20:18.715 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:20:18.715 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:20:18.715 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:18.715 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:20:18.715 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:20:18.818 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 103
2020-04-08 00:20:18.818 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"test","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:20:22.029 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 00:20:22.030 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:20:22.030 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:22.030 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 00:20:22.031 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4d81072f]
2020-04-08 00:20:22.319 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 290
2020-04-08 00:20:22.320 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","msg":"上传成功!"}
2020-04-08 00:20:23.955 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/updateInfo
2020-04-08 00:20:23.955 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:20:23.956 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:23.956 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.updateAdminInfo
2020-04-08 00:20:23.956 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=null)]
2020-04-08 00:20:24.117 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 162
2020-04-08 00:20:24.117 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"更新成功"}
2020-04-08 00:20:36.565 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:20:36.566 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:20:36.566 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:36.566 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:20:36.566 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:20:36.663 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 98
2020-04-08 00:20:36.663 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:20:45.359 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:20:45.359 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:20:45.360 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:20:45.360 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:20:45.360 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:20:45.462 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 103
2020-04-08 00:20:45.462 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:21:17.905 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 20592 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 00:21:17.910 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 00:21:18.791 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$de1094f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.826 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.834 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b713ae13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.837 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$9deb5255] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.840 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 00:21:18.874 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.885 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:18.903 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:24.991 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 00:21:24.991 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.056 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.215 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.220 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.226 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.230 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.231 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.232 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.258 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.277 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 00:21:25.510 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 00:21:25.520 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 00:21:25.526 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 00:21:25.526 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 00:21:25.662 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 00:21:25.663 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 7679 ms
2020-04-08 00:21:26.719 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 00:21:26.735 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 00:21:26.738 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 9.32 seconds (JVM running for 10.268)
2020-04-08 00:24:52.995 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 00:24:52.996 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 00:24:53.010 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 13 ms
2020-04-08 00:24:54.415 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 00:24:54.416 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:24:54.416 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:24:54.418 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 00:24:54.418 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:24:54.599 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 184
2020-04-08 00:24:54.662 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"440F6F847AF9FFCFDFB42487152093E2"},"msg":"操作成功!"}
2020-04-08 00:24:54.860 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 00:24:54.860 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:24:54.861 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:24:54.861 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 00:24:54.862 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:24:54.862 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 00:24:54.867 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:24:55.493 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 00:24:55.494 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:24:55.494 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:24:55.494 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 00:24:55.494 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:24:55.506 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:24:55.506 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:24:55.507 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:24:55.507 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:24:55.507 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:24:55.592 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 99
2020-04-08 00:24:55.596 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 00:24:55.725 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 219
2020-04-08 00:24:55.731 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"无","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-06 14:14:49","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:25:04.378 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/get/3
2020-04-08 00:25:04.378 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:25:04.378 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:04.379 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getById
2020-04-08 00:25:04.379 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[3]
2020-04-08 00:25:04.475 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 97
2020-04-08 00:25:04.475 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"createdTime":"2020-04-06 14:11:18","header":"无","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-06 14:14:49","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111","version":3},"msg":"操作成功!"}
2020-04-08 00:25:07.552 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 00:25:07.552 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:25:07.553 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:07.553 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 00:25:07.553 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@64f56f64]
2020-04-08 00:25:07.842 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 290
2020-04-08 00:25:07.842 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","msg":"上传成功!"}
2020-04-08 00:25:11.230 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/update
2020-04-08 00:25:11.231 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:25:11.231 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:11.231 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.update
2020-04-08 00:25:11.231 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-06 14:14:49, version=3, deleted=null)]
2020-04-08 00:25:11.383 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 153
2020-04-08 00:25:11.384 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"修改成功！"}
2020-04-08 00:25:11.812 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:25:11.812 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:25:11.812 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:11.813 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:25:11.813 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=无, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-06 14:14:49, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:25:12.038 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 226
2020-04-08 00:25:12.038 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:25:19.065 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:25:19.065 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:25:19.065 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:19.066 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:25:19.066 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:25:19.166 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 101
2020-04-08 00:25:19.166 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:25:20.023 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:25:20.023 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:25:20.023 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:20.024 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:25:20.024 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:25:20.474 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 451
2020-04-08 00:25:20.475 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:25:37.559 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/get/3
2020-04-08 00:25:37.559 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:25:37.560 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:37.560 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getById
2020-04-08 00:25:37.560 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[3]
2020-04-08 00:25:37.664 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 00:25:37.664 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"操作成功!"}
2020-04-08 00:25:53.024 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/get/3
2020-04-08 00:25:53.025 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:25:53.025 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:25:53.025 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getById
2020-04-08 00:25:53.025 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[3]
2020-04-08 00:25:53.119 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 95
2020-04-08 00:25:53.119 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"操作成功!"}
2020-04-08 00:27:13.992 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 00:27:13.992 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:13.992 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:13.993 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 00:27:13.993 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@59ea446]
2020-04-08 00:27:14.202 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 210
2020-04-08 00:27:14.202 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","msg":"上传成功!"}
2020-04-08 00:27:16.240 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/save
2020-04-08 00:27:16.241 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:16.241 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:16.241 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.save
2020-04-08 00:27:16.241 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[User(userId=null, username=admin11, password=21232f297a57a5a743894a0e4a801fc3, name=test11, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png, nickname=测试, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-04-08 00:27:16.386 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 146
2020-04-08 00:27:16.386 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"添加成功！"}
2020-04-08 00:27:16.861 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:27:16.861 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:16.862 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:16.862 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:27:16.862 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-07 16:25:11, version=null, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:27:17.314 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 453
2020-04-08 00:27:17.314 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:27:42.314 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:27:42.314 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:27:42.314 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:42.314 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:27:42.315 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:27:42.411 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 97
2020-04-08 00:27:42.411 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:27:50.428 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:27:50.429 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:50.429 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:50.429 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:27:50.429 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:27:50.664 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 236
2020-04-08 00:27:50.665 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:27:55.471 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:27:55.471 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:55.471 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:55.471 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:27:55.471 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-07 16:25:11, version=null, deleted=null), User(userId=4, username=admin11, password=null, name=test11, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png, nickname=测试, userEmail=2@qq.com, createdTime=2020-04-07 16:27:16, updateTime=2020-04-07 16:27:16, version=null, deleted=null)], params={sex=2}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:27:55.673 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 202
2020-04-08 00:27:55.673 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"sex":2},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 00:27:57.907 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:27:57.908 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:27:57.908 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:27:57.908 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:27:57.908 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={sex=1}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:27:58.130 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 223
2020-04-08 00:27:58.130 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{"sex":1},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:28:19.011 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 00:28:19.012 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 00:28:19.012 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:28:19.012 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 00:28:19.012 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[User(userId=3, username=liuzian111, password=null, name=liuzian1, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg, nickname=昵称刘子安, userEmail=2282816304@qq.com, createdTime=2020-04-06 14:11:18, updateTime=2020-04-07 16:25:11, version=null, deleted=null), User(userId=4, username=admin11, password=null, name=test11, sex=1, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png, nickname=测试, userEmail=2@qq.com, createdTime=2020-04-07 16:27:16, updateTime=2020-04-07 16:27:16, version=null, deleted=null)], params={sex=1, nickname=刘}, sortColumn=null, sortMethod=asc)]
2020-04-08 00:28:19.199 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 188
2020-04-08 00:28:19.199 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"}],"pageSize":10,"params":{"sex":1,"nickname":"刘"},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功!"}
2020-04-08 00:28:25.716 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 00:28:25.717 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 00:28:25.717 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:28:25.717 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 00:28:25.717 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 00:28:25.812 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 96
2020-04-08 00:28:25.813 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 00:29:05.018 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/updatePassword
2020-04-08 00:29:05.018 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:29:05.018 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:29:05.018 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.updatePassword
2020-04-08 00:29:05.018 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=698d51a19d8a121ce581499d7b701668)]
2020-04-08 00:29:05.510 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 492
2020-04-08 00:29:05.510 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"修改成功！"}
2020-04-08 00:31:15.564 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/updatePassword
2020-04-08 00:31:15.565 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:31:15.565 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:31:15.565 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.updatePassword
2020-04-08 00:31:15.565 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:31:15.803 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 239
2020-04-08 00:31:15.803 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"修改成功！"}
2020-04-08 00:31:53.233 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/updatePassword
2020-04-08 00:31:53.233 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 00:31:53.233 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 00:31:53.233 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.updatePassword
2020-04-08 00:31:53.233 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=加分, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 00:31:53.477 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 245
2020-04-08 00:31:53.477 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"修改成功！"}
2020-04-08 10:09:26.484 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 18856 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 10:09:26.491 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 10:09:27.422 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$100fa1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.461 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.469 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$da04133b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.472 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$c0dbb77d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.474 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 10:09:27.505 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.518 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:27.534 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.622 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 10:09:31.622 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.672 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.818 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.823 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.828 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.831 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.833 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.833 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.858 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:31.876 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:09:32.079 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 10:09:32.088 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 10:09:32.093 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 10:09:32.094 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 10:09:32.219 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 10:09:32.219 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5611 ms
2020-04-08 10:09:33.174 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 10:09:33.190 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 10:09:33.193 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.182 seconds (JVM running for 8.122)
2020-04-08 10:09:55.232 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 10:09:55.232 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 10:09:55.246 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 14 ms
2020-04-08 10:09:55.327 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 10:09:55.328 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:09:55.329 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:09:55.330 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 10:09:55.331 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 10:09:55.508 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 181
2020-04-08 10:09:55.551 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"B2186712409E70E48CA244D6A447CC0C"},"msg":"操作成功!"}
2020-04-08 10:09:55.765 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 10:09:55.766 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:09:55.766 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:09:55.767 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 10:09:55.767 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:09:55.768 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 3
2020-04-08 10:09:55.772 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:09:56.420 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 10:09:56.421 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:09:56.421 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:09:56.421 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 10:09:56.422 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:09:56.436 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:09:56.437 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:09:56.437 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:09:56.438 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:09:56.438 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:09:56.536 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 116
2020-04-08 10:09:56.539 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 10:09:56.693 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 257
2020-04-08 10:09:56.697 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:31:40.366 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 19232 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 10:31:40.370 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 10:31:41.195 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$2bae7331] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.233 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.241 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$4b18c51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.244 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$eb893093] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.246 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 10:31:41.278 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.292 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:41.308 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.310 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 10:31:45.311 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.367 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.518 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.523 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.529 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.532 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.533 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.534 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.561 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.580 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:31:45.796 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 10:31:45.806 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 10:31:45.812 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 10:31:45.812 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 10:31:45.941 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 10:31:45.941 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5525 ms
2020-04-08 10:31:46.931 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 10:31:46.947 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 10:31:46.949 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.032 seconds (JVM running for 7.984)
2020-04-08 10:31:54.277 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 10:31:54.278 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 10:31:54.293 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 15 ms
2020-04-08 10:31:55.829 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 10:31:55.830 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:31:55.831 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:31:55.832 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 10:31:55.832 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 10:31:55.994 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 165
2020-04-08 10:31:56.050 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"D217B2CCC473E2CFB1F1D40F1E5B8826"},"msg":"操作成功!"}
2020-04-08 10:31:56.251 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 10:31:56.252 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:31:56.252 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:31:56.253 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 10:31:56.253 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:31:56.253 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 10:31:56.257 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:31:56.864 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 10:31:56.864 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:31:56.865 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:31:56.865 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 10:31:56.865 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:31:56.877 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:31:56.878 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:31:56.878 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:31:56.878 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:31:56.879 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:31:56.969 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 10:31:56.972 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 10:31:57.133 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 256
2020-04-08 10:31:57.139 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:32:06.002 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:32:06.002 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:32:06.002 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:32:06.003 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:32:06.003 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3, 4]]
2020-04-08 10:34:06.053 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 15632 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 10:34:06.058 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 10:34:07.077 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$9d2a1e26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.118 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.127 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$762d3746] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.131 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$5d04db88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.133 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 10:34:07.172 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.187 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:07.205 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.162 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 10:34:11.162 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.218 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.390 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.395 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.423 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.426 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.427 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.428 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.459 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.479 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:34:11.734 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 10:34:11.744 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 10:34:11.750 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 10:34:11.751 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 10:34:11.895 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 10:34:11.895 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5751 ms
2020-04-08 10:34:13.029 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 10:34:13.047 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 10:34:13.050 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.613 seconds (JVM running for 8.727)
2020-04-08 10:34:30.620 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 10:34:30.621 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 10:34:30.637 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-04-08 10:34:32.280 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 10:34:32.282 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:34:32.282 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:34:32.284 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 10:34:32.285 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 10:34:32.458 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 178
2020-04-08 10:34:32.524 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"69154A50465C5D4F5D213962863D003E"},"msg":"操作成功!"}
2020-04-08 10:34:32.723 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 10:34:32.723 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:34:32.724 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:34:32.724 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 10:34:32.724 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:34:32.724 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 10:34:32.728 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:34:33.354 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 10:34:33.355 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:34:33.355 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:34:33.356 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 10:34:33.356 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:34:33.377 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:34:33.377 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:34:33.378 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:34:33.378 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:34:33.378 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:34:33.464 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 110
2020-04-08 10:34:33.468 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 10:34:33.632 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 255
2020-04-08 10:34:33.655 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-07 16:25:11","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-07 16:27:16","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:34:39.877 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:34:39.877 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:34:39.877 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:34:39.877 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:34:39.878 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[4]]
2020-04-08 10:35:12.811 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 32935
2020-04-08 10:35:12.811 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"密码重置成功!"}
2020-04-08 10:36:21.211 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:36:21.212 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:36:21.212 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:36:21.212 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:36:21.212 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3]]
2020-04-08 10:36:21.483 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 272
2020-04-08 10:36:21.483 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"密码重置成功!"}
2020-04-08 10:36:54.959 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:36:54.959 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:36:54.960 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:36:54.960 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:36:54.960 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:36:55.176 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 217
2020-04-08 10:36:55.176 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:36:20","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:34:57","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:37:09.441 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:37:09.442 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:37:09.442 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:37:09.442 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:37:09.442 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3]]
2020-04-08 10:37:09.714 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 273
2020-04-08 10:37:09.714 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"密码重置成功!"}
2020-04-08 10:37:21.464 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:37:21.465 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:37:21.465 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:37:21.465 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:37:21.465 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3, 4]]
2020-04-08 10:37:46.289 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:37:46.290 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:37:46.290 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:37:46.290 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:37:46.290 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3, 4]]
2020-04-08 10:38:14.082 INFO  [Thread-17]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-08 10:38:14.086 INFO  [Thread-17]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-08 10:38:17.397 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 28368 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 10:38:17.402 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 10:38:18.231 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$1866080e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.264 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.271 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f169212e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.274 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d840c570] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.277 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 10:38:18.308 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.320 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:18.336 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.328 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 10:38:22.329 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.380 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.527 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.533 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.538 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.541 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.542 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.544 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.569 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.588 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 10:38:22.804 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 10:38:22.813 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 10:38:22.818 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 10:38:22.819 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 10:38:22.942 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 10:38:22.942 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5464 ms
2020-04-08 10:38:23.924 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 10:38:23.939 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 10:38:23.942 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 6.984 seconds (JVM running for 7.897)
2020-04-08 10:38:36.623 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 10:38:36.624 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 10:38:36.640 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2020-04-08 10:38:37.992 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 10:38:37.993 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:38:37.993 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:38:37.995 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 10:38:37.995 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 10:38:38.175 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 183
2020-04-08 10:38:38.241 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"0F1675B2117D6F92F7E9A9186F8C8BD7"},"msg":"操作成功!"}
2020-04-08 10:38:38.441 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 10:38:38.441 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:38:38.442 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:38:38.442 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 10:38:38.442 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:38:38.443 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 10:38:38.447 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:38:39.067 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 10:38:39.068 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:38:39.068 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:38:39.069 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 10:38:39.069 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:38:39.080 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:38:39.080 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:38:39.081 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:38:39.081 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:38:39.081 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:38:39.179 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 112
2020-04-08 10:38:39.182 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 10:38:39.314 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 234
2020-04-08 10:38:39.318 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:37:08","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:34:57","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:38:41.665 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:38:41.665 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:38:41.666 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:38:41.666 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:38:41.666 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3, 4]]
2020-04-08 10:38:42.086 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 421
2020-04-08 10:38:42.086 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"密码重置成功!"}
2020-04-08 10:39:03.792 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/resetPwd
2020-04-08 10:39:03.793 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:39:03.793 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:39:03.793 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.resetPwd
2020-04-08 10:39:03.793 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[3, 4]]
2020-04-08 10:39:04.211 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 419
2020-04-08 10:39:04.211 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"密码重置成功!"}
2020-04-08 10:39:36.414 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 10:39:36.415 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:39:36.415 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:39:36.415 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 10:39:36.415 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:39:36.519 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 10:39:36.519 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"加分","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:40:36.346 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/updateInfo
2020-04-08 10:40:36.346 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 10:40:36.346 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:36.346 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.updateAdminInfo
2020-04-08 10:40:36.347 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=1, name=刘子安, header=http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg, signature=勤能补拙, comment=null, username=admin, password=null)]
2020-04-08 10:40:36.544 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 198
2020-04-08 10:40:36.544 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"更新成功"}
2020-04-08 10:40:40.425 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:40:40.426 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:40:40.426 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:40.426 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:40:40.426 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:40:40.689 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 264
2020-04-08 10:40:40.690 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:39:02","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:39:03","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:40:41.917 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 10:40:41.917 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:40:41.918 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:41.918 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 10:40:41.918 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:40:42.029 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 112
2020-04-08 10:40:42.029 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:40:46.546 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/listBack
2020-04-08 10:40:46.546 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:40:46.547 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:46.547 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getAllType
2020-04-08 10:40:46.547 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:40:46.652 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 106
2020-04-08 10:40:46.653 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":2,"typeId":6,"typeName":"java"},{"enable":1,"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"enable":1,"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"enable":1,"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"enable":1,"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"enable":1,"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"enable":1,"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 10:40:48.490 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-08 10:40:48.490 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:40:48.491 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:48.491 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-08 10:40:48.491 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:40:48.706 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 216
2020-04-08 10:40:48.708 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":0,"blogTitle":"java下载字符串","createdTime":"2020-04-07 03:27:38","typeName":"java","updateTime":"2020-04-07 16:07:52"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":0,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2020-04-07 03:32:55","typeName":"springboot","updateTime":"2020-04-07 16:06:42"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":0,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-04-07 07:11:31","typeName":"springboot","updateTime":"2020-04-07 07:11:31"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":0,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-07 07:18:07"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":0,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-07 07:20:06"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-08 10:40:57.007 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-08 10:40:57.007 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 10:40:57.008 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:57.008 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-08 10:40:57.008 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 10:40:57.112 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 10:40:57.112 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 10:40:59.045 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 10:40:59.046 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 10:40:59.046 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 10:40:59.046 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 10:40:59.046 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 10:40:59.253 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 208
2020-04-08 10:40:59.254 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:39:02","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:39:03","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 11:40:46.798 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 11:40:46.799 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:40:46.800 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:40:46.800 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 11:40:46.800 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 11:40:48.937 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2139
2020-04-08 11:40:48.939 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"5E9F32021EC46D51B6C3D67FFB95E710"},"msg":"操作成功!"}
2020-04-08 11:40:49.115 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 11:40:49.115 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 11:40:49.115 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:40:49.115 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 11:40:49.116 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 11:40:49.116 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 11:40:49.116 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 11:40:49.658 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 11:40:49.659 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 11:40:49.659 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:40:49.659 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 11:40:49.659 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 11:40:49.764 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 106
2020-04-08 11:40:49.765 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 11:51:01.325 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 11:51:01.325 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 11:51:01.326 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:51:01.326 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 11:51:01.326 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 11:51:01.327 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 11:51:01.327 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 11:51:01.654 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 11:51:01.655 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 11:51:01.655 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:51:01.655 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 11:51:01.656 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 11:51:01.761 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 107
2020-04-08 11:51:01.761 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 11:51:08.838 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 11:51:08.839 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 11:51:08.840 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:51:08.840 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 11:51:08.840 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 11:51:08.841 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 3
2020-04-08 11:51:08.841 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 11:51:09.193 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 11:51:09.193 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 11:51:09.193 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:51:09.193 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 11:51:09.194 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 11:51:09.301 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 108
2020-04-08 11:51:09.302 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 11:52:25.314 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 29060 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 11:52:25.317 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 11:52:26.190 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$6581c8fe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:26.226 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:26.234 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3e84e21e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:26.237 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$255c8660] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:26.239 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 11:52:26.279 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:26.290 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:26.313 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.368 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 11:52:30.368 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.421 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.666 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.671 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.678 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.681 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.683 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.684 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.711 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.732 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:52:30.953 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 11:52:30.965 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 11:52:30.971 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 11:52:30.971 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 11:52:31.109 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 11:52:31.110 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5725 ms
2020-04-08 11:52:32.382 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 11:52:32.397 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 11:52:32.400 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.557 seconds (JVM running for 8.523)
2020-04-08 11:52:32.473 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 11:52:32.473 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 11:52:32.483 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 10 ms
2020-04-08 11:52:34.196 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 11:52:34.197 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:52:34.197 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:52:34.198 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 11:52:34.198 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 11:52:34.356 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 160
2020-04-08 11:52:34.401 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"62B701C9871F66E13DF563A4CB466B84"},"msg":"操作成功!"}
2020-04-08 11:52:34.600 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 11:52:34.600 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 11:52:34.600 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:52:34.600 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 11:52:34.601 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 11:52:34.601 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 11:52:34.604 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 11:52:35.218 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 11:52:35.218 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 11:52:35.218 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:52:35.218 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 11:52:35.219 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 11:52:35.231 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:52:35.231 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:52:35.232 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:52:35.232 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:52:35.232 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:52:35.330 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 112
2020-04-08 11:52:35.333 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 11:52:35.473 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 242
2020-04-08 11:52:35.478 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 12:39:27","logId":4,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/test/textException/1"},{"createdTime":"2020-03-28 17:29:06","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:29:53","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:16","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:41","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:36:33","logId":9,"logIp":"127.0.0.1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:36)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$87d9a28c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:43:53","logId":10,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19840,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:44:28","logId":11,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3772,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:45:37","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-03-29 09:38:56","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"980868099BD0DEF6A4A983A3D7E8C466\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":173,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":676,"totalPage":68},"msg":"操作成功!"}
2020-04-08 11:52:46.326 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:52:46.327 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:52:46.327 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:52:46.327 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:52:46.328 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=2, pageSize=10, totalPage=68, totalCount=676, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:52:46.541 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 215
2020-04-08 11:52:46.542 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":2,"index":10,"list":[{"createdTime":"2020-03-29 09:40:34","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=null, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":40002,\"msg\":\"类型名称必填!\"}","logStatus":1,"logTime":3,"logUrl":"/type/save"},{"createdTime":"2020-03-29 09:41:11","logId":15,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":233,"logUrl":"/type/save"},{"createdTime":"2020-03-29 09:41:23","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=springboot, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":228,"logUrl":"/type/save"},{"createdTime":"2020-03-29 09:42:46","logId":17,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=springcloud, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":233,"logUrl":"/type/save"},{"createdTime":"2020-03-29 09:42:51","logId":18,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=docker, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":240,"logUrl":"/type/save"},{"createdTime":"2020-03-29 09:44:57","logId":19,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"980868099BD0DEF6A4A983A3D7E8C466\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":93,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 10:00:38","logId":20,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"D769F644513CBB31ABA15F02646E9CF1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":5859,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 10:00:46","logId":21,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-03-29 10:00:57","logId":22,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=spring, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":239,"logUrl":"/type/save"},{"createdTime":"2020-03-29 10:01:31","logId":23,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":95,"logUrl":"/type/listBack"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":678,"totalPage":68},"msg":"操作成功!"}
2020-04-08 11:52:48.849 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:52:48.849 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:52:48.850 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:52:48.850 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:52:48.850 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=2, pageSize=50, totalPage=14, totalCount=678, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:52:49.130 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 281
2020-04-08 11:52:49.131 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":2,"index":50,"list":[{"createdTime":"2020-03-29 12:37:11","logId":54,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"90D78D0A97CF5E574EADE9558E8FC99A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9567,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 12:38:20","logId":55,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"90D78D0A97CF5E574EADE9558E8FC99A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":98,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 12:38:35","logId":56,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"deleted\":1,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\",\"version\":6},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3298,"logUrl":"/type/getTypeInfoById/6"},{"createdTime":"2020-03-29 14:43:01","logId":57,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"511405CFF09080EE8B72966F4F0851B4\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1729,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:37:49","logId":58,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":183,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:38:46","logId":59,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:40:24","logId":60,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=百度, linkUrl=www.baidu.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":169,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:48:59","logId":61,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":114,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:52:22","logId":62,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=github, linkUrl=https://github.com/lza0807/blog, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":167,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:52:26","logId":63,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:55:23","logId":64,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=http://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":182,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:55:59","logId":65,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=https://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":170,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:14","logId":66,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":160,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:33","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:42","logId":68,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":162,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:08:24","logId":69,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8114F6CC587F8BEFCD8E75D9A0DC96CA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":185,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:08:33","logId":70,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:09:07","logId":71,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:12:05","logId":72,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"6671A8FF053115C1AD7A1D4B1C1C6E6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":187,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:12:29","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$ecfbba46.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:17","logId":74,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"06B1B7ECB404884D7936FDF312998D6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":192,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:16:29","logId":75,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:44","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:10","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8774B1BA86D88B426F29106A266D32F8\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":184,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:18:17","logId":78,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功！\"}","logStatus":1,"logTime":153,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:55","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":103,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:14","logId":80,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:19:16","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":99,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:29","logId":82,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 07:19:28\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":100,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:20:10","logId":83,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=4, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":154,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:42:01","logId":84,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2114,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:21","logId":85,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:42","logId":86,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:39","logId":87,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"65E653A639ED5AF2E3CB7BAA210E7F85\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":200,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:43:44","logId":88,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:48","logId":89,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"https://www.baidu.com\",\"version\":5},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:43:51","logId":90,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[23]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":110,"logUrl":"/link/getLinkInfoById/23"},{"createdTime":"2020-03-30 07:43:56","logId":91,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":115,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 08:40:05","logId":92,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"74C82AEFA2EA99500EF57D19C94F9CCB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":188,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 08:40:43","logId":93,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:42:56","logId":94,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=liuzian1, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":186,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:00","logId":95,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"liuzian1\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:43:27","logId":96,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=刘子安, header=test, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":165,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:29","logId":97,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:10:54","logId":98,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=1)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":18134,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-30 09:11:24","logId":99,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:12:03","logId":100,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":5093,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-31 10:41:49","logId":101,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4F7491A545D4BA8FEB4B67CA944FE0BA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":201,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:27","logId":102,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3685,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:32","logId":103,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":349,"logUrl":"/admin/login"}],"pageSize":50,"params":{},"sortMethod":"asc","totalCount":679,"totalPage":14},"msg":"操作成功!"}
2020-04-08 11:52:57.918 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:52:57.918 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:52:57.918 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:52:57.919 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:52:57.919 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=2, pageSize=50, totalPage=14, totalCount=679, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=1}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:52:58.195 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 277
2020-04-08 11:52:58.195 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":2,"index":50,"list":[{"createdTime":"2020-03-30 06:52:22","logId":62,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=github, linkUrl=https://github.com/lza0807/blog, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":167,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:52:26","logId":63,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:55:23","logId":64,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=http://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":182,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:55:59","logId":65,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=https://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":170,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:14","logId":66,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":160,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:33","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:42","logId":68,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":162,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:08:24","logId":69,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8114F6CC587F8BEFCD8E75D9A0DC96CA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":185,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:12:05","logId":72,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"6671A8FF053115C1AD7A1D4B1C1C6E6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":187,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:16:17","logId":74,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"06B1B7ECB404884D7936FDF312998D6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":192,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:18:10","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8774B1BA86D88B426F29106A266D32F8\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":184,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:18:17","logId":78,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功！\"}","logStatus":1,"logTime":153,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:55","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":103,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:14","logId":80,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:19:16","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":99,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:29","logId":82,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 07:19:28\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":100,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:20:10","logId":83,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=4, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":154,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:42:01","logId":84,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2114,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:21","logId":85,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:42","logId":86,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:39","logId":87,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"65E653A639ED5AF2E3CB7BAA210E7F85\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":200,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:43:44","logId":88,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:48","logId":89,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"https://www.baidu.com\",\"version\":5},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:43:51","logId":90,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[23]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":110,"logUrl":"/link/getLinkInfoById/23"},{"createdTime":"2020-03-30 07:43:56","logId":91,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":115,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 08:40:05","logId":92,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"74C82AEFA2EA99500EF57D19C94F9CCB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":188,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 08:40:43","logId":93,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:42:56","logId":94,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=liuzian1, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":186,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:00","logId":95,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"liuzian1\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:43:27","logId":96,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=刘子安, header=test, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":165,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:29","logId":97,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:10:54","logId":98,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=1)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":18134,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-30 09:11:24","logId":99,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:12:03","logId":100,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":5093,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-31 10:41:49","logId":101,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4F7491A545D4BA8FEB4B67CA944FE0BA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":201,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:27","logId":102,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3685,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:32","logId":103,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":349,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:39:33","logId":104,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":105,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:42:05","logId":105,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"604FFB20D38061334315D1DC417F0564\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":512,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 13:08:53","logId":109,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=测试test, blogImage=null, blogContent=ceshi, blogGoods=null, blogRead=null, blogCollection=0, blogType=6, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":338,"logUrl":"/blog/save"},{"createdTime":"2020-03-31 13:12:45","logId":110,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"35109532DACB9C577A990565CD46C5EB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":175,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 13:12:50","logId":111,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=测试test2, blogImage=null, blogContent=ceshi2, blogGoods=null, blogRead=null, blogCollection=null, blogType=6, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":366,"logUrl":"/blog/save"},{"createdTime":"2020-03-31 13:13:26","logId":112,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1244974949362372608]","logResult":"{\"code\":20000,\"data\":{\"blogCollection\":0,\"blogComment\":0,\"blogContent\":\"ceshi\",\"blogGoods\":0,\"blogId\":\"1244974949362372608\",\"blogRead\":0,\"blogTitle\":\"测试test\",\"blogType\":6,\"createdTime\":\"2020-03-31 13:08:52\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/blog/get/1244974949362372608"},{"createdTime":"2020-03-31 13:16:04","logId":113,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Blog(blogId=1244974949362372608, blogTitle=测试test3333333, blogImage=null, blogContent=null, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功!\"}","logStatus":1,"logTime":171,"logUrl":"/blog/update"},{"createdTime":"2020-03-31 13:16:47","logId":114,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Blog(blogId=1244974949362372608, blogTitle=测试test3333333, blogImage=null, blogContent=null, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功!\"}","logStatus":1,"logTime":345,"logUrl":"/blog/update"},{"createdTime":"2020-03-31 13:25:24","logId":117,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[Page(currentPage=1, pageSize=1, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":1,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2221,"logUrl":"/blog/getByPage"},{"createdTime":"2020-03-31 13:25:33","logId":118,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":2,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":214,"logUrl":"/blog/getByPage"},{"createdTime":"2020-03-31 13:29:28","logId":119,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8C46B7A2EA1C0F0BE9DD4BD27192C90A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":190,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 13:29:34","logId":120,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[Page(currentPage=1, pageSize=2, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1244974949362372608\",\"blogRead\":0,\"blogTitle\":\"测试test3333333\",\"createdTime\":\"2020-03-31 13:08:52\",\"typeName\":\"java\",\"updateTime\":\"2020-03-31 13:16:46\"},{\"blogCollection\":0,\"blogComment\":0,\"blogGoods\":0,\"blogId\":\"1244975944720973824\",\"blogRead\":0,\"blogTitle\":\"测试test2\",\"createdTime\":\"2020-03-31 13:12:50\",\"typeName\":\"java\",\"updateTime\":\"2020-03-31 13:12:50\"}],\"pageSize\":2,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":2,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":249,"logUrl":"/blog/getByPage"},{"createdTime":"2020-03-31 13:38:43","logId":121,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"5B4A8E3F457E4B2F9C1EB7966AEED31D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":324,"logUrl":"/admin/login"}],"pageSize":50,"params":{"logStatus":1},"sortMethod":"asc","totalCount":614,"totalPage":13},"msg":"操作成功!"}
2020-04-08 11:53:02.415 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:53:02.416 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:53:02.416 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:53:02.416 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:53:02.416 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=2, pageSize=50, totalPage=13, totalCount=614, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=0}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:53:02.731 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 316
2020-04-08 11:53:02.732 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":2,"index":50,"list":[{"createdTime":"2020-03-29 12:37:11","logId":54,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"90D78D0A97CF5E574EADE9558E8FC99A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9567,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 12:38:20","logId":55,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"90D78D0A97CF5E574EADE9558E8FC99A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":98,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 12:38:35","logId":56,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"deleted\":1,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\",\"version\":6},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3298,"logUrl":"/type/getTypeInfoById/6"},{"createdTime":"2020-03-29 14:43:01","logId":57,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"511405CFF09080EE8B72966F4F0851B4\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1729,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:37:49","logId":58,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":183,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:38:46","logId":59,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:40:24","logId":60,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=百度, linkUrl=www.baidu.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":169,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:48:59","logId":61,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":114,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:52:22","logId":62,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=github, linkUrl=https://github.com/lza0807/blog, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":167,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:52:26","logId":63,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:55:23","logId":64,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=http://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":182,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:55:59","logId":65,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=https://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":170,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:14","logId":66,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":160,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:33","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:42","logId":68,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":162,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:08:24","logId":69,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8114F6CC587F8BEFCD8E75D9A0DC96CA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":185,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:08:33","logId":70,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:09:07","logId":71,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:12:05","logId":72,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"6671A8FF053115C1AD7A1D4B1C1C6E6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":187,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:12:29","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$ecfbba46.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:17","logId":74,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"06B1B7ECB404884D7936FDF312998D6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":192,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:16:29","logId":75,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:44","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:10","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8774B1BA86D88B426F29106A266D32F8\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":184,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:18:17","logId":78,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功！\"}","logStatus":1,"logTime":153,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:55","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":103,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:14","logId":80,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:19:16","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":99,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:29","logId":82,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 07:19:28\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":100,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:20:10","logId":83,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=4, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":154,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:42:01","logId":84,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2114,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:21","logId":85,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:42","logId":86,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:39","logId":87,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"65E653A639ED5AF2E3CB7BAA210E7F85\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":200,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:43:44","logId":88,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:48","logId":89,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"https://www.baidu.com\",\"version\":5},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:43:51","logId":90,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[23]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":110,"logUrl":"/link/getLinkInfoById/23"},{"createdTime":"2020-03-30 07:43:56","logId":91,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":115,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 08:40:05","logId":92,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"74C82AEFA2EA99500EF57D19C94F9CCB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":188,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 08:40:43","logId":93,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:42:56","logId":94,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=liuzian1, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":186,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:00","logId":95,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"liuzian1\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:43:27","logId":96,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=刘子安, header=test, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":165,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:29","logId":97,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:10:54","logId":98,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=1)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":18134,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-30 09:11:24","logId":99,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:12:03","logId":100,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":5093,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-31 10:41:49","logId":101,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4F7491A545D4BA8FEB4B67CA944FE0BA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":201,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:27","logId":102,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3685,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:32","logId":103,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":349,"logUrl":"/admin/login"}],"pageSize":50,"params":{"logStatus":0},"sortMethod":"asc","totalCount":66,"totalPage":2},"msg":"操作成功!"}
2020-04-08 11:53:15.325 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:53:15.325 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:53:15.325 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:53:15.326 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:53:15.326 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=2, pageSize=50, totalPage=2, totalCount=66, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:53:15.600 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 275
2020-04-08 11:53:15.602 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":2,"index":50,"list":[{"createdTime":"2020-04-05 06:59:41","logId":149,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-03-28 06:33:23\",\"logId\":1,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[1]\",\"logResult\":\"{\\\"code\\\":20000,\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":13,\"logUrl\":\"/test/textException/1\"},{\"createdTime\":\"2020-03-28 06:33:56\",\"logId\":2,\"logIp\":\"127.0.0.1\",\"logMessage\":\"com.lza.blog.exception.BlogException: 发生了异常\\n\\tat com.lza.blog.controller.TestController.testException(TestController.java:31)\\n\\tat com.lza.blog.controller.TestController$$FastClassBySpringCGLIB$$e118037c.invoke(<generated>)\\n\\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lza.blog.controller.TestController$$EnhancerBySpringCGLIB$$919b549.testException(<generated>)\\n\",\"logMethod\":\"GET\",\"logParams\":\"[122]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/test/textException/122\"},{\"createdTime\":\"2020-03-28 12:39:18\",\"logId\":3,\"logIp\":\"127.0.0.1\",\"logMessage\":\"com.lza.blog.exception.BlogException: 发生了异常\\n\\tat com.lza.blog.controller.TestController.testException(TestController.java:31)\\n\\tat com.lza.blog.controller.TestController$$FastClassBySpringCGLIB$$e118037c.invoke(<generated>)\\n\\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lza.blog.controller.TestController$$EnhancerBySpringCGLIB$$919b549.testException(<generated>)\\n\",\"logMethod\":\"GET\",\"logParams\":\"[122]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/test/textException/122\"},{\"createdTime\":\"2020-03-28 12:39:27\",\"logId\":4,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[1]\",\"logResult\":\"{\\\"code\\\":20000,\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":2,\"logUrl\":\"/test/textException/1\"},{\"createdTime\":\"2020-03-28 17:29:06\",\"logId\":5,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMessage\":\"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\\n\\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\\n\\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\\n\\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\\n\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-03-28 17:29:53\",\"logId\":6,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMessage\":\"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\\n\\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\\n\\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\\n\\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\\n\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-03-28 17:32:16\",\"logId\":7,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMessage\":\"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\\n\\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\\n\\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\\n\\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\\n\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-03-28 17:32:41\",\"logId\":8,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMessage\":\"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\\n\\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\\n\\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\\n\\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\\n\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-03-28 17:36:33\",\"logId\":9,\"logIp\":\"127.0.0.1\",\"logMessage\":\"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\\n\\tat com.lza.blog.controller.AdminController.login(AdminController.java:36)\\n\\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\\n\\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\\n\\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$87d9a28c.login(<generated>)\\n\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]\",\"logStatus\":0,\"logTime\":0,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-03-28 17:43:53\",\"logId\":10,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"token\\\":\\\"61DD974A49F7BEECD1F6A184D6010BDB\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":19840,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-03-28 17:44:28\",\"logId\":11,\"logIp\":\"127.0.0.1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"token\\\":\\\"61DD974A49F7BEECD1F6A184D6010BDB\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":3772,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-03-28 17:45:37\",\"logId\":12,\"logIp\":\"127.0.0.1\",\"logMethod\":\"GET\",\"logParams\":\"[]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"name\\\":\\\"刘子安\\\",\\\"password\\\":\\\"21232f297a57a5a743894a0e4a801fc3\\\",\\\"signature\\\":\\\"加分\\\",\\\"username\\\":\\\"admin\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":2,\"logUrl\":\"/admin/info\"},{\"createdTime\":\"2020-03-29 09:38:56\",\"logId\":13,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"token\\\":\\\"980868099BD0DEF6A4A983A3D7E8C466\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":173,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-03-29 09:40:34\",\"logId\":14,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Type(typeId=null, typeName=null, typeBlogCount=null, enable=null, deleted=null, version=null)]\",\"logResult\":\"{\\\"code\\\":40002,\\\"msg\\\":\\\"类型名称必填!\\\"}\",\"logStatus\":1,\"logTime\":3,\"logUrl\":\"/type/save\"},{\"createdTime\":\"2020-03-29 09:41:11\",\"logId\":15,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null, version=null)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"msg\\\":\\\"添加成功!\\\"}\",\"logStatus\":1,\"logTime\":233,\"logUrl\":\"/type/save\"},{\"createdTime\":\"2020-03-29 09:41:23\",\"logId\":16,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Type(typeId=null, typeName=springboot, typeBlogCount=null, enable=null, deleted=null, version=null)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"msg\\\":\\\"添加成功!\\\"}\",\"logStatus\":1,\"logTime\":228,\"logUrl\":\"/type/save\"},{\"createdTime\":\"2020-03-29 09:42:46\",\"logId\":17,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Type(typeId=null, typeName=springcloud, typeBlogCount=null, enable=null, deleted=null, version=null)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"msg\\\":\\\"添加成功!\\\"}\",\"logStatus\":1,\"logTime\":233,\"logUrl\":\"/type/save\"},{\"createdTime\":\"2020-03-29 09:42:51\",\"logId\":18,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Type(typeId=null, typeName=docker, typeBlogCount=null, enable=null, deleted=null, version=null)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"msg\\\":\\\"添加成功!\\\"}\",\"logStatus\":1,\"logTime\":240,\"logUrl\":\"/type/save\"},{\"createdTime\":\"2020-03-29 09:44:57\",\"logId\":19,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"token\\\":\\\"980868099BD0DEF6A4A983A3D7E8C466\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":93,\"logUrl\":\"/admin/login\"},{\"createdTime\":\"2020-03-29 10:00:38\",\"logId\":20,\"logIp\":\"0:0:0:0:0:0:0:1\",\"logMethod\":\"POST\",\"logParams\":\"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]\",\"logResult\":\"{\\\"code\\\":20000,\\\"data\\\":{\\\"token\\\":\\\"D769F644513CBB31ABA15F02646E9CF1\\\"},\\\"msg\\\":\\\"操作成功!\\\"}\",\"logStatus\":1,\"logTime\":5859,\"logUrl\":\"/admin/login\"}],\"pageSize\":20,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":148,\"totalPage\":8},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":226,"logUrl":"/log/getByPage"},{"createdTime":"2020-04-06 12:46:44","logId":159,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n\tat com.lza.blog.service.impl.MusicServiceImpl.getById(MusicServiceImpl.java:48)\n\tat com.lza.blog.controller.MusicController.getById(MusicController.java:54)\n\tat com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$843f8796.getById(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n","logMethod":"GET","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/music/get/1"},{"createdTime":"2020-04-06 12:46:52","logId":160,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n\tat com.lza.blog.service.impl.MusicServiceImpl.getById(MusicServiceImpl.java:48)\n\tat com.lza.blog.controller.MusicController.getById(MusicController.java:54)\n\tat com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$843f8796.getById(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'\n","logMethod":"GET","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/music/get/1"},{"createdTime":"2020-04-06 12:49:31","logId":162,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"artist\":\"周杰伦\",\"cover\":\"封面\",\"id\":1,\"name\":\"算什么男人\",\"url\":\"地址\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":103,"logUrl":"/music/get/1"},{"createdTime":"2020-04-06 12:49:35","logId":163,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"artist\":\"周杰伦\",\"cover\":\"封面\",\"id\":2,\"name\":\"晴天\",\"url\":\"地址\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":101,"logUrl":"/music/get/2"},{"createdTime":"2020-04-06 12:50:51","logId":164,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":20000,\"data\":{\"artist\":\"周杰伦\",\"cover\":\"封面\",\"id\":3,\"name\":\"青花瓷\",\"url\":\"地址\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":107,"logUrl":"/music/get/3"},{"createdTime":"2020-04-06 12:52:20","logId":165,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":20000,\"data\":{\"artist\":\"周杰伦\",\"cover\":\"封面\",\"id\":3,\"name\":\"青花瓷\",\"url\":\"地址\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":100,"logUrl":"/music/get/3"},{"createdTime":"2020-04-06 13:17:33","logId":183,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'name' in 'class com.lza.blog.utils.Page'\n\tat com.lza.blog.service.impl.MusicServiceImpl.getByPage(MusicServiceImpl.java:76)\n\tat com.lza.blog.controller.MusicController.getByPage(MusicController.java:108)\n\tat com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$e3bb2c94.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'name' in 'class com.lza.blog.utils.Page'\n","logMethod":"GET","logParams":"[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":0,"logTime":0,"logUrl":"/music/getByPage"},{"createdTime":"2020-04-06 13:17:44","logId":184,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'name' in 'class com.lza.blog.utils.Page'\n\tat com.lza.blog.service.impl.MusicServiceImpl.getByPage(MusicServiceImpl.java:76)\n\tat com.lza.blog.controller.MusicController.getByPage(MusicController.java:108)\n\tat com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$e3bb2c94.getByPage(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'name' in 'class com.lza.blog.utils.Page'\n","logMethod":"GET","logParams":"[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logStatus":0,"logTime":0,"logUrl":"/music/getByPage"},{"createdTime":"2020-04-06 13:21:43","logId":186,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"artist\":\"周杰伦\",\"cover\":\"封面\",\"createdTime\":\"2020-04-06 12:45:45\",\"enable\":1,\"id\":1,\"name\":\"算什么男人\",\"url\":\"地址\"},{\"artist\":\"周杰伦\",\"cover\":\"封面\",\"createdTime\":\"2020-04-06 12:45:56\",\"enable\":1,\"id\":2,\"name\":\"晴天\",\"url\":\"地址\"}],\"pageSize\":20,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":2,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":454,"logUrl":"/music/getByPage"},{"createdTime":"2020-04-06 14:13:14","logId":191,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[3]","logResult":"{\"code\":20000,\"data\":{\"createdTime\":\"2020-04-06 14:11:18\",\"header\":\"无\",\"name\":\"liuzian1\",\"nickname\":\"昵称刘子安\",\"sex\":1,\"updateTime\":\"2020-04-06 14:12:36\",\"userEmail\":\"2282816304@qq.com\",\"userId\":3,\"username\":\"liuzian111\",\"version\":3},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":105,"logUrl":"/user/get/3"},{"createdTime":"2020-04-06 14:14:01","logId":192,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[{\"createdTime\":\"2020-04-06 14:11:18\",\"header\":\"无\",\"name\":\"liuzian1\",\"nickname\":\"昵称刘子安\",\"sex\":1,\"updateTime\":\"2020-04-06 14:12:36\",\"userEmail\":\"2282816304@qq.com\",\"userId\":3,\"username\":\"liuzian111\"}],\"pageSize\":20,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":1,\"totalPage\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":394,"logUrl":"/user/getByPage"},{"createdTime":"2020-04-07 02:51:32","logId":197,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-04-07 02:51:33","logId":198,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":102,"logUrl":"/type/getList"},{"createdTime":"2020-04-07 02:51:40","logId":199,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":99,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 02:52:32","logId":200,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":100,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 02:52:40","logId":202,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":0,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":99,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 02:53:23","logId":204,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":0,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":0,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":99,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 02:55:03","logId":206,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-04-07 02:55:04","logId":207,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":104,"logUrl":"/type/getList"},{"createdTime":"2020-04-07 02:55:04","logId":208,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":0,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":0,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 02:55:08","logId":210,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":0,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":104,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 02:55:15","logId":212,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":104,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 03:01:30","logId":214,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-04-07 03:01:31","logId":215,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":119,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 03:03:54","logId":217,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-04-07 03:03:54","logId":218,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":119,"logUrl":"/type/getList"},{"createdTime":"2020-04-07 03:03:55","logId":219,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 03:04:00","logId":220,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\",\"version\":8},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/type/get/6"},{"createdTime":"2020-04-07 03:05:49","logId":222,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-04-07 03:05:50","logId":223,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/type/getList"},{"createdTime":"2020-04-07 03:05:50","logId":224,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 03:05:53","logId":225,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\",\"version\":8},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/get/6"},{"createdTime":"2020-04-07 03:05:55","logId":227,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 03:05:57","logId":228,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\",\"version\":9},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/type/get/6"},{"createdTime":"2020-04-07 03:06:00","logId":230,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java1\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":107,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 03:06:02","logId":231,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"deleted\":0,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java1\",\"version\":10},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/type/get/6"},{"createdTime":"2020-04-07 03:06:05","logId":233,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":104,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 03:06:29","logId":234,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":116,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 03:07:49","logId":235,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":107,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 03:08:54","logId":237,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-04-07 03:08:55","logId":238,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":115,"logUrl":"/type/getList"},{"createdTime":"2020-04-07 03:09:16","logId":240,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1244974949362372608]","logResult":"{\"code\":20000,\"data\":{\"blogCollection\":0,\"blogComment\":0,\"blogContent\":\"ceshi\",\"blogGoods\":0,\"blogId\":\"1244974949362372608\",\"blogRead\":5,\"blogTitle\":\"测试test3333333\",\"blogType\":6,\"createdTime\":\"2020-03-31 13:08:52\",\"version\":7},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/blog/get/1244974949362372608"},{"createdTime":"2020-04-07 03:09:30","logId":241,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1244974949362372608]","logResult":"{\"code\":20000,\"data\":{\"blogCollection\":0,\"blogComment\":0,\"blogContent\":\"ceshi\",\"blogGoods\":0,\"blogId\":\"1244974949362372608\",\"blogRead\":5,\"blogTitle\":\"测试test3333333\",\"blogType\":6,\"createdTime\":\"2020-03-31 13:08:52\",\"version\":7},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/blog/get/1244974949362372608"},{"createdTime":"2020-04-07 03:09:37","logId":242,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1244974949362372608]","logResult":"{\"code\":20000,\"data\":{\"blogCollection\":0,\"blogComment\":0,\"blogContent\":\"ceshi\",\"blogGoods\":0,\"blogId\":\"1244974949362372608\",\"blogRead\":5,\"blogTitle\":\"测试test3333333\",\"blogType\":6,\"createdTime\":\"2020-03-31 13:08:52\",\"version\":7},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":107,"logUrl":"/blog/get/1244974949362372608"},{"createdTime":"2020-04-07 03:09:51","logId":245,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1244974949362372608]","logResult":"{\"code\":20000,\"data\":{\"blogCollection\":0,\"blogComment\":0,\"blogContent\":\"ceshi\",\"blogGoods\":0,\"blogId\":\"1244974949362372608\",\"blogRead\":5,\"blogTitle\":\"测试\",\"blogType\":6,\"createdTime\":\"2020-03-31 13:08:52\",\"version\":8},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":106,"logUrl":"/blog/get/1244974949362372608"},{"createdTime":"2020-04-07 03:10:38","logId":247,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"enable\":1,\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/type/listBack"},{"createdTime":"2020-04-07 03:11:52","logId":251,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-04-07 03:11:52","logId":252,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\"},{\"typeBlogCount\":0,\"typeId\":7,\"typeName\":\"springboot\"},{\"typeBlogCount\":0,\"typeId\":8,\"typeName\":\"springcloud\"},{\"typeBlogCount\":0,\"typeId\":9,\"typeName\":\"docker\"},{\"typeBlogCount\":0,\"typeId\":10,\"typeName\":\"spring\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":114,"logUrl":"/type/getList"},{"createdTime":"2020-04-07 03:11:58","logId":254,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"aboutContent\":\"测试内容1\",\"aboutId\":1,\"aboutRead\":0,\"aboutTitle\":\"测试1\",\"createdTime\":\"2020-04-01 14:56:59\",\"enable\":0,\"updateTime\":\"2020-04-01 14:56:59\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/about/get/1"}],"pageSize":50,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":10,"totalPage":1},"msg":"操作成功!"}
2020-04-08 11:53:23.979 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:53:23.979 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:53:23.980 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:53:23.980 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:53:23.980 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=2, pageSize=50, totalPage=1, totalCount=10, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=0, logMethod=}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:53:24.247 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 269
2020-04-08 11:53:24.247 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":2,"index":50,"list":[{"createdTime":"2020-03-29 12:37:11","logId":54,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"90D78D0A97CF5E574EADE9558E8FC99A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":9567,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 12:38:20","logId":55,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"90D78D0A97CF5E574EADE9558E8FC99A\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":98,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 12:38:35","logId":56,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"deleted\":1,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\",\"version\":6},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3298,"logUrl":"/type/getTypeInfoById/6"},{"createdTime":"2020-03-29 14:43:01","logId":57,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"511405CFF09080EE8B72966F4F0851B4\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1729,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:37:49","logId":58,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":183,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:38:46","logId":59,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:40:24","logId":60,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=百度, linkUrl=www.baidu.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":169,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:48:59","logId":61,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":114,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:52:22","logId":62,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=github, linkUrl=https://github.com/lza0807/blog, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":167,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:52:26","logId":63,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:55:23","logId":64,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=http://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":182,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:55:59","logId":65,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=https://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":170,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:14","logId":66,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":160,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:33","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:42","logId":68,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":162,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:08:24","logId":69,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8114F6CC587F8BEFCD8E75D9A0DC96CA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":185,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:08:33","logId":70,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:09:07","logId":71,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:12:05","logId":72,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"6671A8FF053115C1AD7A1D4B1C1C6E6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":187,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:12:29","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$ecfbba46.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:17","logId":74,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"06B1B7ECB404884D7936FDF312998D6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":192,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:16:29","logId":75,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:44","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:10","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8774B1BA86D88B426F29106A266D32F8\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":184,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:18:17","logId":78,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功！\"}","logStatus":1,"logTime":153,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:55","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":103,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:14","logId":80,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:19:16","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":99,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:29","logId":82,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 07:19:28\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":100,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:20:10","logId":83,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=4, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":154,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:42:01","logId":84,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2114,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:21","logId":85,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:42","logId":86,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:39","logId":87,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"65E653A639ED5AF2E3CB7BAA210E7F85\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":200,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:43:44","logId":88,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:48","logId":89,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"https://www.baidu.com\",\"version\":5},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:43:51","logId":90,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[23]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":110,"logUrl":"/link/getLinkInfoById/23"},{"createdTime":"2020-03-30 07:43:56","logId":91,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":115,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 08:40:05","logId":92,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"74C82AEFA2EA99500EF57D19C94F9CCB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":188,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 08:40:43","logId":93,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:42:56","logId":94,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=liuzian1, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":186,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:00","logId":95,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"liuzian1\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:43:27","logId":96,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=刘子安, header=test, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":165,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:29","logId":97,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:10:54","logId":98,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=1)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":18134,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-30 09:11:24","logId":99,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:12:03","logId":100,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":5093,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-31 10:41:49","logId":101,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4F7491A545D4BA8FEB4B67CA944FE0BA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":201,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:27","logId":102,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3685,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:32","logId":103,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":349,"logUrl":"/admin/login"}],"pageSize":50,"params":{"logStatus":0,"logMethod":""},"sortMethod":"asc","totalCount":66,"totalPage":2},"msg":"操作成功!"}
2020-04-08 11:53:35.972 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/deleteByIds
2020-04-08 11:53:35.972 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 11:53:35.972 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:53:35.972 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.deleteByIds
2020-04-08 11:53:35.972 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[Ljava.lang.Integer;@60023cdf]
2020-04-08 11:53:36.135 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 163
2020-04-08 11:53:36.135 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"批量删除成功!"}
2020-04-08 11:53:36.307 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:53:36.308 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:53:36.308 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:53:36.308 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:53:36.308 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=2, pageSize=50, totalPage=2, totalCount=66, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=0, logMethod=}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:53:36.583 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 276
2020-04-08 11:53:36.584 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":2,"index":50,"list":[{"createdTime":"2020-03-29 12:38:35","logId":56,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"deleted\":1,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\",\"version\":6},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3298,"logUrl":"/type/getTypeInfoById/6"},{"createdTime":"2020-03-29 14:43:01","logId":57,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"511405CFF09080EE8B72966F4F0851B4\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":1729,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:37:49","logId":58,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":183,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:38:46","logId":59,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:40:24","logId":60,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=百度, linkUrl=www.baidu.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":169,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:48:59","logId":61,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":114,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:52:22","logId":62,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=github, linkUrl=https://github.com/lza0807/blog, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":167,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:52:26","logId":63,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:55:23","logId":64,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=http://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":182,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:55:59","logId":65,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=https://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":170,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:14","logId":66,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":160,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:33","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:42","logId":68,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":162,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:08:24","logId":69,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8114F6CC587F8BEFCD8E75D9A0DC96CA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":185,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:08:33","logId":70,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:09:07","logId":71,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:12:05","logId":72,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"6671A8FF053115C1AD7A1D4B1C1C6E6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":187,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:12:29","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$ecfbba46.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:17","logId":74,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"06B1B7ECB404884D7936FDF312998D6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":192,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:16:29","logId":75,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:44","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:10","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8774B1BA86D88B426F29106A266D32F8\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":184,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:18:17","logId":78,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功！\"}","logStatus":1,"logTime":153,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:55","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":103,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:14","logId":80,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:19:16","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":99,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:29","logId":82,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 07:19:28\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":100,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:20:10","logId":83,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=4, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":154,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:42:01","logId":84,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2114,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:21","logId":85,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:42","logId":86,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:39","logId":87,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"65E653A639ED5AF2E3CB7BAA210E7F85\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":200,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:43:44","logId":88,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:48","logId":89,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"https://www.baidu.com\",\"version\":5},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:43:51","logId":90,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[23]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":110,"logUrl":"/link/getLinkInfoById/23"},{"createdTime":"2020-03-30 07:43:56","logId":91,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":115,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 08:40:05","logId":92,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"74C82AEFA2EA99500EF57D19C94F9CCB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":188,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 08:40:43","logId":93,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:42:56","logId":94,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=liuzian1, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":186,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:00","logId":95,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"liuzian1\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:43:27","logId":96,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=刘子安, header=test, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":165,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:29","logId":97,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:10:54","logId":98,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=1)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":18134,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-30 09:11:24","logId":99,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:12:03","logId":100,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":5093,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-31 10:41:49","logId":101,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4F7491A545D4BA8FEB4B67CA944FE0BA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":201,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:27","logId":102,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3685,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:32","logId":103,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":349,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:39:33","logId":104,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":105,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:42:05","logId":105,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"604FFB20D38061334315D1DC417F0564\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":512,"logUrl":"/admin/login"}],"pageSize":50,"params":{"logStatus":0,"logMethod":""},"sortMethod":"asc","totalCount":66,"totalPage":2},"msg":"操作成功!"}
2020-04-08 11:53:49.893 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/deleteByIds
2020-04-08 11:53:49.893 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : PUT
2020-04-08 11:53:49.894 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:53:49.894 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.deleteByIds
2020-04-08 11:53:49.894 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[[Ljava.lang.Integer;@314b32a9]
2020-04-08 11:53:50.061 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 168
2020-04-08 11:53:50.062 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"批量删除成功!"}
2020-04-08 11:53:50.241 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:53:50.241 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:53:50.242 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:53:50.242 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:53:50.242 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=2, pageSize=50, totalPage=2, totalCount=66, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=0, logMethod=}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:53:50.531 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 290
2020-04-08 11:53:50.532 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":2,"index":50,"list":[{"createdTime":"2020-03-29 12:38:35","logId":56,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"deleted\":1,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\",\"version\":6},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3298,"logUrl":"/type/getTypeInfoById/6"},{"createdTime":"2020-03-30 06:37:49","logId":58,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":183,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:38:46","logId":59,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:40:24","logId":60,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=百度, linkUrl=www.baidu.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":169,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:48:59","logId":61,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":114,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:52:22","logId":62,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=github, linkUrl=https://github.com/lza0807/blog, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":167,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:52:26","logId":63,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:55:23","logId":64,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=http://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":182,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:55:59","logId":65,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=https://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":170,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:14","logId":66,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":160,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:33","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:42","logId":68,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":162,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:08:24","logId":69,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8114F6CC587F8BEFCD8E75D9A0DC96CA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":185,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:08:33","logId":70,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:09:07","logId":71,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:12:05","logId":72,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"6671A8FF053115C1AD7A1D4B1C1C6E6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":187,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:12:29","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$ecfbba46.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:17","logId":74,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"06B1B7ECB404884D7936FDF312998D6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":192,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:16:29","logId":75,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:44","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:10","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8774B1BA86D88B426F29106A266D32F8\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":184,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:18:17","logId":78,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功！\"}","logStatus":1,"logTime":153,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:55","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":103,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:14","logId":80,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:19:16","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":99,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:29","logId":82,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 07:19:28\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":100,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:20:10","logId":83,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=4, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":154,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:42:01","logId":84,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2114,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:21","logId":85,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:42","logId":86,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:39","logId":87,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"65E653A639ED5AF2E3CB7BAA210E7F85\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":200,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:43:44","logId":88,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:48","logId":89,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"https://www.baidu.com\",\"version\":5},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:43:51","logId":90,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[23]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":110,"logUrl":"/link/getLinkInfoById/23"},{"createdTime":"2020-03-30 07:43:56","logId":91,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":115,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 08:40:05","logId":92,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"74C82AEFA2EA99500EF57D19C94F9CCB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":188,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 08:40:43","logId":93,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:42:56","logId":94,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=liuzian1, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":186,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:00","logId":95,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"liuzian1\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:43:27","logId":96,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=刘子安, header=test, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":165,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:29","logId":97,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:10:54","logId":98,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=1)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":18134,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-30 09:11:24","logId":99,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:12:03","logId":100,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":5093,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-31 10:41:49","logId":101,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4F7491A545D4BA8FEB4B67CA944FE0BA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":201,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:27","logId":102,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3685,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:32","logId":103,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":349,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:39:33","logId":104,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":105,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:42:05","logId":105,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"604FFB20D38061334315D1DC417F0564\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":512,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 13:03:23","logId":106,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_collection' cannot be null\n### The error may involve com.lza.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_collection' cannot be null\n; Column 'blog_collection' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_collection' cannot be null\n\tat com.lza.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:46)\n\tat com.lza.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$3d2110a2.invoke(<generated>)\n\tat com.lza.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ecedc811.save(<generated>)\n\tat com.lza.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$3d2110a2.invoke(<generated>)\n\tat com.lza.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$fcbdff5b.save(<generated>)\n\tat com.lza.blog.controller.BlogController.save(BlogController.java:34)\n\tat com.lza.blog.controller.BlogController$$FastClassBySpringCGLIB$$d6b15a8c.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.BlogController$$EnhancerBySpringCGLIB$$3b19da94.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_collection' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=测试test, blogImage=null, blogContent=ceshi, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":50,"params":{"logStatus":0,"logMethod":""},"sortMethod":"asc","totalCount":66,"totalPage":2},"msg":"操作成功!"}
2020-04-08 11:54:23.227 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:54:23.228 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:54:23.228 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:54:23.228 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:54:23.228 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=2, pageSize=50, totalPage=2, totalCount=66, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=0, logMethod=}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:54:23.497 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 270
2020-04-08 11:54:23.497 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":2,"index":50,"list":[{"createdTime":"2020-03-29 12:38:35","logId":56,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"deleted\":1,\"enable\":1,\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java\",\"version\":6},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3298,"logUrl":"/type/getTypeInfoById/6"},{"createdTime":"2020-03-30 06:37:49","logId":58,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":183,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:38:46","logId":59,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"85AD1CE1793F57136ED418BAEAF1F0A1\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 06:40:24","logId":60,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=百度, linkUrl=www.baidu.com, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":169,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:48:59","logId":61,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":114,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:52:22","logId":62,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Link(linkId=null, linkName=github, linkUrl=https://github.com/lza0807/blog, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":167,"logUrl":"/link/save"},{"createdTime":"2020-03-30 06:52:26","logId":63,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 06:40:24\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":109,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 06:55:23","logId":64,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=http://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":182,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:55:59","logId":65,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=https://www.baidu.com, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":170,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:14","logId":66,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":160,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:33","logId":67,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=1, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 06:56:42","logId":68,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":162,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:08:24","logId":69,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8114F6CC587F8BEFCD8E75D9A0DC96CA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":185,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:08:33","logId":70,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:09:07","logId":71,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:12:05","logId":72,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"6671A8FF053115C1AD7A1D4B1C1C6E6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":187,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:12:29","logId":73,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$ecfbba46.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'linkId' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:17","logId":74,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"06B1B7ECB404884D7936FDF312998D6B\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":192,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:16:29","logId":75,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:16:44","logId":76,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$43ff7296.delete(<generated>)\nCaused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'id' in 'class java.lang.Integer'\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:10","logId":77,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"8774B1BA86D88B426F29106A266D32F8\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":184,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:18:17","logId":78,"logIp":"0:0:0:0:0:0:0:1","logMethod":"DELETE","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"删除成功！\"}","logStatus":1,"logTime":153,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:18:55","logId":79,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":103,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:14","logId":80,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=百度, linkUrl=null, createdTime=null, updateTime=null, version=2, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":159,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:19:16","logId":81,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":99,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:19:29","logId":82,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[{\"createdTime\":\"2020-03-30 06:40:24\",\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"www.baidu.com\",\"updateTime\":\"2020-03-30 07:19:28\"},{\"createdTime\":\"2020-03-30 06:52:22\",\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"updateTime\":\"2020-03-30 06:52:22\"}],\"msg\":\"操作成功!\"}","logStatus":1,"logTime":100,"logUrl":"/link/getAllLinkInfo"},{"createdTime":"2020-03-30 07:20:10","logId":83,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Link(linkId=1, linkName=null, linkUrl=https://www.baidu.com, createdTime=null, updateTime=null, version=4, deleted=null)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":154,"logUrl":"/link/update"},{"createdTime":"2020-03-30 07:42:01","logId":84,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2114,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:21","logId":85,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:42:42","logId":86,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:39","logId":87,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"65E653A639ED5AF2E3CB7BAA210E7F85\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":200,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 07:43:44","logId":88,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 07:43:48","logId":89,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"data\":{\"linkId\":1,\"linkName\":\"百度\",\"linkUrl\":\"https://www.baidu.com\",\"version\":5},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/link/getLinkInfoById/1"},{"createdTime":"2020-03-30 07:43:51","logId":90,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[23]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":110,"logUrl":"/link/getLinkInfoById/23"},{"createdTime":"2020-03-30 07:43:56","logId":91,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[2]","logResult":"{\"code\":20000,\"data\":{\"linkId\":2,\"linkName\":\"github\",\"linkUrl\":\"https://github.com/lza0807/blog\",\"version\":1},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":115,"logUrl":"/link/getLinkInfoById/2"},{"createdTime":"2020-03-30 08:40:05","logId":92,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"74C82AEFA2EA99500EF57D19C94F9CCB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":188,"logUrl":"/admin/login"},{"createdTime":"2020-03-30 08:40:43","logId":93,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":113,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:42:56","logId":94,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=liuzian1, header=null, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":186,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:00","logId":95,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"liuzian1\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":111,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 08:43:27","logId":96,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=1, name=刘子安, header=test, signature=null, comment=null, username=null, password=null)]","logResult":"{\"code\":20000,\"msg\":\"更新成功\"}","logStatus":1,"logTime":165,"logUrl":"/admin/updateAdminInfo"},{"createdTime":"2020-03-30 08:43:29","logId":97,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":108,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:10:54","logId":98,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=1)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":18134,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-30 09:11:24","logId":99,"logIp":"0:0:0:0:0:0:0:1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"header\":\"test\",\"id\":1,\"name\":\"刘子安\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":112,"logUrl":"/admin/getAdminInfo"},{"createdTime":"2020-03-30 09:12:03","logId":100,"logIp":"0:0:0:0:0:0:0:1","logMethod":"PUT","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=null, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"msg\":\"修改成功！\"}","logStatus":1,"logTime":5093,"logUrl":"/admin/updatePassword"},{"createdTime":"2020-03-31 10:41:49","logId":101,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4F7491A545D4BA8FEB4B67CA944FE0BA\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":201,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:27","logId":102,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3685,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:36:32","logId":103,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":349,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:39:33","logId":104,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"BA235DD9020F2B9983744FCAD9F93F0D\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":105,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 12:42:05","logId":105,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"604FFB20D38061334315D1DC417F0564\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":512,"logUrl":"/admin/login"},{"createdTime":"2020-03-31 13:03:23","logId":106,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_collection' cannot be null\n### The error may involve com.lza.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_collection' cannot be null\n; Column 'blog_collection' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_collection' cannot be null\n\tat com.lza.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:46)\n\tat com.lza.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$3d2110a2.invoke(<generated>)\n\tat com.lza.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$ecedc811.save(<generated>)\n\tat com.lza.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$3d2110a2.invoke(<generated>)\n\tat com.lza.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$fcbdff5b.save(<generated>)\n\tat com.lza.blog.controller.BlogController.save(BlogController.java:34)\n\tat com.lza.blog.controller.BlogController$$FastClassBySpringCGLIB$$d6b15a8c.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.BlogController$$EnhancerBySpringCGLIB$$3b19da94.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_collection' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=null, blogTitle=测试test, blogImage=null, blogContent=ceshi, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":50,"params":{"logStatus":0,"logMethod":""},"sortMethod":"asc","totalCount":66,"totalPage":2},"msg":"操作成功!"}
2020-04-08 11:55:15.004 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 16248 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 11:55:15.008 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 11:55:15.919 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$20221b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:15.952 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:15.961 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$db053ad0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:15.964 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$c1dcdf12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:15.966 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 11:55:16.003 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:16.014 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:16.032 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.019 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 11:55:20.020 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.071 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.216 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.222 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.227 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.231 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.232 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.233 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.258 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.276 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 11:55:20.472 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 11:55:20.481 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 11:55:20.487 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 11:55:20.488 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 11:55:20.622 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 11:55:20.622 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5529 ms
2020-04-08 11:55:21.697 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 11:55:21.713 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 11:55:21.715 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.347 seconds (JVM running for 8.277)
2020-04-08 11:55:37.612 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 11:55:37.613 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 11:55:37.626 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 13 ms
2020-04-08 11:55:39.094 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 11:55:39.096 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:55:39.096 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:55:39.097 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 11:55:39.097 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 11:55:39.262 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 168
2020-04-08 11:55:39.311 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"061A6616398B24645CB05CAA87B4EC28"},"msg":"操作成功!"}
2020-04-08 11:55:39.504 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 11:55:39.505 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 11:55:39.505 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:55:39.505 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 11:55:39.505 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 11:55:39.505 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 11:55:39.509 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 11:55:40.093 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 11:55:40.093 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 11:55:40.094 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:55:40.094 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 11:55:40.094 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 11:55:40.104 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:55:40.105 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:55:40.105 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:55:40.105 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:55:40.105 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:55:40.201 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 108
2020-04-08 11:55:40.204 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 11:55:40.342 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 238
2020-04-08 11:55:40.346 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 12:39:27","logId":4,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/test/textException/1"},{"createdTime":"2020-03-28 17:29:06","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:29:53","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:16","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:41","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:36:33","logId":9,"logIp":"127.0.0.1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:36)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$87d9a28c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:43:53","logId":10,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19840,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:44:28","logId":11,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3772,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:45:37","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-03-29 09:38:56","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"980868099BD0DEF6A4A983A3D7E8C466\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":173,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":688,"totalPage":69},"msg":"操作成功!"}
2020-04-08 11:55:43.206 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:55:43.206 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:55:43.206 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:55:43.207 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:55:43.207 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=69, totalCount=688, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=0}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:55:43.425 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 219
2020-04-08 11:55:43.425 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 17:29:06","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:29:53","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:16","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:41","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:36:33","logId":9,"logIp":"127.0.0.1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:36)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$87d9a28c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 12:06:26","logId":49,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n\tat com.lza.blog.service.impl.TypeServiceImpl.deleteTypeById(TypeServiceImpl.java:80)\n\tat com.lza.blog.controller.TypeController.deleteTypeById(TypeController.java:103)\n\tat com.lza.blog.controller.TypeController$$FastClassBySpringCGLIB$$b2d91c24.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.TypeController$$EnhancerBySpringCGLIB$$a963136d.deleteTypeById(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n","logMethod":"DELETE","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"token\":\"AB73D6D14BAFA45F5C0AB5DCB09E9695\"},\"msg\":\"操作成功!\"}","logStatus":0,"logTime":0,"logUrl":"/type/delete/6"},{"createdTime":"2020-03-29 12:12:05","logId":50,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \n### Error updating database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\n### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\n\tat com.lza.blog.service.impl.TypeServiceImpl.deleteTypeById(TypeServiceImpl.java:80)\n\tat com.lza.blog.controller.TypeController.deleteTypeById(TypeController.java:103)\n\tat com.lza.blog.controller.TypeController$$FastClassBySpringCGLIB$$b2d91c24.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.TypeController$$EnhancerBySpringCGLIB$$a963136d.deleteTypeById(<generated>)\nCaused by: org.apache.ibatis.exceptions.PersistenceException: \n### Error updating database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\n### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\nCaused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\nCaused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\nCaused by: java.net.ConnectException: Connection timed out: connect\n","logMethod":"DELETE","logParams":"[6]","logResult":"{\"code\":20000,\"msg\":\"已启用!\"}","logStatus":0,"logTime":0,"logUrl":"/type/delete/6"},{"createdTime":"2020-03-29 12:12:22","logId":51,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n\tat com.lza.blog.service.impl.TypeServiceImpl.deleteTypeById(TypeServiceImpl.java:80)\n\tat com.lza.blog.controller.TypeController.deleteTypeById(TypeController.java:103)\n\tat com.lza.blog.controller.TypeController$$FastClassBySpringCGLIB$$b2d91c24.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.TypeController$$EnhancerBySpringCGLIB$$a963136d.deleteTypeById(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n","logMethod":"DELETE","logParams":"[6]","logStatus":0,"logTime":0,"logUrl":"/type/delete/6"},{"createdTime":"2020-03-30 07:08:33","logId":70,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:09:07","logId":71,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":66,"totalPage":7},"msg":"操作成功!"}
2020-04-08 11:55:46.513 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:55:46.513 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:55:46.513 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:55:46.513 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:55:46.513 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=7, totalCount=66, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=1}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:55:46.755 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 242
2020-04-08 11:55:46.756 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 12:39:27","logId":4,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/test/textException/1"},{"createdTime":"2020-03-28 17:43:53","logId":10,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19840,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:44:28","logId":11,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3772,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:45:37","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-03-29 09:38:56","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"980868099BD0DEF6A4A983A3D7E8C466\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":173,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 09:40:34","logId":14,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=null, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":40002,\"msg\":\"类型名称必填!\"}","logStatus":1,"logTime":3,"logUrl":"/type/save"},{"createdTime":"2020-03-29 09:41:11","logId":15,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=java, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":233,"logUrl":"/type/save"},{"createdTime":"2020-03-29 09:41:23","logId":16,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=springboot, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":228,"logUrl":"/type/save"},{"createdTime":"2020-03-29 09:42:46","logId":17,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=springcloud, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":233,"logUrl":"/type/save"},{"createdTime":"2020-03-29 09:42:51","logId":18,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Type(typeId=null, typeName=docker, typeBlogCount=null, enable=null, deleted=null, version=null)]","logResult":"{\"code\":20000,\"msg\":\"添加成功!\"}","logStatus":1,"logTime":240,"logUrl":"/type/save"}],"pageSize":10,"params":{"logStatus":1},"sortMethod":"asc","totalCount":625,"totalPage":63},"msg":"操作成功!"}
2020-04-08 11:55:55.056 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:55:55.056 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:55:55.056 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:55:55.056 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:55:55.057 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=63, totalCount=625, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=, logIp=127}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:55:55.372 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 316
2020-04-08 11:55:55.373 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"127"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:16.590 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:16.590 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:16.591 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:16.591 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:16.591 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:16.852 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 262
2020-04-08 11:56:16.853 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 17:29:06","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:29:53","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:16","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:41","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:36:33","logId":9,"logIp":"127.0.0.1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:36)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$87d9a28c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-29 12:06:26","logId":49,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n\tat com.lza.blog.service.impl.TypeServiceImpl.deleteTypeById(TypeServiceImpl.java:80)\n\tat com.lza.blog.controller.TypeController.deleteTypeById(TypeController.java:103)\n\tat com.lza.blog.controller.TypeController$$FastClassBySpringCGLIB$$b2d91c24.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.TypeController$$EnhancerBySpringCGLIB$$a963136d.deleteTypeById(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n","logMethod":"DELETE","logParams":"[6]","logResult":"{\"code\":20000,\"data\":{\"token\":\"AB73D6D14BAFA45F5C0AB5DCB09E9695\"},\"msg\":\"操作成功!\"}","logStatus":0,"logTime":0,"logUrl":"/type/delete/6"},{"createdTime":"2020-03-29 12:12:05","logId":50,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: \n### Error updating database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\n### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\n\tat com.lza.blog.service.impl.TypeServiceImpl.deleteTypeById(TypeServiceImpl.java:80)\n\tat com.lza.blog.controller.TypeController.deleteTypeById(TypeController.java:103)\n\tat com.lza.blog.controller.TypeController$$FastClassBySpringCGLIB$$b2d91c24.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.TypeController$$EnhancerBySpringCGLIB$$a963136d.deleteTypeById(<generated>)\nCaused by: org.apache.ibatis.exceptions.PersistenceException: \n### Error updating database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\n### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\nCaused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\nCaused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10001, active 0, maxActive 20, creating 1\nCaused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure\nCaused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure\nCaused by: java.net.ConnectException: Connection timed out: connect\n","logMethod":"DELETE","logParams":"[6]","logResult":"{\"code\":20000,\"msg\":\"已启用!\"}","logStatus":0,"logTime":0,"logUrl":"/type/delete/6"},{"createdTime":"2020-03-29 12:12:22","logId":51,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.jdbc.BadSqlGrammarException: \n### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n\tat com.lza.blog.service.impl.TypeServiceImpl.deleteTypeById(TypeServiceImpl.java:80)\n\tat com.lza.blog.controller.TypeController.deleteTypeById(TypeController.java:103)\n\tat com.lza.blog.controller.TypeController$$FastClassBySpringCGLIB$$b2d91c24.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.TypeController$$EnhancerBySpringCGLIB$$a963136d.deleteTypeById(<generated>)\nCaused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'delete = 1 where type_id = 6' at line 1\n","logMethod":"DELETE","logParams":"[6]","logStatus":0,"logTime":0,"logUrl":"/type/delete/6"},{"createdTime":"2020-03-30 07:08:33","logId":70,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"},{"createdTime":"2020-03-30 07:09:07","logId":71,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.springframework.dao.TransientDataAccessResourceException: \n### Error updating database.  Cause: java.sql.SQLException: SQL String cannot be empty\n### Cause: java.sql.SQLException: SQL String cannot be empty\n; SQL String cannot be empty; nested exception is java.sql.SQLException: SQL String cannot be empty\n\tat com.lza.blog.service.impl.LinkServiceImpl.delete(LinkServiceImpl.java:55)\n\tat com.lza.blog.controller.LinkController.delete(LinkController.java:74)\n\tat com.lza.blog.controller.LinkController$$FastClassBySpringCGLIB$$29b34ce4.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.LinkController$$EnhancerBySpringCGLIB$$b230360.delete(<generated>)\nCaused by: java.sql.SQLException: SQL String cannot be empty\nCaused by: com.mysql.cj.exceptions.WrongArgumentException: SQL String cannot be empty\n","logMethod":"DELETE","logParams":"[1]","logStatus":0,"logTime":0,"logUrl":"/link/delete/1"}],"pageSize":10,"params":{"logStatus":"","logIp":""},"sortMethod":"asc","totalCount":66,"totalPage":7},"msg":"操作成功!"}
2020-04-08 11:56:21.226 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:21.226 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:21.226 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:21.227 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:21.227 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=7, totalCount=66, list=[BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null), BlogVo(typeName=null)], params={logStatus=, logIp=, logUrl=	 /admin/login}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:21.484 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 258
2020-04-08 11:56:21.485 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":"\t /admin/login"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:25.688 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:25.688 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:25.688 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:25.689 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:25.689 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl= /admin/login}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:25.937 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 249
2020-04-08 11:56:25.937 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":" /admin/login"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:26.989 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:26.989 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:26.989 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:26.989 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:26.989 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl= /admin/login}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:27.300 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 312
2020-04-08 11:56:27.300 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":" /admin/login"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:29.705 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:29.705 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:29.706 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:29.706 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:29.706 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl=admin/login}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:29.998 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 293
2020-04-08 11:56:29.998 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":"admin/login"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:30.226 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:30.226 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:30.226 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:30.226 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:30.226 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl=admin/login}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:30.504 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 278
2020-04-08 11:56:30.504 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":"admin/login"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:30.940 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:30.949 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:30.949 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:30.950 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:30.950 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl=admin/login}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:31.128 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:31.128 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:31.128 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:31.128 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:31.129 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl=admin/login}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:31.184 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 244
2020-04-08 11:56:31.184 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":"admin/login"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:31.314 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:31.315 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:31.315 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:31.315 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:31.315 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl=admin/login}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:31.391 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 263
2020-04-08 11:56:31.392 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":"admin/login"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:31.483 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:31.483 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:31.483 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:31.483 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:31.483 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl=admin/login}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:31.572 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 258
2020-04-08 11:56:31.573 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":"admin/login"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:31.776 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 293
2020-04-08 11:56:31.777 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":"admin/login"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:35.011 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:35.011 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:35.011 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:35.011 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:35.011 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl=admin}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:35.220 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 209
2020-04-08 11:56:35.220 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":"admin"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:35.334 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:35.335 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:35.335 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:35.335 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:35.335 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl=admin}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:35.548 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 214
2020-04-08 11:56:35.548 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":"admin"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:56:35.807 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:56:35.807 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:56:35.807 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:56:35.807 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:56:35.807 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logIp=, logUrl=admin}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:56:36.030 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 223
2020-04-08 11:56:36.030 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{"logStatus":"","logIp":"","logUrl":"admin"},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功!"}
2020-04-08 11:57:16.504 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 11:57:16.505 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 11:57:16.505 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 11:57:16.505 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 11:57:16.505 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 11:57:16.713 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 209
2020-04-08 11:57:16.713 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 12:39:27","logId":4,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/test/textException/1"},{"createdTime":"2020-03-28 17:29:06","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:29:53","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:16","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:41","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:36:33","logId":9,"logIp":"127.0.0.1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:36)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$87d9a28c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:43:53","logId":10,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19840,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:44:28","logId":11,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3772,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:45:37","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-03-29 09:38:56","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"980868099BD0DEF6A4A983A3D7E8C466\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":173,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":706,"totalPage":71},"msg":"操作成功!"}
2020-04-08 14:45:09.741 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 14:45:09.742 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 14:45:09.742 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 14:45:09.742 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 14:45:09.742 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 14:45:10.468 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 727
2020-04-08 14:45:10.468 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"B013D51FDCE42E49747121265BF7EDA5"},"msg":"操作成功!"}
2020-04-08 14:45:10.632 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 14:45:10.632 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 14:45:10.633 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 14:45:10.633 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 14:45:10.633 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 14:45:10.633 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 14:45:10.633 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 14:45:11.268 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 14:45:11.269 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 14:45:11.269 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 14:45:11.269 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 14:45:11.270 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 14:45:11.272 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/getByPage
2020-04-08 14:45:11.272 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 14:45:11.273 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 14:45:11.273 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getByPage
2020-04-08 14:45:11.273 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 14:45:11.373 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 105
2020-04-08 14:45:11.373 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 14:45:11.726 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 454
2020-04-08 14:45:11.728 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-08 02:39:02","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","sex":1,"updateTime":"2020-04-08 02:39:03","userEmail":"2@qq.com","userId":4,"username":"admin11"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 14:45:14.287 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/get/3
2020-04-08 14:45:14.287 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 14:45:14.287 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 14:45:14.288 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getById
2020-04-08 14:45:14.288 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[3]
2020-04-08 14:45:14.393 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 106
2020-04-08 14:45:14.393 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"操作成功!"}
2020-04-08 14:45:27.360 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/get/3
2020-04-08 14:45:27.360 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 14:45:27.360 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 14:45:27.360 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.getById
2020-04-08 14:45:27.361 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[3]
2020-04-08 14:45:27.464 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 104
2020-04-08 14:45:27.464 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"操作成功!"}
2020-04-08 19:44:27.306 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 19:44:27.307 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 19:44:27.307 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:44:27.307 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 19:44:27.308 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 19:44:28.062 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 756
2020-04-08 19:44:28.063 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"521126955B5F84AFF729AEDC895C4165"},"msg":"操作成功!"}
2020-04-08 19:44:28.230 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 19:44:28.231 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 19:44:28.231 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:44:28.231 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 19:44:28.231 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 19:44:28.231 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 19:44:28.232 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 19:44:28.816 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 19:44:28.816 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 19:44:28.817 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:44:28.817 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 19:44:28.817 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 19:44:28.918 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 102
2020-04-08 19:44:28.919 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 19:44:31.651 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 19:44:31.652 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 19:44:31.652 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:44:31.652 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 19:44:31.652 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 19:44:31.864 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 213
2020-04-08 19:44:31.865 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 12:39:27","logId":4,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/test/textException/1"},{"createdTime":"2020-03-28 17:29:06","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:29:53","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:16","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:41","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:36:33","logId":9,"logIp":"127.0.0.1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:36)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$87d9a28c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:43:53","logId":10,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19840,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:44:28","logId":11,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3772,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:45:37","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-03-29 09:38:56","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"980868099BD0DEF6A4A983A3D7E8C466\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":173,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":716,"totalPage":72},"msg":"操作成功!"}
2020-04-08 19:46:32.811 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 19:46:32.811 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 19:46:32.811 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:46:32.811 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 19:46:32.811 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 19:46:33.012 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 201
2020-04-08 19:46:33.013 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 12:39:27","logId":4,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/test/textException/1"},{"createdTime":"2020-03-28 17:29:06","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:29:53","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:16","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:41","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:36:33","logId":9,"logIp":"127.0.0.1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:36)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$87d9a28c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:43:53","logId":10,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19840,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:44:28","logId":11,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3772,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:45:37","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-03-29 09:38:56","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"980868099BD0DEF6A4A983A3D7E8C466\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":173,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":717,"totalPage":72},"msg":"操作成功!"}
2020-04-08 19:47:08.352 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 19:47:08.352 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 19:47:08.353 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:47:08.353 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 19:47:08.353 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 19:47:08.354 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 19:47:08.354 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 19:47:08.660 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 19:47:08.660 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 19:47:08.661 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:47:08.661 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 19:47:08.661 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 19:47:08.763 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 103
2020-04-08 19:47:08.764 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 19:47:32.522 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 16388 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 19:47:32.527 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 19:47:33.361 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$3144b9fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:33.394 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:33.402 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a47d31c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:33.405 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$f11f775e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:33.408 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 19:47:33.440 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:33.451 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:33.468 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.513 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 19:47:37.514 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.565 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.713 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.718 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.724 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.726 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.728 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.729 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.754 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.773 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 19:47:37.989 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 19:47:37.999 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 19:47:38.005 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 19:47:38.005 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 19:47:38.134 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 19:47:38.135 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5525 ms
2020-04-08 19:47:39.102 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 19:47:39.118 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 19:47:39.120 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.074 seconds (JVM running for 7.981)
2020-04-08 19:48:00.861 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 19:48:00.861 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 19:48:00.884 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 23 ms
2020-04-08 19:48:02.439 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 19:48:02.440 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 19:48:02.440 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:48:02.441 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 19:48:02.441 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 19:48:02.607 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 168
2020-04-08 19:48:02.656 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"9D14F52A38760B3F5C292A6CD7BC7544"},"msg":"操作成功!"}
2020-04-08 19:48:02.877 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 19:48:02.878 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 19:48:02.878 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:48:02.878 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 19:48:02.878 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 19:48:02.879 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 19:48:02.884 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 19:48:03.486 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 19:48:03.486 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 19:48:03.486 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:48:03.486 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 19:48:03.487 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 19:48:03.499 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 19:48:03.500 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 19:48:03.500 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:48:03.501 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 19:48:03.501 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 19:48:03.594 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 108
2020-04-08 19:48:03.597 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 19:48:03.741 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 242
2020-04-08 19:48:03.745 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:45","enable":1,"id":1,"name":"算什么男人","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 19:48:12.068 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/get/1
2020-04-08 19:48:12.068 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 19:48:12.068 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:48:12.068 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getById
2020-04-08 19:48:12.068 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1]
2020-04-08 19:48:12.174 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 106
2020-04-08 19:48:12.174 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"artist":"周杰伦","cover":"封面","enable":1,"id":1,"name":"算什么男人","url":"地址"},"msg":"操作成功!"}
2020-04-08 19:51:23.310 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/get/1
2020-04-08 19:51:23.310 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 19:51:23.310 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:51:23.310 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getById
2020-04-08 19:51:23.311 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1]
2020-04-08 19:51:23.418 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 109
2020-04-08 19:51:23.418 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"artist":"周杰伦","cover":"封面","enable":1,"id":1,"name":"算什么男人","url":"地址"},"msg":"操作成功!"}
2020-04-08 19:51:38.439 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/get/1
2020-04-08 19:51:38.439 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 19:51:38.440 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:51:38.440 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getById
2020-04-08 19:51:38.440 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1]
2020-04-08 19:51:38.557 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 118
2020-04-08 19:51:38.557 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"artist":"周杰伦","cover":"封面","enable":1,"id":1,"name":"算什么男人","url":"地址"},"msg":"操作成功!"}
2020-04-08 19:52:06.717 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 19:52:06.718 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 19:52:06.718 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:52:06.718 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 19:52:06.718 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[Music(id=1, name=算什么男人, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=2020-04-06 12:45:45, enable=1, deleted=null), Music(id=2, name=晴天, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=2020-04-06 12:45:56, enable=1, deleted=null)], params={enabled=1}, sortColumn=null, sortMethod=asc)]
2020-04-08 19:52:06.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 213
2020-04-08 19:52:06.930 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:45","enable":1,"id":1,"name":"算什么男人","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"}],"pageSize":10,"params":{"enabled":1},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 19:55:02.516 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /log/getByPage
2020-04-08 19:55:02.517 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 19:55:02.517 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 19:55:02.517 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LogController.getByPage
2020-04-08 19:55:02.517 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 19:55:02.738 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 222
2020-04-08 19:55:02.741 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-03-28 12:39:27","logId":4,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[1]","logResult":"{\"code\":20000,\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/test/textException/1"},{"createdTime":"2020-03-28 17:29:06","logId":5,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:29:53","logId":6,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:16","logId":7,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:32:41","logId":8,"logIp":"0:0:0:0:0:0:0:1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:35)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$4203ba0e.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:36:33","logId":9,"logIp":"127.0.0.1","logMessage":"org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.\n\tat com.lza.blog.controller.AdminController.login(AdminController.java:36)\n\tat com.lza.blog.controller.AdminController$$FastClassBySpringCGLIB$$62ead45d.invoke(<generated>)\n\tat com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)\n\tat com.lza.blog.controller.AdminController$$EnhancerBySpringCGLIB$$87d9a28c.login(<generated>)\n","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logStatus":0,"logTime":0,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:43:53","logId":10,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":19840,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:44:28","logId":11,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"61DD974A49F7BEECD1F6A184D6010BDB\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":3772,"logUrl":"/admin/login"},{"createdTime":"2020-03-28 17:45:37","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"刘子安\",\"password\":\"21232f297a57a5a743894a0e4a801fc3\",\"signature\":\"加分\",\"username\":\"admin\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-03-29 09:38:56","logId":13,"logIp":"0:0:0:0:0:0:0:1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"980868099BD0DEF6A4A983A3D7E8C466\"},\"msg\":\"操作成功!\"}","logStatus":1,"logTime":173,"logUrl":"/admin/login"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":728,"totalPage":73},"msg":"操作成功!"}
2020-04-08 20:06:37.839 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 20:06:37.839 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:06:37.839 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:06:37.839 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 20:06:37.840 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 20:06:38.064 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 225
2020-04-08 20:06:38.064 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:45","enable":1,"id":1,"name":"算什么男人","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 20:06:42.561 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:06:42.561 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:06:42.561 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:06:42.561 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:06:42.562 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@64b83668]
2020-04-08 20:06:43.061 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 500
2020-04-08 20:06:43.062 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NvlKAe66nAAathhCxobk450.png","msg":"上传成功!"}
2020-04-08 20:06:58.526 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:06:58.526 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:06:58.527 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:06:58.527 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:06:58.527 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@25301afc]
2020-04-08 20:10:23.950 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:10:23.951 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:10:23.951 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:10:23.951 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:10:23.952 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@459d5694]
2020-04-08 20:11:12.460 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 12968 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 20:11:12.466 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 20:11:13.294 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$e20b948c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:13.330 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:13.338 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$bb0eadac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:13.341 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$a1e651ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:13.344 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 20:11:13.381 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:13.395 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:13.413 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.361 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 20:11:17.362 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.417 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.585 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.590 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.597 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.600 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.601 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.602 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.632 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.652 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:11:17.909 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 20:11:17.919 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 20:11:17.925 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 20:11:17.926 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 20:11:18.061 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 20:11:18.061 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5556 ms
2020-04-08 20:11:19.184 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 20:11:19.201 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 20:11:19.204 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.342 seconds (JVM running for 8.463)
2020-04-08 20:11:30.587 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 20:11:30.588 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 20:11:30.607 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 19 ms
2020-04-08 20:11:32.306 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 20:11:32.307 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:11:32.308 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:11:32.309 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 20:11:32.309 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 20:11:32.481 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 175
2020-04-08 20:11:32.538 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"6764196D24E27816F7A044BF69A8DA6F"},"msg":"操作成功!"}
2020-04-08 20:11:32.739 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 20:11:32.740 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:11:32.740 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:11:32.740 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 20:11:32.740 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 20:11:32.740 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 20:11:32.744 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 20:11:33.340 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 20:11:33.341 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:11:33.341 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:11:33.341 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 20:11:33.342 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 20:11:33.352 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 20:11:33.353 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:11:33.353 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:11:33.353 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 20:11:33.353 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 20:11:33.454 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 114
2020-04-08 20:11:33.457 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 20:11:33.592 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 240
2020-04-08 20:11:33.597 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:45","enable":1,"id":1,"name":"算什么男人","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 20:11:39.633 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:11:39.634 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:11:39.634 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:11:39.634 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:11:39.634 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1d945e94]
2020-04-08 20:12:54.810 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:12:54.810 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:12:54.810 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:12:54.810 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:12:54.810 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:12:54.810 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:12:54.810 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:12:54.810 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:12:54.810 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@481e6e5f]
2020-04-08 20:12:54.810 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@51a15978]
2020-04-08 20:12:55.587 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 777
2020-04-08 20:12:55.588 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6Nv8aAcA1CAABUQgn8TDQ316.jpg","msg":"上传成功!"}
2020-04-08 20:12:55.588 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 778
2020-04-08 20:12:55.589 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6Nv8aAKmK9AABUQgn8TDQ605.jpg","msg":"上传成功!"}
2020-04-08 20:13:10.023 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:13:10.024 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:13:10.024 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:13:10.024 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:13:10.024 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@370edb19]
2020-04-08 20:13:26.862 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/save
2020-04-08 20:13:26.863 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:13:26.863 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:13:26.863 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.save
2020-04-08 20:13:26.863 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Music(id=null, name=哑巴, artist=薛之谦, url=null, cover=http://139.9.130.249/group1/M00/00/00/wKgAbl6Nv8aAcA1CAABUQgn8TDQ316.jpg, lrc=我们都迁就嘴巴

我们都憋着真话

我们都让爱先发芽

我们会接受惩罚

有一个变成哑巴

越退让越不会表达

所有的安静都是人造的冷清

所有的杂音在安慰后平静

我不需要证明

我不需要声音

我就像一个哑巴一样

你翻译不了我的声响

怕腻烦过量

我举止要限量

你可以当我哑巴一样

你不会看见我的抵抗

请别怕我受伤 我自己会圆场

我们会接受惩罚

有一个变成哑巴

越退让越不会表达

所有的安静都是人造的冷清

所有的杂音在安慰后平静

我不需要证明

我不需要声音

我就像一个哑巴一样

你翻译不了我的声响

怕腻烦过量

我举止要限量

你可以当我哑巴一样

你不会看见我的抵抗

请别怕我受伤 我自己会圆场

我就像一个哑巴一样

反正我也不擅长抵抗, createdTime=null, enable=null, deleted=null)]
2020-04-08 20:14:01.372 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 20:14:01.372 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:14:01.372 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:14:01.372 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 20:14:01.372 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 20:14:01.373 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1
2020-04-08 20:14:01.373 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 20:14:01.679 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 20:14:01.680 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:14:01.680 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 20:14:01.680 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:14:01.680 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 20:14:01.680 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:14:01.680 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 20:14:01.680 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:14:01.681 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 20:14:01.681 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 20:14:01.791 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 112
2020-04-08 20:14:01.791 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 20:14:01.894 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 214
2020-04-08 20:14:01.894 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:45","enable":1,"id":1,"name":"算什么男人","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 20:14:09.907 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:14:09.907 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:14:09.908 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:14:09.908 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:14:09.908 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@19a31161]
2020-04-08 20:14:10.067 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 160
2020-04-08 20:14:10.067 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwBGAe7L_AABUQgn8TDQ627.jpg","msg":"上传成功!"}
2020-04-08 20:14:27.198 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:14:27.198 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:14:27.198 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:14:27.198 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:14:27.198 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2fe8d086]
2020-04-08 20:14:55.949 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:14:55.950 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:14:55.950 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:14:55.951 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:14:55.951 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2eb261e4]
2020-04-08 20:15:42.161 INFO  [Thread-17]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-08 20:15:42.174 INFO  [Thread-17]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-08 20:15:42.301 INFO  [http-nio-1000-exec-9]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 20:15:45.674 INFO  [http-nio-1000-exec-9]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 20:15:49.022 INFO  [http-nio-1000-exec-9]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-3} inited
2020-04-08 20:15:52.807 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 17188 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 20:15:52.812 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 20:15:53.734 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$4d7d4c19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:53.772 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:53.780 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$26806539] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:53.784 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d58097b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:53.786 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 20:15:53.825 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:53.836 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:53.856 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:57.912 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 20:15:57.913 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:57.969 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:58.139 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:58.144 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:58.151 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:58.154 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:58.156 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:58.157 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:58.188 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:58.209 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:15:58.468 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 20:15:58.478 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 20:15:58.484 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 20:15:58.484 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 20:15:58.622 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 20:15:58.623 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5760 ms
2020-04-08 20:15:59.750 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 20:15:59.769 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 20:15:59.772 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.675 seconds (JVM running for 8.939)
2020-04-08 20:16:22.015 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 20:16:22.015 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 20:16:22.038 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 23 ms
2020-04-08 20:16:23.842 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 20:16:23.845 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:16:23.845 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:16:23.846 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 20:16:23.847 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 20:16:24.016 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 174
2020-04-08 20:16:24.071 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"5E92B2F67C75D095336C4F3F1B8D4134"},"msg":"操作成功!"}
2020-04-08 20:16:24.272 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 20:16:24.273 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:16:24.273 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:16:24.273 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 20:16:24.273 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 20:16:24.274 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 20:16:24.277 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 20:16:24.880 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 20:16:24.881 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:16:24.881 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:16:24.882 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 20:16:24.882 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 20:16:24.901 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 20:16:24.901 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:16:24.901 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:16:24.902 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 20:16:24.902 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 20:16:24.992 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 112
2020-04-08 20:16:24.995 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 20:16:25.146 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 245
2020-04-08 20:16:25.150 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:45","enable":1,"id":1,"name":"算什么男人","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}
2020-04-08 20:16:43.926 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:16:43.926 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:16:43.927 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:16:43.927 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:16:43.927 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2d0a1172]
2020-04-08 20:16:53.497 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 9571
2020-04-08 20:16:53.497 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","msg":"上传成功!"}
2020-04-08 20:16:59.000 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /upload/uploadImage
2020-04-08 20:16:59.001 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:16:59.001 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:16:59.001 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UploadController.uploadImage
2020-04-08 20:16:59.002 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7bbb7317]
2020-04-08 20:17:01.780 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2780
2020-04-08 20:17:01.781 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3","msg":"上传成功!"}
2020-04-08 20:17:08.964 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/save
2020-04-08 20:17:08.965 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:17:08.965 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:17:08.965 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.save
2020-04-08 20:17:08.965 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Music(id=null, name=哑巴, artist=薛之谦, url=http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3, cover=http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg, lrc=我们都迁就嘴巴

我们都憋着真话

我们都让爱先发芽

我们会接受惩罚

有一个变成哑巴

越退让越不会表达

所有的安静都是人造的冷清

所有的杂音在安慰后平静

我不需要证明

我不需要声音

我就像一个哑巴一样

你翻译不了我的声响

怕腻烦过量

我举止要限量

你可以当我哑巴一样

你不会看见我的抵抗

请别怕我受伤 我自己会圆场

我们会接受惩罚

有一个变成哑巴

越退让越不会表达

所有的安静都是人造的冷清

所有的杂音在安慰后平静

我不需要证明

我不需要声音

我就像一个哑巴一样

你翻译不了我的声响

怕腻烦过量

我举止要限量

你可以当我哑巴一样

你不会看见我的抵抗

请别怕我受伤 我自己会圆场

我就像一个哑巴一样

反正我也不擅长抵抗, createdTime=null, enable=null, deleted=null)]
2020-04-08 20:17:09.127 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 163
2020-04-08 20:17:09.127 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"添加成功！"}
2020-04-08 20:17:09.624 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 20:17:09.625 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:17:09.625 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:17:09.625 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 20:17:09.625 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=2, list=[Music(id=1, name=算什么男人, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=2020-04-06 12:45:45, enable=1, deleted=null), Music(id=2, name=晴天, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=2020-04-06 12:45:56, enable=1, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 20:17:09.841 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 217
2020-04-08 20:17:09.842 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:45","enable":1,"id":1,"name":"算什么男人","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"},{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","createdTime":"2020-04-08 12:17:08","enable":1,"id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}
2020-04-08 20:17:37.410 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/get/4
2020-04-08 20:17:37.410 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:17:37.410 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:17:37.410 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getById
2020-04-08 20:17:37.410 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[4]
2020-04-08 20:17:37.520 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 111
2020-04-08 20:17:37.521 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","enable":1,"id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},"msg":"操作成功!"}
2020-04-08 20:17:43.586 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/get/4
2020-04-08 20:17:43.586 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:17:43.587 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:17:43.587 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getById
2020-04-08 20:17:43.587 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[4]
2020-04-08 20:17:43.709 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 123
2020-04-08 20:17:43.709 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","enable":1,"id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},"msg":"操作成功!"}
2020-04-08 20:18:21.494 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/delete/1
2020-04-08 20:18:21.494 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : DELETE
2020-04-08 20:18:21.494 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:18:21.494 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.delete
2020-04-08 20:18:21.494 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1]
2020-04-08 20:18:21.660 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 166
2020-04-08 20:18:21.660 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"删除成功!"}
2020-04-08 20:18:21.837 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 20:18:21.838 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:18:21.838 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:18:21.838 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 20:18:21.838 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[Music(id=1, name=算什么男人, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=2020-04-06 12:45:45, enable=1, deleted=null), Music(id=2, name=晴天, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=2020-04-06 12:45:56, enable=1, deleted=null), Music(id=4, name=哑巴, artist=薛之谦, url=http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3, cover=http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg, lrc=我们都迁就嘴巴

我们都憋着真话

我们都让爱先发芽

我们会接受惩罚

有一个变成哑巴

越退让越不会表达

所有的安静都是人造的冷清

所有的杂音在安慰后平静

我不需要证明

我不需要声音

我就像一个哑巴一样

你翻译不了我的声响

怕腻烦过量

我举止要限量

你可以当我哑巴一样

你不会看见我的抵抗

请别怕我受伤 我自己会圆场

我们会接受惩罚

有一个变成哑巴

越退让越不会表达

所有的安静都是人造的冷清

所有的杂音在安慰后平静

我不需要证明

我不需要声音

我就像一个哑巴一样

你翻译不了我的声响

怕腻烦过量

我举止要限量

你可以当我哑巴一样

你不会看见我的抵抗

请别怕我受伤 我自己会圆场

我就像一个哑巴一样

反正我也不擅长抵抗, createdTime=2020-04-08 12:17:08, enable=1, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 20:18:22.053 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 216
2020-04-08 20:18:22.053 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:46:05","enable":1,"id":3,"name":"青花瓷1","url":"地址"},{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","createdTime":"2020-04-08 12:17:08","enable":1,"id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}
2020-04-08 20:18:35.344 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/delete/3
2020-04-08 20:18:35.345 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : DELETE
2020-04-08 20:18:35.345 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:18:35.345 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.delete
2020-04-08 20:18:35.345 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[3]
2020-04-08 20:18:35.505 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 161
2020-04-08 20:18:35.505 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"删除成功!"}
2020-04-08 20:18:35.686 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 20:18:35.686 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:18:35.686 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:18:35.686 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 20:18:35.687 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[Music(id=2, name=晴天, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=2020-04-06 12:45:56, enable=1, deleted=null), Music(id=3, name=青花瓷1, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=2020-04-06 12:46:05, enable=1, deleted=null), Music(id=4, name=哑巴, artist=薛之谦, url=http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3, cover=http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg, lrc=我们都迁就嘴巴

我们都憋着真话

我们都让爱先发芽

我们会接受惩罚

有一个变成哑巴

越退让越不会表达

所有的安静都是人造的冷清

所有的杂音在安慰后平静

我不需要证明

我不需要声音

我就像一个哑巴一样

你翻译不了我的声响

怕腻烦过量

我举止要限量

你可以当我哑巴一样

你不会看见我的抵抗

请别怕我受伤 我自己会圆场

我们会接受惩罚

有一个变成哑巴

越退让越不会表达

所有的安静都是人造的冷清

所有的杂音在安慰后平静

我不需要证明

我不需要声音

我就像一个哑巴一样

你翻译不了我的声响

怕腻烦过量

我举止要限量

你可以当我哑巴一样

你不会看见我的抵抗

请别怕我受伤 我自己会圆场

我就像一个哑巴一样

反正我也不擅长抵抗, createdTime=2020-04-08 12:17:08, enable=1, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 20:18:35.899 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 213
2020-04-08 20:18:35.900 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:45","enable":1,"id":1,"name":"算什么男人","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"},{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","createdTime":"2020-04-08 12:17:08","enable":1,"id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}
2020-04-08 20:19:48.387 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/delete/1
2020-04-08 20:19:48.388 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : DELETE
2020-04-08 20:19:48.388 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:19:48.388 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.delete
2020-04-08 20:19:48.388 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1]
2020-04-08 20:19:48.550 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 163
2020-04-08 20:19:48.551 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"删除成功!"}
2020-04-08 20:19:48.722 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 20:19:48.723 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:19:48.723 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:19:48.723 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 20:19:48.723 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=3, list=[Music(id=1, name=算什么男人, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=2020-04-06 12:45:45, enable=1, deleted=null), Music(id=2, name=晴天, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=2020-04-06 12:45:56, enable=1, deleted=null), Music(id=4, name=哑巴, artist=薛之谦, url=http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3, cover=http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg, lrc=我们都迁就嘴巴

我们都憋着真话

我们都让爱先发芽

我们会接受惩罚

有一个变成哑巴

越退让越不会表达

所有的安静都是人造的冷清

所有的杂音在安慰后平静

我不需要证明

我不需要声音

我就像一个哑巴一样

你翻译不了我的声响

怕腻烦过量

我举止要限量

你可以当我哑巴一样

你不会看见我的抵抗

请别怕我受伤 我自己会圆场

我们会接受惩罚

有一个变成哑巴

越退让越不会表达

所有的安静都是人造的冷清

所有的杂音在安慰后平静

我不需要证明

我不需要声音

我就像一个哑巴一样

你翻译不了我的声响

怕腻烦过量

我举止要限量

你可以当我哑巴一样

你不会看见我的抵抗

请别怕我受伤 我自己会圆场

我就像一个哑巴一样

反正我也不擅长抵抗, createdTime=2020-04-08 12:17:08, enable=1, deleted=null)], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 20:19:48.938 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 216
2020-04-08 20:19:48.939 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:46:05","enable":1,"id":3,"name":"青花瓷1","url":"地址"},{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","createdTime":"2020-04-08 12:17:08","enable":1,"id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}
2020-04-08 20:22:05.497 INFO  [Thread-17]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-08 20:22:05.508 INFO  [Thread-17]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-08 20:22:08.945 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 10364 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-08 20:22:08.950 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-08 20:22:09.909 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$ef4853e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:09.956 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:09.967 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$c84b6d04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:09.972 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$af231146] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:09.975 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-08 20:22:10.029 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:10.046 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:10.064 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.081 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-08 20:22:14.081 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.136 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.305 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.311 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.318 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.321 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.322 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.323 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.352 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.373 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-08 20:22:14.617 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-08 20:22:14.628 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-08 20:22:14.634 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-08 20:22:14.634 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-08 20:22:14.776 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-08 20:22:14.777 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5742 ms
2020-04-08 20:22:15.931 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-08 20:22:15.948 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-08 20:22:15.951 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 7.606 seconds (JVM running for 8.663)
2020-04-08 20:22:20.060 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-08 20:22:20.061 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-08 20:22:20.079 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 17 ms
2020-04-08 20:22:21.802 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/login
2020-04-08 20:22:21.803 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:22:21.804 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:22:21.805 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.login
2020-04-08 20:22:21.805 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)]
2020-04-08 20:22:21.993 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 191
2020-04-08 20:22:22.052 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"token":"D090B234F5ADD310D055927736BDC1DA"},"msg":"操作成功!"}
2020-04-08 20:22:22.275 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/info
2020-04-08 20:22:22.276 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:22:22.276 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:22:22.276 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getUserInfo
2020-04-08 20:22:22.276 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 20:22:22.277 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 2
2020-04-08 20:22:22.281 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","name":"刘子安","password":"21232f297a57a5a743894a0e4a801fc3","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-08 20:22:22.889 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /type/getList
2020-04-08 20:22:22.890 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:22:22.890 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:22:22.890 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.TypeController.getList
2020-04-08 20:22:22.891 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-08 20:22:22.903 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getByPage
2020-04-08 20:22:22.903 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-08 20:22:22.903 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:22:22.904 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getByPage
2020-04-08 20:22:22.904 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-08 20:22:23.002 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 113
2020-04-08 20:22:23.005 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}
2020-04-08 20:22:23.146 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 243
2020-04-08 20:22:23.150 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:46:05","enable":1,"id":3,"name":"青花瓷1","url":"地址"},{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","createdTime":"2020-04-08 12:17:08","enable":1,"id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":3,"totalPage":1},"msg":"操作成功!"}
2020-04-08 20:22:27.370 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/get/4
2020-04-08 20:22:27.371 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-08 20:22:27.371 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-08 20:22:27.371 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getById
2020-04-08 20:22:27.371 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[4]
2020-04-08 20:22:27.481 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 111
2020-04-08 20:22:27.481 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","enable":1,"id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},"msg":"操作成功!"}
2020-04-08 20:23:13.288 INFO  [Thread-17]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-08 20:23:13.294 INFO  [Thread-17]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
