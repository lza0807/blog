2020-04-12 00:06:49.828 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 7872 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-12 00:06:49.840 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-12 00:06:50.520 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-12 00:06:50.608 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 82ms. Found 4 MongoDB repository interfaces.
2020-04-12 00:06:51.104 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$1ff661e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:51.160 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:51.170 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f8f97b00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:51.176 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$dfd11f42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:51.179 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-12 00:06:51.230 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:51.246 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:51.267 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.237 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-12 00:06:56.237 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.309 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.641 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.652 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.670 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.678 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.680 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.688 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.690 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.695 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.lza.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.698 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.754 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:56.787 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:06:57.249 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-12 00:06:57.272 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-12 00:06:57.284 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-12 00:06:57.284 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-12 00:06:57.484 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-12 00:06:57.484 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 7569 ms
2020-04-12 00:06:59.274 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[139.9.130.249:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-12 00:06:59.274 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 139.9.130.249:27017 to client view of cluster
2020-04-12 00:06:59.497 INFO  [cluster-ClusterId{value='5e91eb238e705d1ec0f0f7d6', description='null'}-139.9.130.249:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:77}] to 139.9.130.249:27017
2020-04-12 00:06:59.543 INFO  [cluster-ClusterId{value='5e91eb238e705d1ec0f0f7d6', description='null'}-139.9.130.249:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=139.9.130.249:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 5]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=45162800}
2020-04-12 00:06:59.544 INFO  [cluster-ClusterId{value='5e91eb238e705d1ec0f0f7d6', description='null'}-139.9.130.249:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-12 00:07:01.785 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-12 00:07:01.836 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-12 00:07:01.839 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 12.484 seconds (JVM running for 14.716)
2020-04-12 00:08:36.103 INFO  [http-nio-1000-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-12 00:08:36.104 INFO  [http-nio-1000-exec-3]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-12 00:08:36.132 INFO  [http-nio-1000-exec-3]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 28 ms
2020-04-12 00:08:36.209 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247423893702991872
2020-04-12 00:08:36.210 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:08:36.211 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:08:36.213 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:08:36.214 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:08:36.306 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/recomRead
2020-04-12 00:08:36.307 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:08:36.308 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:08:36.308 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.recomRead
2020-04-12 00:08:36.309 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:08:36.498 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getList
2020-04-12 00:08:36.499 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:08:36.499 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:08:36.499 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getList
2020-04-12 00:08:36.500 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:08:36.500 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /link/list
2020-04-12 00:08:36.500 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:08:36.501 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:08:36.501 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LinkController.getAllLinkInfo
2020-04-12 00:08:36.501 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:08:38.448 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1948
2020-04-12 00:08:38.524 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}
2020-04-12 00:08:39.675 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 3369
2020-04-12 00:08:39.682 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":34,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":13,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}
2020-04-12 00:08:40.111 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 3613
2020-04-12 00:08:40.118 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}
2020-04-12 00:08:40.636 INFO  [http-nio-1000-exec-3]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:78}] to 139.9.130.249:27017
2020-04-12 00:09:24.708 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 48499
2020-04-12 00:09:24.709 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功!"}
2020-04-12 00:09:24.894 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/login
2020-04-12 00:09:24.895 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:09:24.895 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:24.895 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.login
2020-04-12 00:09:24.895 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[User(userId=null, username=liuzian, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-04-12 00:09:24.992 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 98
2020-04-12 00:09:24.996 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","password":"","sex":1,"updateTime":"2020-04-11 15:20:14","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian"},"token":"0D4A622423D829CB7321CD78022E8812"},"msg":"操作成功!"}
2020-04-12 00:09:32.073 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/login
2020-04-12 00:09:32.074 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:09:32.074 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:32.074 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.login
2020-04-12 00:09:32.074 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[User(userId=null, username=liuzian, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-04-12 00:09:32.170 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 97
2020-04-12 00:09:32.171 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","password":"","sex":1,"updateTime":"2020-04-11 15:20:14","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian"},"token":"0D4A622423D829CB7321CD78022E8812"},"msg":"操作成功!"}
2020-04-12 00:09:32.867 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-12 00:09:32.867 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:09:32.867 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:32.867 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-12 00:09:32.868 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-04-12 00:09:33.137 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-12 00:09:33.137 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:09:33.138 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:33.138 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/recomRead
2020-04-12 00:09:33.138 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getList
2020-04-12 00:09:33.138 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-12 00:09:33.139 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:09:33.139 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:09:33.139 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:09:33.138 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /link/list
2020-04-12 00:09:33.139 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:33.139 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:33.139 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.recomRead
2020-04-12 00:09:33.139 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:09:33.140 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:09:33.140 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getList
2020-04-12 00:09:33.140 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:33.140 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:09:33.140 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LinkController.getAllLinkInfo
2020-04-12 00:09:33.142 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:09:33.333 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 195
2020-04-12 00:09:33.333 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 195
2020-04-12 00:09:33.333 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}
2020-04-12 00:09:33.333 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":34,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":13,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}
2020-04-12 00:09:33.440 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 302
2020-04-12 00:09:33.441 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}
2020-04-12 00:09:33.498 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 361
2020-04-12 00:09:33.500 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-12 00:09:33.747 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 880
2020-04-12 00:09:33.751 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":34,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-11 15:20:35"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":13,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-11 15:17:04"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-11 15:19:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":2,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-11 13:33:53"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":5,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-11 14:11:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-12 00:09:37.277 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/read/1247423893702991872
2020-04-12 00:09:37.277 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247423893702991872
2020-04-12 00:09:37.278 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:09:37.278 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:09:37.278 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:37.278 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.readById
2020-04-12 00:09:37.278 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:37.279 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:09:37.279 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:09:37.279 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:09:37.280 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247423893702991872
2020-04-12 00:09:37.280 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247423893702991872
2020-04-12 00:09:37.280 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:09:37.280 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:09:37.281 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:37.281 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:37.281 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:09:37.281 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:09:37.281 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:09:37.281 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:09:44.711 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 7434
2020-04-12 00:09:44.712 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功!"}
2020-04-12 00:09:44.840 INFO  [http-nio-1000-exec-2]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:4, serverValue:79}] to 139.9.130.249:27017
2020-04-12 00:09:44.885 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 7605
2020-04-12 00:09:44.886 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:09:45.049 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 7772
2020-04-12 00:09:45.050 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":35,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","typeName":"java","version":37},"msg":"操作成功!"}
2020-04-12 00:09:45.091 INFO  [http-nio-1000-exec-6]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:3, serverValue:80}] to 139.9.130.249:27017
2020-04-12 00:09:45.138 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 7858
2020-04-12 00:09:45.139 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:09:48.349 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/save
2020-04-12 00:09:48.349 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:09:48.350 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:48.350 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.save
2020-04-12 00:09:48.350 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Comment(id=null, commentContent=ssss, commentUser=null, user=null, commentBlog=1247423893702991872, blog=null, commentGood=null, createdTime=null, commentFlag=false)]
2020-04-12 00:09:48.683 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 335
2020-04-12 00:09:48.683 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功!"}
2020-04-12 00:09:48.847 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247423893702991872
2020-04-12 00:09:48.847 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:09:48.847 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:09:48.847 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:09:48.847 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:10:12.891 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 24045
2020-04-12 00:10:12.897 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":35,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":38},"commentBlog":"1247423893702991872","commentContent":"ssss","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:09:48","id":"1249006746098253824"}],"msg":"操作成功!"}
2020-04-12 00:10:49.678 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/save
2020-04-12 00:10:49.679 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:10:49.679 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:10:49.679 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.save
2020-04-12 00:10:49.680 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Comment(id=null, commentContent=asdsa, commentUser=null, user=null, commentBlog=1247423893702991872, blog=null, commentGood=null, createdTime=null, commentFlag=false)]
2020-04-12 00:12:05.005 INFO  [Thread-25]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-12 00:12:05.006 INFO  [Thread-25]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:78}] to 139.9.130.249:27017 because the pool has been closed.
2020-04-12 00:12:05.006 INFO  [Thread-25]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:4, serverValue:79}] to 139.9.130.249:27017 because the pool has been closed.
2020-04-12 00:12:05.007 INFO  [Thread-25]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:3, serverValue:80}] to 139.9.130.249:27017 because the pool has been closed.
2020-04-12 00:12:05.010 INFO  [Thread-25]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-12 00:12:05.077 INFO  [http-nio-1000-exec-4]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-12 00:12:08.968 INFO  [http-nio-1000-exec-4]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-12 00:12:16.777 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 2028 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-12 00:12:16.782 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-12 00:12:17.480 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-12 00:12:17.557 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 74ms. Found 4 MongoDB repository interfaces.
2020-04-12 00:12:17.947 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$3df9fcb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:17.993 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:18.005 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$16fd15d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:18.008 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$fdd4ba1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:18.011 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-12 00:12:18.057 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:18.069 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:18.099 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:22.662 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-12 00:12:22.663 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:22.764 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.048 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.053 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.061 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.064 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.066 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.070 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.072 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.075 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.lza.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.077 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.111 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.136 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:12:23.440 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-12 00:12:23.453 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-12 00:12:23.461 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-12 00:12:23.461 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-12 00:12:23.612 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-12 00:12:23.612 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 6781 ms
2020-04-12 00:12:25.227 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[139.9.130.249:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-12 00:12:25.227 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 139.9.130.249:27017 to client view of cluster
2020-04-12 00:12:25.442 INFO  [cluster-ClusterId{value='5e91ec698e705d07ec6cf388', description='null'}-139.9.130.249:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:81}] to 139.9.130.249:27017
2020-04-12 00:12:25.487 INFO  [cluster-ClusterId{value='5e91ec698e705d07ec6cf388', description='null'}-139.9.130.249:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=139.9.130.249:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 5]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=43367600}
2020-04-12 00:12:25.489 INFO  [cluster-ClusterId{value='5e91ec698e705d07ec6cf388', description='null'}-139.9.130.249:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-12 00:12:26.741 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-12 00:12:26.766 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-12 00:12:26.768 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 10.758 seconds (JVM running for 12.177)
2020-04-12 00:12:39.642 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-12 00:12:39.643 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-12 00:12:39.656 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 13 ms
2020-04-12 00:12:39.739 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/login
2020-04-12 00:12:39.740 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:12:39.741 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:39.742 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.login
2020-04-12 00:12:39.743 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[User(userId=null, username=liuzian, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-04-12 00:12:40.306 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 567
2020-04-12 00:12:40.355 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","password":"","sex":1,"updateTime":"2020-04-11 15:20:14","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian"},"token":"28857A001874405F5208FF8C5F495B05"},"msg":"操作成功!"}
2020-04-12 00:12:41.767 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-12 00:12:41.767 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/recomRead
2020-04-12 00:12:41.768 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:12:41.768 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:12:41.769 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:41.769 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:41.770 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-12 00:12:41.770 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.recomRead
2020-04-12 00:12:41.770 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:12:41.770 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:12:41.771 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-12 00:12:41.772 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:12:41.773 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:41.773 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-12 00:12:41.774 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-04-12 00:12:41.873 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 106
2020-04-12 00:12:41.880 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-12 00:12:41.892 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 125
2020-04-12 00:12:41.901 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":35,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":13,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}
2020-04-12 00:12:42.035 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 264
2020-04-12 00:12:42.040 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":35,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-11 16:09:42"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":13,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-11 15:17:04"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-11 15:19:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":2,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-11 13:33:53"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":5,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-11 14:11:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-12 00:12:42.269 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getList
2020-04-12 00:12:42.270 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:12:42.270 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:42.271 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getList
2020-04-12 00:12:42.271 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:12:42.280 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /link/list
2020-04-12 00:12:42.282 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:12:42.283 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:42.283 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LinkController.getAllLinkInfo
2020-04-12 00:12:42.284 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:12:42.377 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 108
2020-04-12 00:12:42.379 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}
2020-04-12 00:12:42.381 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 101
2020-04-12 00:12:42.383 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}
2020-04-12 00:12:45.405 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/read/1247423893702991872
2020-04-12 00:12:45.406 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:12:45.407 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:45.408 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.readById
2020-04-12 00:12:45.409 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:12:45.410 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247423893702991872
2020-04-12 00:12:45.410 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247423893702991872
2020-04-12 00:12:45.410 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247423893702991872
2020-04-12 00:12:45.411 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:12:45.411 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:12:45.411 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:12:45.411 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:45.411 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:45.411 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:45.412 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:12:45.412 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:12:45.412 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:12:45.414 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:12:45.414 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:12:45.414 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:12:45.662 INFO  [http-nio-1000-exec-10]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:82}] to 139.9.130.249:27017
2020-04-12 00:12:45.665 INFO  [http-nio-1000-exec-8]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:4, serverValue:83}] to 139.9.130.249:27017
2020-04-12 00:12:45.731 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 320
2020-04-12 00:12:45.731 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:12:51.628 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 6218
2020-04-12 00:12:51.633 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":35,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":38},"commentBlog":"1247423893702991872","commentContent":"ssss","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:09:48","id":"1249006746098253824"}],"msg":"操作成功!"}
2020-04-12 00:12:51.724 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 6319
2020-04-12 00:12:51.725 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":36,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","typeName":"java","version":38},"msg":"操作成功!"}
2020-04-12 00:12:51.769 INFO  [http-nio-1000-exec-9]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:3, serverValue:84}] to 139.9.130.249:27017
2020-04-12 00:12:51.814 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 6404
2020-04-12 00:12:51.815 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:12:57.130 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/save
2020-04-12 00:12:57.130 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:12:57.131 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:12:57.131 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.save
2020-04-12 00:12:57.131 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Comment(id=null, commentContent=sad, commentUser=null, user=null, commentBlog=1247423893702991872, blog=null, commentGood=null, createdTime=null, commentFlag=false)]
2020-04-12 00:13:14.566 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 17436
2020-04-12 00:13:14.566 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功!"}
2020-04-12 00:13:18.165 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-12 00:13:18.165 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:13:18.166 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:13:18.166 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-12 00:13:18.166 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-04-12 00:13:18.411 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 246
2020-04-12 00:13:18.412 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":36,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-11 16:12:43"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":13,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-11 15:17:04"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-11 15:19:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":2,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-11 13:33:53"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":5,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-11 14:11:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-12 00:13:20.002 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/read/1247423253719310336
2020-04-12 00:13:20.003 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:13:20.003 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:13:20.004 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.readById
2020-04-12 00:13:20.005 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423253719310336]
2020-04-12 00:13:20.309 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247423253719310336
2020-04-12 00:13:20.309 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247423253719310336
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247423253719310336
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423253719310336]
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423253719310336]
2020-04-12 00:13:20.310 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:13:20.311 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423253719310336]
2020-04-12 00:13:20.359 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 50
2020-04-12 00:13:20.359 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 50
2020-04-12 00:13:20.360 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":1,"msg":"操作成功!"}
2020-04-12 00:13:20.360 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":0,"msg":"操作成功!"}
2020-04-12 00:13:25.943 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 5941
2020-04-12 00:13:25.942 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 5633
2020-04-12 00:13:25.943 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功!"}
2020-04-12 00:13:25.943 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>1、从百度上搜索下载dubbo-admin-2.*.war然后传输到linux的webapp目录下</p>\n<p>建议更改一下war的名字</p>\n<p><img src=\"https://img-blog.csdn.net/20180509211247640?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTM4MzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" /></p>\n<p>2、访问公网地址/dubbo-admin</p>\n<p>用户名密码都是dubbo</p>\n<p>如果监控中心和注册中心在同一台服务器上，可以不需要任何配置。</p>\n<p>如果不在同一台服务器，需要修改配置文件：</p>\n<p>在tomcat的/webapps/dubbo-admin/WEB-INF/dubbo.properties</p>\n<p><img src=\"https://img-blog.csdn.net/20180509211657191?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTM4MzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" /></p>\n<p>这下知道为什么用户名和密码都是root了吧<br /><br /></p>","blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","blogType":14,"createdTime":"2020-04-07 07:17:33","typeName":"dubbo","version":15},"msg":"操作成功!"}
2020-04-12 00:13:29.423 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-12 00:13:29.424 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:13:29.424 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:13:29.424 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-12 00:13:29.424 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-04-12 00:13:29.622 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 199
2020-04-12 00:13:29.622 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":36,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-11 16:12:43"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-11 16:13:17"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-11 15:19:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":2,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-11 13:33:53"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":5,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-11 14:11:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-12 00:13:31.636 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/read/1247423893702991872
2020-04-12 00:13:31.636 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:13:31.636 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:13:31.637 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.readById
2020-04-12 00:13:31.637 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:13:31.955 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247423893702991872
2020-04-12 00:13:31.955 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247423893702991872
2020-04-12 00:13:31.955 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247423893702991872
2020-04-12 00:13:31.956 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:13:31.956 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:13:31.956 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:13:31.956 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:13:31.956 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:13:31.956 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:13:31.956 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:13:31.956 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:13:31.956 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:13:31.956 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:13:31.957 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:13:31.957 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:13:32.007 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 52
2020-04-12 00:13:32.007 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 52
2020-04-12 00:13:32.007 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:13:32.007 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:13:32.071 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 435
2020-04-12 00:13:32.071 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":37,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","typeName":"java","version":39},"msg":"操作成功!"}
2020-04-12 00:13:32.106 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 151
2020-04-12 00:13:32.107 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":36,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":39},"commentBlog":"1247423893702991872","commentContent":"sad","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:13:02","id":"1249007556785946624"},{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":35,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":38},"commentBlog":"1247423893702991872","commentContent":"ssss","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:09:48","id":"1249006746098253824"}],"msg":"操作成功!"}
2020-04-12 00:14:33.367 INFO  [Thread-21]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-12 00:14:33.368 INFO  [Thread-21]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:82}] to 139.9.130.249:27017 because the pool has been closed.
2020-04-12 00:14:33.369 INFO  [Thread-21]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:4, serverValue:83}] to 139.9.130.249:27017 because the pool has been closed.
2020-04-12 00:14:33.369 INFO  [Thread-21]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:3, serverValue:84}] to 139.9.130.249:27017 because the pool has been closed.
2020-04-12 00:14:33.375 INFO  [Thread-21]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-12 00:14:39.490 INFO  [main]com.lza.blog.BlogApplication.logStarting:50 -Starting BlogApplication on liu with PID 4428 (D:\software\JAVA\blog\target\classes started by liu in D:\software\JAVA\blog)
2020-04-12 00:14:39.504 INFO  [main]com.lza.blog.BlogApplication.logStartupProfileInfo:648 -No active profile set, falling back to default profiles: default
2020-04-12 00:14:40.203 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-12 00:14:40.282 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:185 -Finished Spring Data repository scanning in 76ms. Found 4 MongoDB repository interfaces.
2020-04-12 00:14:40.672 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.lza.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$ce88f772] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:40.724 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:40.737 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a78c1092] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:40.741 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8e63b4d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:40.744 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-12 00:14:40.797 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:40.810 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:40.835 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.222 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-12 00:14:45.222 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.318 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.596 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.603 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.613 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.621 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.624 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.lza.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.629 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.630 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.633 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.lza.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.635 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.lza.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.669 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:45.691 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 00:14:46.013 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:90 -Tomcat initialized with port(s): 1000 (http)
2020-04-12 00:14:46.031 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2020-04-12 00:14:46.041 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-12 00:14:46.042 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.31]
2020-04-12 00:14:46.233 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-12 00:14:46.234 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 6658 ms
2020-04-12 00:14:48.443 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[139.9.130.249:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-12 00:14:48.443 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 139.9.130.249:27017 to client view of cluster
2020-04-12 00:14:48.689 INFO  [cluster-ClusterId{value='5e91ecf88e705d114c1f79cc', description='null'}-139.9.130.249:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:85}] to 139.9.130.249:27017
2020-04-12 00:14:48.746 INFO  [cluster-ClusterId{value='5e91ecf88e705d114c1f79cc', description='null'}-139.9.130.249:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=139.9.130.249:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 5]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=55171900}
2020-04-12 00:14:48.747 INFO  [cluster-ClusterId{value='5e91ecf88e705d114c1f79cc', description='null'}-139.9.130.249:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-12 00:14:50.480 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2020-04-12 00:14:50.504 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:202 -Tomcat started on port(s): 1000 (http) with context path ''
2020-04-12 00:14:50.507 INFO  [main]com.lza.blog.BlogApplication.logStarted:59 -Started BlogApplication in 11.903 seconds (JVM running for 13.531)
2020-04-12 00:15:13.783 INFO  [http-nio-1000-exec-1]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-12 00:15:13.783 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-12 00:15:13.795 INFO  [http-nio-1000-exec-1]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2020-04-12 00:15:13.875 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /user/login
2020-04-12 00:15:13.875 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:15:13.876 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:15:13.877 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.UserController.login
2020-04-12 00:15:13.877 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[User(userId=null, username=liuzian, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2020-04-12 00:15:14.038 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 164
2020-04-12 00:15:14.102 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","password":"","sex":1,"updateTime":"2020-04-11 15:20:14","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian"},"token":"14B459990D94645D97951EF13376817F"},"msg":"操作成功!"}
2020-04-12 00:15:15.700 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-12 00:15:15.701 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/recomRead
2020-04-12 00:15:15.701 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:15:15.703 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:15:15.704 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:15:15.706 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getList
2020-04-12 00:15:15.709 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:15:15.709 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:15:15.709 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.recomRead
2020-04-12 00:15:15.710 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:15:15.710 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getList
2020-04-12 00:15:15.711 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:15:15.713 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-12 00:15:15.715 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:15:15.714 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:15:15.744 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-12 00:15:15.744 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:15:15.745 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:15:15.745 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-12 00:15:15.746 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-04-12 00:15:15.813 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 108
2020-04-12 00:15:15.817 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}
2020-04-12 00:15:15.827 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 127
2020-04-12 00:15:15.831 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-12 00:15:15.847 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 146
2020-04-12 00:15:15.853 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":37,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}
2020-04-12 00:15:16.002 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /link/list
2020-04-12 00:15:16.002 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:15:16.003 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:15:16.003 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LinkController.getAllLinkInfo
2020-04-12 00:15:16.003 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:15:16.007 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 263
2020-04-12 00:15:16.172 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":37,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-11 16:13:29"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-11 16:13:17"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-11 15:19:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":2,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-11 13:33:53"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":5,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-11 14:11:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-12 00:15:16.215 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 213
2020-04-12 00:15:16.217 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}
2020-04-12 00:15:23.212 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247423893702991872
2020-04-12 00:15:23.212 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247423893702991872
2020-04-12 00:15:23.212 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/read/1247423893702991872
2020-04-12 00:15:23.212 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247423893702991872
2020-04-12 00:15:23.213 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:15:23.213 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:15:23.213 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:15:23.213 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:15:23.213 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:15:23.213 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:15:23.213 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:15:23.213 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:15:23.213 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:15:23.213 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:15:23.214 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.readById
2020-04-12 00:15:23.214 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:15:23.214 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:15:23.214 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:15:23.214 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:15:23.214 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:15:23.540 INFO  [http-nio-1000-exec-9]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:3, serverValue:87}] to 139.9.130.249:27017
2020-04-12 00:15:23.540 INFO  [http-nio-1000-exec-10]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:4, serverValue:86}] to 139.9.130.249:27017
2020-04-12 00:15:23.609 INFO  [http-nio-1000-exec-8]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:88}] to 139.9.130.249:27017
2020-04-12 00:15:23.612 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 400
2020-04-12 00:15:23.612 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 400
2020-04-12 00:15:23.613 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:15:23.613 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:15:23.758 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 546
2020-04-12 00:15:23.758 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":38,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","typeName":"java","version":40},"msg":"操作成功!"}
2020-04-12 00:15:23.778 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 566
2020-04-12 00:15:23.786 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":36,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":39},"commentBlog":"1247423893702991872","commentContent":"sad","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:13:02","id":"1249007556785946624"},{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":35,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":38},"commentBlog":"1247423893702991872","commentContent":"ssss","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:09:48","id":"1249006746098253824"}],"msg":"操作成功!"}
2020-04-12 00:16:27.441 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/read/1247423893702991872
2020-04-12 00:16:27.442 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:16:27.442 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:16:27.443 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.readById
2020-04-12 00:16:27.443 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:16:27.443 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247423893702991872
2020-04-12 00:16:27.443 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247423893702991872
2020-04-12 00:16:27.443 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:16:27.443 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:16:27.443 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:16:27.443 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:16:27.444 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:16:27.444 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247423893702991872
2020-04-12 00:16:27.444 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:16:27.444 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:16:27.444 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:16:27.444 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:16:27.444 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:16:36.760 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:16:36.760 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:16:36.761 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/recomRead
2020-04-12 00:16:36.761 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:16:36.761 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:16:36.761 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-12 00:16:36.761 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.recomRead
2020-04-12 00:16:36.761 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:16:36.762 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:16:36.762 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:16:36.762 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-12 00:16:36.762 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:16:36.814 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 9371
2020-04-12 00:16:36.814 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 9370
2020-04-12 00:16:36.814 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:16:36.814 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:16:36.938 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 177
2020-04-12 00:16:36.938 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-12 00:16:37.721 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 10280
2020-04-12 00:16:37.721 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":39,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","typeName":"java","version":41},"msg":"操作成功!"}
2020-04-12 00:16:37.721 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 960
2020-04-12 00:16:37.722 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":38,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}
2020-04-12 00:18:22.983 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 115540
2020-04-12 00:18:22.984 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":36,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":39},"commentBlog":"1247423893702991872","commentContent":"sad","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:13:02","id":"1249007556785946624"},{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":35,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":38},"commentBlog":"1247423893702991872","commentContent":"ssss","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:09:48","id":"1249006746098253824"}],"msg":"操作成功!"}
2020-04-12 00:18:29.358 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/read/1247423893702991872
2020-04-12 00:18:29.359 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:18:29.359 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:18:29.360 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.readById
2020-04-12 00:18:29.361 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:18:29.363 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247423893702991872
2020-04-12 00:18:29.363 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:18:29.363 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:18:29.363 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247423893702991872
2020-04-12 00:18:29.364 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:18:29.364 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:18:29.365 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:18:29.365 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:18:29.365 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:18:29.365 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:18:34.640 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/recomRead
2020-04-12 00:18:34.639 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-12 00:18:34.640 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:18:34.640 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:18:34.640 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247423893702991872
2020-04-12 00:18:34.640 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:18:34.640 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:18:34.640 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:18:34.640 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-12 00:18:34.640 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.recomRead
2020-04-12 00:18:34.641 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:18:34.641 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:18:34.641 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:18:34.641 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:18:34.641 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:18:34.682 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 5319
2020-04-12 00:18:34.683 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:18:34.716 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 76
2020-04-12 00:18:34.717 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:18:35.007 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 367
2020-04-12 00:18:35.007 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":39,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}
2020-04-12 00:18:35.285 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 646
2020-04-12 00:18:35.285 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-12 00:18:35.330 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 5972
2020-04-12 00:18:35.331 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":40,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","typeName":"java","version":42},"msg":"操作成功!"}
2020-04-12 00:19:38.879 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-12 00:19:38.880 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:19:38.880 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:38.880 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-12 00:19:38.880 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-04-12 00:19:38.951 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 69588
2020-04-12 00:19:38.952 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":36,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":39},"commentBlog":"1247423893702991872","commentContent":"sad","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:13:02","id":"1249007556785946624"},{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":35,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":38},"commentBlog":"1247423893702991872","commentContent":"ssss","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:09:48","id":"1249006746098253824"}],"msg":"操作成功!"}
2020-04-12 00:19:39.165 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 286
2020-04-12 00:19:39.166 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":40,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-11 16:18:32"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-11 16:13:17"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-11 15:19:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":2,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-11 13:33:53"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":5,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-11 14:11:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-12 00:19:44.809 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-12 00:19:44.810 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:19:44.810 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:44.810 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-12 00:19:44.810 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-04-12 00:19:45.868 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-12 00:19:45.868 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:19:45.869 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:45.869 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-12 00:19:45.870 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=blog_goods, sortMethod=desc)]
2020-04-12 00:19:46.017 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1208
2020-04-12 00:19:46.018 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":40,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-11 16:18:32"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-11 16:13:17"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-11 15:19:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":2,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-11 13:33:53"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":5,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-11 14:11:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-12 00:19:46.061 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 193
2020-04-12 00:19:46.061 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":40,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-11 16:18:32"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-11 15:19:19"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-11 16:13:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":5,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-11 14:11:27"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":2,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-11 13:33:53"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-12 00:19:47.523 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/read/1247423893702991872
2020-04-12 00:19:47.524 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:19:47.524 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:47.525 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.readById
2020-04-12 00:19:47.527 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:19:47.531 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247423893702991872
2020-04-12 00:19:47.531 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247423893702991872
2020-04-12 00:19:47.531 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247423893702991872
2020-04-12 00:19:47.532 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:19:47.532 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:19:47.532 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:19:47.532 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:47.532 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:47.532 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:47.532 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:19:47.532 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:19:47.532 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:19:47.533 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:19:47.533 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:19:47.533 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247423893702991872]
2020-04-12 00:19:47.624 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 93
2020-04-12 00:19:47.624 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":36,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":39},"commentBlog":"1247423893702991872","commentContent":"sad","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:13:02","id":"1249007556785946624"},{"blog":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":35,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":38},"commentBlog":"1247423893702991872","commentContent":"ssss","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:09:48","id":"1249006746098253824"}],"msg":"操作成功!"}
2020-04-12 00:19:47.877 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 346
2020-04-12 00:19:47.877 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:19:47.886 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 355
2020-04-12 00:19:47.886 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":2,"msg":"操作成功!"}
2020-04-12 00:19:47.971 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 448
2020-04-12 00:19:47.972 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":2,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":2,"blogId":"1247423893702991872","blogRead":41,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","typeName":"java","version":43},"msg":"操作成功!"}
2020-04-12 00:19:48.745 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getByPage
2020-04-12 00:19:48.746 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:19:48.747 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:48.748 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getByPage
2020-04-12 00:19:48.748 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2020-04-12 00:19:48.937 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 192
2020-04-12 00:19:48.939 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":41,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-11 16:19:45"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-11 16:13:17"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-11 15:19:19"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":2,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-11 13:33:53"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":5,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-11 14:11:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}
2020-04-12 00:19:51.665 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/read/1247421732856291328
2020-04-12 00:19:51.666 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:19:51.666 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:51.666 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.readById
2020-04-12 00:19:51.667 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:19:51.674 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247421732856291328
2020-04-12 00:19:51.674 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247421732856291328
2020-04-12 00:19:51.674 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247421732856291328
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:19:51.675 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:19:51.752 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 78
2020-04-12 00:19:51.752 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":0,"msg":"操作成功!"}
2020-04-12 00:19:51.753 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 79
2020-04-12 00:19:51.753 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":0,"msg":"操作成功!"}
2020-04-12 00:19:51.766 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 92
2020-04-12 00:19:51.766 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[],"msg":"操作成功!"}
2020-04-12 00:19:52.081 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 416
2020-04-12 00:19:52.082 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>第一次用springboot构建项目，后台对象传给前台显示的时候，因为用的是thymeleaf模板，所以需要用它规定好的格式进行数据的动态显示，开始查看官方文档进行记录：</p>\n<p>thymeleaf模板语法,都以th属性开头,如:&nbsp; &nbsp; &lt;span th:text=\"...\"&gt;</p>\n<h2 id=\"一thymeleaf-简单表达式\">一,thymeleaf-简单表达式</h2>\n<p><strong>1.变量表达式</strong></p>\n<p>Thymeleaf模板引擎在进行模板渲染时，还会附带一个Context存放进行模板渲染的变量，在模板中定义的表达式本质上就是从Context中获取对应的变量的值&nbsp; &nbsp;如：&nbsp;&lt;p&gt;Today is: &lt;span th:text=\"${day}\"&gt;2 November 2016&lt;/span&gt;.&lt;/p&gt;</p>\n<p>假设day的值为2018年11月2日，那么渲染结果为：&lt;p&gt;Today is: 2018年11月2日.&lt;/p&gt;。<br />注意 : 渲染后,模板中span值2 November 2016将被覆盖，从中也可以看出，前台可以先放好静态的数据，当后台没有数据传过来的时候可以显示静态的数据进行显示，做好前后端分离。<br /><br /><strong>2.选择或星号表达式</strong></p>\n<p>可以简单理解为内层是对外层对象的引用&nbsp; 如：</p>\n<p>&lt;div th:object=\"${session.user}\"&gt;<br />&nbsp; &nbsp; &lt;p&gt;Name: &lt;span th:text=\"*{firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &nbsp; &lt;p&gt;Surname: &lt;span th:text=\"*{lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &nbsp; &lt;p&gt;Nationality: &lt;span th:text=\"*{nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;<br />&lt;/div&gt;</p>\n<p>等同于以下方式:</p>\n<p>&lt;div&gt;<br />&nbsp; &lt;p&gt;Name: &lt;span th:text=\"${session.user.firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &lt;p&gt;Surname: &lt;span th:text=\"${session.user.lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &lt;p&gt;Nationality: &lt;span th:text=\"${session.user.nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;<br />&lt;/div&gt;</p>\n<p>如果没有与th:object结合使用，*{}与${}效果一样，因为其范围自动扩展到context。<br /><br /></p>\n<p><br /><strong>3.文字国际化表达式</strong></p>\n<p>文字国际化表达式允许我们从一个外部文件获取区域文字信息(.properties)&nbsp;<br />使用Key-Value方式，还可以提供一组参数(可选).</p>\n<p><strong>#{main.title}<br />#{message.entrycreated(${entryId})}</strong></p>\n<p>模板引用:</p>\n<p><strong>&lt;table&gt;<br />&nbsp; &nbsp; &lt;th th:text=\"#{header.address.city}\"&gt;...&lt;/th&gt;<br />&nbsp; &nbsp; &lt;th th:text=\"#{header.address.country}\"&gt;...&lt;/th&gt;<br />&lt;/table&gt;<br />4.URL表达式</strong></p>\n<p>URL表达式指的是把一个有用的上下文或会话信息添加到URL，这个过程经常被叫做URL重写。&nbsp;<br />Thymeleaf对于URL的处理是通过语法@{&hellip;}来处理的</p>\n<p>&lt;!&mdash; 绝对路径 &mdash;&gt;<br />&lt;!-- Will produce 'http://localhost:8080/gtvg/order/details?orderId=3' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{http://localhost:8080/gtvg/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>&lt;!&mdash; 相对路径 带参数&mdash;&gt;<br />&lt;!-- Will produce '/gtvg/order/details?orderId=3' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>&lt;!-- Will produce '/gtvg/order/3/details' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{/order/{orderId}/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>Thymeleaf支持相对路径和绝对路径<br />(orderId=${o.id})表示将括号内的内容作为URL参数处理<br />@{...}表达式中可以通过{orderId}访问Context中的orderId变量<br />@{/order}是Context相关的相对路径，在渲染时会自动添加上当前Web应用的Context名字，假设context名字为app，那么结果应该是/app/order<br /><br /></p>\n<h2 id=\"二thymeleaf-字面值\">二.thymeleaf-字面值</h2>\n<p>　&nbsp; &nbsp;1.文本文字：&rsquo;one text&rsquo;, &lsquo;Another one!&rsquo;,&hellip;&nbsp;<br />　　2.文字数量：0, 34, 3.0, 12.3,&hellip;&nbsp;<br />　　3.布尔型常量：true, false&nbsp;<br />　　4.空的文字：null&nbsp;<br />　　5.文字标记：one, sometext, main,&hellip;&nbsp;</p>\n<h2 id=\"三thymeleaf-文本处理\">三：thymeleaf-文本处理</h2>\n<p>1.字符串拼接：+</p>\n<p>&lt;span th:text=\"'Welcome to our application, ' + ${user.name} + '!'\"&gt;</p>\n<p>2.文字替换：|The name is ${name}|</p>\n<p>&lt;span th:text=\"|Welcome to our application, ${user.name}!|\"&gt;</p>\n<p>相比以上两种方式都可以实现字符串合并,但是,|&hellip;|中只能包含变量表达式${&hellip;}，不能包含其他常量、条件表达式等。</p>\n<p>&nbsp;</p>","blogGoods":0,"blogId":"1247421732856291328","blogRead":3,"blogTitle":"SpringBoot-thymeleaf模板语法","blogType":7,"createdTime":"2020-02-17 07:11:31","typeName":"springboot","version":3},"msg":"操作成功!"}
2020-04-12 00:19:57.312 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/save
2020-04-12 00:19:57.313 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:19:57.313 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:19:57.313 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.save
2020-04-12 00:19:57.313 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Comment(id=null, commentContent=ssadsaas, commentUser=null, user=null, commentBlog=1247421732856291328, blog=null, commentGood=null, createdTime=null, commentFlag=false)]
2020-04-12 00:20:09.973 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 12661
2020-04-12 00:20:09.973 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功!"}
2020-04-12 00:20:26.695 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/read/1247421732856291328
2020-04-12 00:20:26.697 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:20:26.698 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:20:26.698 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.readById
2020-04-12 00:20:26.698 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:20:26.699 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /admin/getAdmin
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247421732856291328
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247421732856291328
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247421732856291328
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:20:26.700 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.AdminController.getAdminInfo
2020-04-12 00:20:26.701 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:20:26.701 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:20:26.701 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:20:26.701 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:20:26.701 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:20:26.701 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:20:26.701 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:20:26.748 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 48
2020-04-12 00:20:26.749 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":0,"msg":"操作成功!"}
2020-04-12 00:20:26.798 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 98
2020-04-12 00:20:26.799 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":0,"msg":"操作成功!"}
2020-04-12 00:20:26.819 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 120
2020-04-12 00:20:26.819 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}
2020-04-12 00:20:26.881 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 181
2020-04-12 00:20:26.882 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blog":{"blogCollection":0,"blogComment":0,"blogContent":"<p>第一次用springboot构建项目，后台对象传给前台显示的时候，因为用的是thymeleaf模板，所以需要用它规定好的格式进行数据的动态显示，开始查看官方文档进行记录：</p>\n<p>thymeleaf模板语法,都以th属性开头,如:&nbsp; &nbsp; &lt;span th:text=\"...\"&gt;</p>\n<h2 id=\"一thymeleaf-简单表达式\">一,thymeleaf-简单表达式</h2>\n<p><strong>1.变量表达式</strong></p>\n<p>Thymeleaf模板引擎在进行模板渲染时，还会附带一个Context存放进行模板渲染的变量，在模板中定义的表达式本质上就是从Context中获取对应的变量的值&nbsp; &nbsp;如：&nbsp;&lt;p&gt;Today is: &lt;span th:text=\"${day}\"&gt;2 November 2016&lt;/span&gt;.&lt;/p&gt;</p>\n<p>假设day的值为2018年11月2日，那么渲染结果为：&lt;p&gt;Today is: 2018年11月2日.&lt;/p&gt;。<br />注意 : 渲染后,模板中span值2 November 2016将被覆盖，从中也可以看出，前台可以先放好静态的数据，当后台没有数据传过来的时候可以显示静态的数据进行显示，做好前后端分离。<br /><br /><strong>2.选择或星号表达式</strong></p>\n<p>可以简单理解为内层是对外层对象的引用&nbsp; 如：</p>\n<p>&lt;div th:object=\"${session.user}\"&gt;<br />&nbsp; &nbsp; &lt;p&gt;Name: &lt;span th:text=\"*{firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &nbsp; &lt;p&gt;Surname: &lt;span th:text=\"*{lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &nbsp; &lt;p&gt;Nationality: &lt;span th:text=\"*{nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;<br />&lt;/div&gt;</p>\n<p>等同于以下方式:</p>\n<p>&lt;div&gt;<br />&nbsp; &lt;p&gt;Name: &lt;span th:text=\"${session.user.firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &lt;p&gt;Surname: &lt;span th:text=\"${session.user.lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &lt;p&gt;Nationality: &lt;span th:text=\"${session.user.nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;<br />&lt;/div&gt;</p>\n<p>如果没有与th:object结合使用，*{}与${}效果一样，因为其范围自动扩展到context。<br /><br /></p>\n<p><br /><strong>3.文字国际化表达式</strong></p>\n<p>文字国际化表达式允许我们从一个外部文件获取区域文字信息(.properties)&nbsp;<br />使用Key-Value方式，还可以提供一组参数(可选).</p>\n<p><strong>#{main.title}<br />#{message.entrycreated(${entryId})}</strong></p>\n<p>模板引用:</p>\n<p><strong>&lt;table&gt;<br />&nbsp; &nbsp; &lt;th th:text=\"#{header.address.city}\"&gt;...&lt;/th&gt;<br />&nbsp; &nbsp; &lt;th th:text=\"#{header.address.country}\"&gt;...&lt;/th&gt;<br />&lt;/table&gt;<br />4.URL表达式</strong></p>\n<p>URL表达式指的是把一个有用的上下文或会话信息添加到URL，这个过程经常被叫做URL重写。&nbsp;<br />Thymeleaf对于URL的处理是通过语法@{&hellip;}来处理的</p>\n<p>&lt;!&mdash; 绝对路径 &mdash;&gt;<br />&lt;!-- Will produce 'http://localhost:8080/gtvg/order/details?orderId=3' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{http://localhost:8080/gtvg/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>&lt;!&mdash; 相对路径 带参数&mdash;&gt;<br />&lt;!-- Will produce '/gtvg/order/details?orderId=3' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>&lt;!-- Will produce '/gtvg/order/3/details' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{/order/{orderId}/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>Thymeleaf支持相对路径和绝对路径<br />(orderId=${o.id})表示将括号内的内容作为URL参数处理<br />@{...}表达式中可以通过{orderId}访问Context中的orderId变量<br />@{/order}是Context相关的相对路径，在渲染时会自动添加上当前Web应用的Context名字，假设context名字为app，那么结果应该是/app/order<br /><br /></p>\n<h2 id=\"二thymeleaf-字面值\">二.thymeleaf-字面值</h2>\n<p>　&nbsp; &nbsp;1.文本文字：&rsquo;one text&rsquo;, &lsquo;Another one!&rsquo;,&hellip;&nbsp;<br />　　2.文字数量：0, 34, 3.0, 12.3,&hellip;&nbsp;<br />　　3.布尔型常量：true, false&nbsp;<br />　　4.空的文字：null&nbsp;<br />　　5.文字标记：one, sometext, main,&hellip;&nbsp;</p>\n<h2 id=\"三thymeleaf-文本处理\">三：thymeleaf-文本处理</h2>\n<p>1.字符串拼接：+</p>\n<p>&lt;span th:text=\"'Welcome to our application, ' + ${user.name} + '!'\"&gt;</p>\n<p>2.文字替换：|The name is ${name}|</p>\n<p>&lt;span th:text=\"|Welcome to our application, ${user.name}!|\"&gt;</p>\n<p>相比以上两种方式都可以实现字符串合并,但是,|&hellip;|中只能包含变量表达式${&hellip;}，不能包含其他常量、条件表达式等。</p>\n<p>&nbsp;</p>","blogGoods":0,"blogId":"1247421732856291328","blogRead":3,"blogTitle":"SpringBoot-thymeleaf模板语法","blogType":7,"createdTime":"2020-02-17 07:11:31","version":4},"commentBlog":"1247421732856291328","commentContent":"ssadsaas","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:20:05","id":"1249009332071260160","user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-11 15:20:14","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian","version":8}}],"msg":"操作成功!"}
2020-04-12 00:20:26.996 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/recomRead
2020-04-12 00:20:26.996 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:20:26.997 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:20:26.997 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.recomRead
2020-04-12 00:20:26.997 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:20:27.094 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 98
2020-04-12 00:20:27.094 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":41,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":1,"blogId":"1247423253719310336","blogRead":14,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}
2020-04-12 00:20:27.136 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 441
2020-04-12 00:20:27.138 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>第一次用springboot构建项目，后台对象传给前台显示的时候，因为用的是thymeleaf模板，所以需要用它规定好的格式进行数据的动态显示，开始查看官方文档进行记录：</p>\n<p>thymeleaf模板语法,都以th属性开头,如:&nbsp; &nbsp; &lt;span th:text=\"...\"&gt;</p>\n<h2 id=\"一thymeleaf-简单表达式\">一,thymeleaf-简单表达式</h2>\n<p><strong>1.变量表达式</strong></p>\n<p>Thymeleaf模板引擎在进行模板渲染时，还会附带一个Context存放进行模板渲染的变量，在模板中定义的表达式本质上就是从Context中获取对应的变量的值&nbsp; &nbsp;如：&nbsp;&lt;p&gt;Today is: &lt;span th:text=\"${day}\"&gt;2 November 2016&lt;/span&gt;.&lt;/p&gt;</p>\n<p>假设day的值为2018年11月2日，那么渲染结果为：&lt;p&gt;Today is: 2018年11月2日.&lt;/p&gt;。<br />注意 : 渲染后,模板中span值2 November 2016将被覆盖，从中也可以看出，前台可以先放好静态的数据，当后台没有数据传过来的时候可以显示静态的数据进行显示，做好前后端分离。<br /><br /><strong>2.选择或星号表达式</strong></p>\n<p>可以简单理解为内层是对外层对象的引用&nbsp; 如：</p>\n<p>&lt;div th:object=\"${session.user}\"&gt;<br />&nbsp; &nbsp; &lt;p&gt;Name: &lt;span th:text=\"*{firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &nbsp; &lt;p&gt;Surname: &lt;span th:text=\"*{lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &nbsp; &lt;p&gt;Nationality: &lt;span th:text=\"*{nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;<br />&lt;/div&gt;</p>\n<p>等同于以下方式:</p>\n<p>&lt;div&gt;<br />&nbsp; &lt;p&gt;Name: &lt;span th:text=\"${session.user.firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &lt;p&gt;Surname: &lt;span th:text=\"${session.user.lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &lt;p&gt;Nationality: &lt;span th:text=\"${session.user.nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;<br />&lt;/div&gt;</p>\n<p>如果没有与th:object结合使用，*{}与${}效果一样，因为其范围自动扩展到context。<br /><br /></p>\n<p><br /><strong>3.文字国际化表达式</strong></p>\n<p>文字国际化表达式允许我们从一个外部文件获取区域文字信息(.properties)&nbsp;<br />使用Key-Value方式，还可以提供一组参数(可选).</p>\n<p><strong>#{main.title}<br />#{message.entrycreated(${entryId})}</strong></p>\n<p>模板引用:</p>\n<p><strong>&lt;table&gt;<br />&nbsp; &nbsp; &lt;th th:text=\"#{header.address.city}\"&gt;...&lt;/th&gt;<br />&nbsp; &nbsp; &lt;th th:text=\"#{header.address.country}\"&gt;...&lt;/th&gt;<br />&lt;/table&gt;<br />4.URL表达式</strong></p>\n<p>URL表达式指的是把一个有用的上下文或会话信息添加到URL，这个过程经常被叫做URL重写。&nbsp;<br />Thymeleaf对于URL的处理是通过语法@{&hellip;}来处理的</p>\n<p>&lt;!&mdash; 绝对路径 &mdash;&gt;<br />&lt;!-- Will produce 'http://localhost:8080/gtvg/order/details?orderId=3' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{http://localhost:8080/gtvg/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>&lt;!&mdash; 相对路径 带参数&mdash;&gt;<br />&lt;!-- Will produce '/gtvg/order/details?orderId=3' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>&lt;!-- Will produce '/gtvg/order/3/details' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{/order/{orderId}/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>Thymeleaf支持相对路径和绝对路径<br />(orderId=${o.id})表示将括号内的内容作为URL参数处理<br />@{...}表达式中可以通过{orderId}访问Context中的orderId变量<br />@{/order}是Context相关的相对路径，在渲染时会自动添加上当前Web应用的Context名字，假设context名字为app，那么结果应该是/app/order<br /><br /></p>\n<h2 id=\"二thymeleaf-字面值\">二.thymeleaf-字面值</h2>\n<p>　&nbsp; &nbsp;1.文本文字：&rsquo;one text&rsquo;, &lsquo;Another one!&rsquo;,&hellip;&nbsp;<br />　　2.文字数量：0, 34, 3.0, 12.3,&hellip;&nbsp;<br />　　3.布尔型常量：true, false&nbsp;<br />　　4.空的文字：null&nbsp;<br />　　5.文字标记：one, sometext, main,&hellip;&nbsp;</p>\n<h2 id=\"三thymeleaf-文本处理\">三：thymeleaf-文本处理</h2>\n<p>1.字符串拼接：+</p>\n<p>&lt;span th:text=\"'Welcome to our application, ' + ${user.name} + '!'\"&gt;</p>\n<p>2.文字替换：|The name is ${name}|</p>\n<p>&lt;span th:text=\"|Welcome to our application, ${user.name}!|\"&gt;</p>\n<p>相比以上两种方式都可以实现字符串合并,但是,|&hellip;|中只能包含变量表达式${&hellip;}，不能包含其他常量、条件表达式等。</p>\n<p>&nbsp;</p>","blogGoods":0,"blogId":"1247421732856291328","blogRead":4,"blogTitle":"SpringBoot-thymeleaf模板语法","blogType":7,"createdTime":"2020-02-17 07:11:31","typeName":"springboot","version":4},"msg":"操作成功!"}
2020-04-12 00:20:27.224 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /music/getList
2020-04-12 00:20:27.224 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:20:27.224 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:20:27.224 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.MusicController.getList
2020-04-12 00:20:27.225 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:20:27.266 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /link/list
2020-04-12 00:20:27.266 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:20:27.266 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:20:27.267 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.LinkController.getAllLinkInfo
2020-04-12 00:20:27.267 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[]
2020-04-12 00:20:27.359 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 93
2020-04-12 00:20:27.360 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}
2020-04-12 00:20:27.386 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 162
2020-04-12 00:20:27.386 INFO  [http-nio-1000-exec-5]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}
2020-04-12 00:24:15.977 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/save
2020-04-12 00:24:15.978 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:24:15.978 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:24:15.978 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.save
2020-04-12 00:24:15.978 INFO  [http-nio-1000-exec-10]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Comment(id=null, commentContent=经历千辛万苦终于可以评论了,难得难得, commentUser=null, user=null, commentBlog=1247421732856291328, blog=null, commentGood=null, createdTime=null, commentFlag=false)]
2020-04-12 00:24:31.031 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/save
2020-04-12 00:24:31.032 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:24:31.032 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:24:31.032 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.save
2020-04-12 00:24:31.032 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Comment(id=null, commentContent=经历千辛万苦终于可以评论了,难得难得, commentUser=null, user=null, commentBlog=1247421732856291328, blog=null, commentGood=null, createdTime=null, commentFlag=false)]
2020-04-12 00:24:36.264 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/save
2020-04-12 00:24:36.264 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:24:36.264 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:24:36.264 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.save
2020-04-12 00:24:36.265 INFO  [http-nio-1000-exec-4]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Comment(id=null, commentContent=经历千辛万苦终于可以评论了,难得难得, commentUser=null, user=null, commentBlog=1247421732856291328, blog=null, commentGood=null, createdTime=null, commentFlag=false)]
2020-04-12 00:24:52.386 INFO  [http-nio-1000-exec-10]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:4, serverValue:86}] to 139.9.130.249:27017 because there was a socket exception raised by this connection.
2020-04-12 00:24:52.418 INFO  [http-nio-1000-exec-8]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:88}] to 139.9.130.249:27017 because there was a socket exception raised by this connection.
2020-04-12 00:24:53.614 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/save
2020-04-12 00:24:53.615 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:24:53.616 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:24:53.616 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.save
2020-04-12 00:24:53.617 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Comment(id=null, commentContent=经历千辛万苦终于可以评论了,难得难得ss, commentUser=null, user=null, commentBlog=1247421732856291328, blog=null, commentGood=null, createdTime=null, commentFlag=false)]
2020-04-12 00:24:54.367 INFO  [http-nio-1000-exec-3]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:5, serverValue:90}] to 139.9.130.249:27017
2020-04-12 00:24:54.415 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 801
2020-04-12 00:24:54.415 INFO  [http-nio-1000-exec-3]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"评论成功!"}
2020-04-12 00:24:54.680 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /comment/getByBlog/1247421732856291328
2020-04-12 00:24:54.681 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:24:54.681 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:24:54.681 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.CommentController.getByBlog
2020-04-12 00:24:54.681 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:24:54.795 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 115
2020-04-12 00:24:54.796 INFO  [http-nio-1000-exec-9]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":[{"blog":{"blogCollection":0,"blogComment":0,"blogContent":"<p>第一次用springboot构建项目，后台对象传给前台显示的时候，因为用的是thymeleaf模板，所以需要用它规定好的格式进行数据的动态显示，开始查看官方文档进行记录：</p>\n<p>thymeleaf模板语法,都以th属性开头,如:&nbsp; &nbsp; &lt;span th:text=\"...\"&gt;</p>\n<h2 id=\"一thymeleaf-简单表达式\">一,thymeleaf-简单表达式</h2>\n<p><strong>1.变量表达式</strong></p>\n<p>Thymeleaf模板引擎在进行模板渲染时，还会附带一个Context存放进行模板渲染的变量，在模板中定义的表达式本质上就是从Context中获取对应的变量的值&nbsp; &nbsp;如：&nbsp;&lt;p&gt;Today is: &lt;span th:text=\"${day}\"&gt;2 November 2016&lt;/span&gt;.&lt;/p&gt;</p>\n<p>假设day的值为2018年11月2日，那么渲染结果为：&lt;p&gt;Today is: 2018年11月2日.&lt;/p&gt;。<br />注意 : 渲染后,模板中span值2 November 2016将被覆盖，从中也可以看出，前台可以先放好静态的数据，当后台没有数据传过来的时候可以显示静态的数据进行显示，做好前后端分离。<br /><br /><strong>2.选择或星号表达式</strong></p>\n<p>可以简单理解为内层是对外层对象的引用&nbsp; 如：</p>\n<p>&lt;div th:object=\"${session.user}\"&gt;<br />&nbsp; &nbsp; &lt;p&gt;Name: &lt;span th:text=\"*{firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &nbsp; &lt;p&gt;Surname: &lt;span th:text=\"*{lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &nbsp; &lt;p&gt;Nationality: &lt;span th:text=\"*{nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;<br />&lt;/div&gt;</p>\n<p>等同于以下方式:</p>\n<p>&lt;div&gt;<br />&nbsp; &lt;p&gt;Name: &lt;span th:text=\"${session.user.firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &lt;p&gt;Surname: &lt;span th:text=\"${session.user.lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &lt;p&gt;Nationality: &lt;span th:text=\"${session.user.nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;<br />&lt;/div&gt;</p>\n<p>如果没有与th:object结合使用，*{}与${}效果一样，因为其范围自动扩展到context。<br /><br /></p>\n<p><br /><strong>3.文字国际化表达式</strong></p>\n<p>文字国际化表达式允许我们从一个外部文件获取区域文字信息(.properties)&nbsp;<br />使用Key-Value方式，还可以提供一组参数(可选).</p>\n<p><strong>#{main.title}<br />#{message.entrycreated(${entryId})}</strong></p>\n<p>模板引用:</p>\n<p><strong>&lt;table&gt;<br />&nbsp; &nbsp; &lt;th th:text=\"#{header.address.city}\"&gt;...&lt;/th&gt;<br />&nbsp; &nbsp; &lt;th th:text=\"#{header.address.country}\"&gt;...&lt;/th&gt;<br />&lt;/table&gt;<br />4.URL表达式</strong></p>\n<p>URL表达式指的是把一个有用的上下文或会话信息添加到URL，这个过程经常被叫做URL重写。&nbsp;<br />Thymeleaf对于URL的处理是通过语法@{&hellip;}来处理的</p>\n<p>&lt;!&mdash; 绝对路径 &mdash;&gt;<br />&lt;!-- Will produce 'http://localhost:8080/gtvg/order/details?orderId=3' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{http://localhost:8080/gtvg/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>&lt;!&mdash; 相对路径 带参数&mdash;&gt;<br />&lt;!-- Will produce '/gtvg/order/details?orderId=3' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>&lt;!-- Will produce '/gtvg/order/3/details' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{/order/{orderId}/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>Thymeleaf支持相对路径和绝对路径<br />(orderId=${o.id})表示将括号内的内容作为URL参数处理<br />@{...}表达式中可以通过{orderId}访问Context中的orderId变量<br />@{/order}是Context相关的相对路径，在渲染时会自动添加上当前Web应用的Context名字，假设context名字为app，那么结果应该是/app/order<br /><br /></p>\n<h2 id=\"二thymeleaf-字面值\">二.thymeleaf-字面值</h2>\n<p>　&nbsp; &nbsp;1.文本文字：&rsquo;one text&rsquo;, &lsquo;Another one!&rsquo;,&hellip;&nbsp;<br />　　2.文字数量：0, 34, 3.0, 12.3,&hellip;&nbsp;<br />　　3.布尔型常量：true, false&nbsp;<br />　　4.空的文字：null&nbsp;<br />　　5.文字标记：one, sometext, main,&hellip;&nbsp;</p>\n<h2 id=\"三thymeleaf-文本处理\">三：thymeleaf-文本处理</h2>\n<p>1.字符串拼接：+</p>\n<p>&lt;span th:text=\"'Welcome to our application, ' + ${user.name} + '!'\"&gt;</p>\n<p>2.文字替换：|The name is ${name}|</p>\n<p>&lt;span th:text=\"|Welcome to our application, ${user.name}!|\"&gt;</p>\n<p>相比以上两种方式都可以实现字符串合并,但是,|&hellip;|中只能包含变量表达式${&hellip;}，不能包含其他常量、条件表达式等。</p>\n<p>&nbsp;</p>","blogGoods":0,"blogId":"1247421732856291328","blogRead":4,"blogTitle":"SpringBoot-thymeleaf模板语法","blogType":7,"createdTime":"2020-02-17 07:11:31","version":5},"commentBlog":"1247421732856291328","commentContent":"经历千辛万苦终于可以评论了,难得难得ss","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:24:53","id":"1249010543067488256","user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-11 15:20:14","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian","version":8}},{"blog":{"blogCollection":0,"blogComment":0,"blogContent":"<p>第一次用springboot构建项目，后台对象传给前台显示的时候，因为用的是thymeleaf模板，所以需要用它规定好的格式进行数据的动态显示，开始查看官方文档进行记录：</p>\n<p>thymeleaf模板语法,都以th属性开头,如:&nbsp; &nbsp; &lt;span th:text=\"...\"&gt;</p>\n<h2 id=\"一thymeleaf-简单表达式\">一,thymeleaf-简单表达式</h2>\n<p><strong>1.变量表达式</strong></p>\n<p>Thymeleaf模板引擎在进行模板渲染时，还会附带一个Context存放进行模板渲染的变量，在模板中定义的表达式本质上就是从Context中获取对应的变量的值&nbsp; &nbsp;如：&nbsp;&lt;p&gt;Today is: &lt;span th:text=\"${day}\"&gt;2 November 2016&lt;/span&gt;.&lt;/p&gt;</p>\n<p>假设day的值为2018年11月2日，那么渲染结果为：&lt;p&gt;Today is: 2018年11月2日.&lt;/p&gt;。<br />注意 : 渲染后,模板中span值2 November 2016将被覆盖，从中也可以看出，前台可以先放好静态的数据，当后台没有数据传过来的时候可以显示静态的数据进行显示，做好前后端分离。<br /><br /><strong>2.选择或星号表达式</strong></p>\n<p>可以简单理解为内层是对外层对象的引用&nbsp; 如：</p>\n<p>&lt;div th:object=\"${session.user}\"&gt;<br />&nbsp; &nbsp; &lt;p&gt;Name: &lt;span th:text=\"*{firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &nbsp; &lt;p&gt;Surname: &lt;span th:text=\"*{lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &nbsp; &lt;p&gt;Nationality: &lt;span th:text=\"*{nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;<br />&lt;/div&gt;</p>\n<p>等同于以下方式:</p>\n<p>&lt;div&gt;<br />&nbsp; &lt;p&gt;Name: &lt;span th:text=\"${session.user.firstName}\"&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &lt;p&gt;Surname: &lt;span th:text=\"${session.user.lastName}\"&gt;Pepper&lt;/span&gt;.&lt;/p&gt;<br />&nbsp; &lt;p&gt;Nationality: &lt;span th:text=\"${session.user.nationality}\"&gt;Saturn&lt;/span&gt;.&lt;/p&gt;<br />&lt;/div&gt;</p>\n<p>如果没有与th:object结合使用，*{}与${}效果一样，因为其范围自动扩展到context。<br /><br /></p>\n<p><br /><strong>3.文字国际化表达式</strong></p>\n<p>文字国际化表达式允许我们从一个外部文件获取区域文字信息(.properties)&nbsp;<br />使用Key-Value方式，还可以提供一组参数(可选).</p>\n<p><strong>#{main.title}<br />#{message.entrycreated(${entryId})}</strong></p>\n<p>模板引用:</p>\n<p><strong>&lt;table&gt;<br />&nbsp; &nbsp; &lt;th th:text=\"#{header.address.city}\"&gt;...&lt;/th&gt;<br />&nbsp; &nbsp; &lt;th th:text=\"#{header.address.country}\"&gt;...&lt;/th&gt;<br />&lt;/table&gt;<br />4.URL表达式</strong></p>\n<p>URL表达式指的是把一个有用的上下文或会话信息添加到URL，这个过程经常被叫做URL重写。&nbsp;<br />Thymeleaf对于URL的处理是通过语法@{&hellip;}来处理的</p>\n<p>&lt;!&mdash; 绝对路径 &mdash;&gt;<br />&lt;!-- Will produce 'http://localhost:8080/gtvg/order/details?orderId=3' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{http://localhost:8080/gtvg/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>&lt;!&mdash; 相对路径 带参数&mdash;&gt;<br />&lt;!-- Will produce '/gtvg/order/details?orderId=3' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{/order/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>&lt;!-- Will produce '/gtvg/order/3/details' (plus rewriting) --&gt;<br />&lt;a href=\"details.html\" th:href=\"@{/order/{orderId}/details(orderId=${o.id})}\"&gt;view&lt;/a&gt;</p>\n<p>Thymeleaf支持相对路径和绝对路径<br />(orderId=${o.id})表示将括号内的内容作为URL参数处理<br />@{...}表达式中可以通过{orderId}访问Context中的orderId变量<br />@{/order}是Context相关的相对路径，在渲染时会自动添加上当前Web应用的Context名字，假设context名字为app，那么结果应该是/app/order<br /><br /></p>\n<h2 id=\"二thymeleaf-字面值\">二.thymeleaf-字面值</h2>\n<p>　&nbsp; &nbsp;1.文本文字：&rsquo;one text&rsquo;, &lsquo;Another one!&rsquo;,&hellip;&nbsp;<br />　　2.文字数量：0, 34, 3.0, 12.3,&hellip;&nbsp;<br />　　3.布尔型常量：true, false&nbsp;<br />　　4.空的文字：null&nbsp;<br />　　5.文字标记：one, sometext, main,&hellip;&nbsp;</p>\n<h2 id=\"三thymeleaf-文本处理\">三：thymeleaf-文本处理</h2>\n<p>1.字符串拼接：+</p>\n<p>&lt;span th:text=\"'Welcome to our application, ' + ${user.name} + '!'\"&gt;</p>\n<p>2.文字替换：|The name is ${name}|</p>\n<p>&lt;span th:text=\"|Welcome to our application, ${user.name}!|\"&gt;</p>\n<p>相比以上两种方式都可以实现字符串合并,但是,|&hellip;|中只能包含变量表达式${&hellip;}，不能包含其他常量、条件表达式等。</p>\n<p>&nbsp;</p>","blogGoods":0,"blogId":"1247421732856291328","blogRead":3,"blogTitle":"SpringBoot-thymeleaf模板语法","blogType":7,"createdTime":"2020-02-17 07:11:31","version":4},"commentBlog":"1247421732856291328","commentContent":"ssadsaas","commentFlag":false,"commentGood":0,"commentUser":3,"createdTime":"2020-04-12 00:20:05","id":"1249009332071260160","user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","sex":1,"updateTime":"2020-04-11 15:20:14","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian","version":8}}],"msg":"操作成功!"}
2020-04-12 00:24:57.325 INFO  [http-nio-1000-exec-4]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:3, serverValue:87}] to 139.9.130.249:27017 because there was a socket exception raised by this connection.
2020-04-12 00:25:22.657 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/good
2020-04-12 00:25:22.657 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:25:22.657 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:25:22.657 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.good
2020-04-12 00:25:22.658 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[BlogGoods(id=null, userId=null, blogId=1247421732856291328)]
2020-04-12 00:25:23.222 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 565
2020-04-12 00:25:23.222 INFO  [http-nio-1000-exec-2]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"点赞成功！"}
2020-04-12 00:25:24.051 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getGood/1247421732856291328
2020-04-12 00:25:24.052 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:25:24.052 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:25:24.053 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getGood
2020-04-12 00:25:24.054 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:25:24.102 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 51
2020-04-12 00:25:24.102 INFO  [http-nio-1000-exec-1]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":1,"msg":"操作成功!"}
2020-04-12 00:25:26.015 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/collection
2020-04-12 00:25:26.015 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:25:26.016 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:25:26.016 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.collection
2020-04-12 00:25:26.016 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[BlogCollection(collectionId=null, blogId=1247421732856291328, blog=null, userId=null, user=null, collectionTime=null)]
2020-04-12 00:25:27.160 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 1145
2020-04-12 00:25:27.160 INFO  [http-nio-1000-exec-6]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"msg":"收藏成功！"}
2020-04-12 00:25:27.700 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollection/1247421732856291328
2020-04-12 00:25:27.700 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : GET
2020-04-12 00:25:27.701 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:25:27.701 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollection
2020-04-12 00:25:27.701 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[1247421732856291328]
2020-04-12 00:25:27.978 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 278
2020-04-12 00:25:27.978 INFO  [http-nio-1000-exec-7]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":1,"msg":"操作成功!"}
2020-04-12 00:25:33.012 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:120 -请求地址 : /blog/getCollectionList
2020-04-12 00:25:33.013 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:121 -请求方式 : POST
2020-04-12 00:25:33.014 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:124 -IP : 127.0.0.1
2020-04-12 00:25:33.015 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:126 -方法 : com.lza.blog.controller.BlogController.getCollectionList
2020-04-12 00:25:33.016 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.printRequestLog:128 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2020-04-12 00:25:33.076 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAround:74 -耗时 : 64
2020-04-12 00:25:33.081 INFO  [http-nio-1000-exec-8]com.lza.blog.aspect.RequestAspect.doAfterReturning:89 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blog":{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247423893702991872","blogRead":26,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":27},"blogId":"1247423893702991872","collectionId":"1248990313935040512","user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","password":"","sex":1,"updateTime":"2020-04-08 02:39:02","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},"userId":3},{"blog":{"blogCollection":2,"blogComment":0,"blogGoods":2,"blogId":"1247423893702991872","blogRead":29,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","version":31},"blogId":"1247423893702991872","collectionId":"1248993113691680768","user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","password":"","sex":1,"updateTime":"2020-04-08 02:39:02","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},"userId":3},{"blog":{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":12,"blogTitle":"java下载字符串","blogType":6,"createdTime":"2020-03-27 03:27:38","version":18},"blogId":"1247365394201612288","collectionId":"1248994053924614144","user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","password":"","sex":1,"updateTime":"2020-04-08 02:39:02","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian111"},"userId":3},{"blog":{"blogCollection":1,"blogComment":0,"blogGoods":1,"blogId":"1247421732856291328","blogRead":4,"blogTitle":"SpringBoot-thymeleaf模板语法","blogType":7,"createdTime":"2020-02-17 07:11:31","version":5},"blogId":"1247421732856291328","collectionId":"1249010683530534912","user":{"createdTime":"2020-04-06 14:11:18","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqWOAIDsBAAB28yzuliM075.jpg","name":"liuzian1","nickname":"昵称刘子安","password":"","sex":1,"updateTime":"2020-04-11 15:20:14","userEmail":"2282816304@qq.com","userId":3,"username":"liuzian"},"userId":3}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功!"}
