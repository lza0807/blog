2020-04-10 00:10:31.687 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 00:11:02.428 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id,blog_title,created_time, date_format(created_time,'%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-04-10 00:11:02.428 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by (blog_goods+blog_read) desc limit 3 
2020-04-10 00:11:02.428 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-10 00:11:02.446 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-10 00:11:02.446 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-04-10 00:11:02.446 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-04-10 00:11:02.521 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-10 00:11:02.524 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 3
2020-04-10 00:11:02.524 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 5
2020-04-10 00:11:02.594 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enable = 1 
2020-04-10 00:11:02.594 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-04-10 00:11:02.596 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-04-10 00:11:02.597 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==> Parameters: 
2020-04-10 00:11:02.634 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:11:02.635 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:11:02.637 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:11:02.637 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 184(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 00:11:02.637 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 185(Long), {"code":20000,"data":[{"list":[{"blogId":"1247423893702991872","blogMonth":"2020-04","blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06"},{"blogId":"1247423253719310336","blogMonth":"2020-04","blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33"}],"month":"2020-04"},{"list":[{"blogId":"1247365394201612288","blogMonth":"2020-03","blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38"}],"month":"2020-03"},{"list":[{"blogId":"1247421732856291328","blogMonth":"2020-02","blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31"}],"month":"2020-02"},{"list":[{"blogId":"1247366723137474560","blogMonth":"2019-09","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55"}],"month":"2019-09"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 00:11:02.638 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 185(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":8,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":5,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 00:11:02.641 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -<==      Total: 2
2020-04-10 00:11:02.642 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 3
2020-04-10 00:11:02.697 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:11:02.698 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 97(Long), {"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 00:11:02.699 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:11:02.699 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 101(Long), {"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 00:11:02.735 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:11:02.739 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:11:02.739 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:11:02.790 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:11:02.795 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:13:07.297 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 00:14:20.065 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 00:53:31.519 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 00:54:38.511 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 00:54:38.528 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: 939674212@qq.com(String)
2020-04-10 00:54:38.592 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 0
2020-04-10 00:54:38.643 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:54:38.645 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=939674212@qq.com, password=c81e728d9d4c2f636f067f89cc14862c, name=null, sex=1, header=null, nickname=a, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.lza.blog.exception.BlogException: 用户名已存在
	at com.lza.blog.service.impl.UserServiceImpl.register(UserServiceImpl.java:82)
	at com.lza.blog.controller.UserController.register(UserController.java:110)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$669225a0.register(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-04-10 00:54:38.742 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:54:57.153 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 00:54:57.153 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: 93961174212@qq.com(String)
2020-04-10 00:54:57.201 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 0
2020-04-10 00:54:57.251 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:54:57.251 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=93961174212@qq.com, password=c81e728d9d4c2f636f067f89cc14862c, name=null, sex=1, header=null, nickname=a, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), com.lza.blog.exception.BlogException: 用户名已存在
	at com.lza.blog.service.impl.UserServiceImpl.register(UserServiceImpl.java:82)
	at com.lza.blog.controller.UserController.register(UserController.java:110)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$669225a0.register(<generated>)
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-04-10 00:54:57.350 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:55:21.595 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 00:55:41.351 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 00:55:41.367 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: user(String)
2020-04-10 00:55:41.425 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 0
2020-04-10 00:55:41.472 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?,?,?,?,?,?,? ) 
2020-04-10 00:55:41.473 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.save.debug:159 -==> Parameters: user(String), ee11cbb19052e40b07aac0ca060c23ee(String), null, 2(Integer), null, user(String), 2@qq.com(String)
2020-04-10 00:55:41.693 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:55:41.695 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=user, password=ee11cbb19052e40b07aac0ca060c23ee, name=null, sex=2, header=null, nickname=user, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.lza.blog.mapper.UserMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.lza.blog.service.impl.UserServiceImpl.register(UserServiceImpl.java:84)
	at com.lza.blog.controller.UserController.register(UserController.java:110)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$f3a98c67.register(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-04-10 00:55:41.785 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:55:52.678 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 00:55:52.678 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: user(String)
2020-04-10 00:55:52.720 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 0
2020-04-10 00:55:52.778 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?,?,?,?,?,?,? ) 
2020-04-10 00:55:52.779 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.UserMapper.save.debug:159 -==> Parameters: user(String), ee11cbb19052e40b07aac0ca060c23ee(String), null, 2(Integer), null, user(String), 2@qq.com(String)
2020-04-10 00:55:52.924 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:55:52.925 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=user, password=ee11cbb19052e40b07aac0ca060c23ee, name=null, sex=2, header=null, nickname=user, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.lza.blog.mapper.UserMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.lza.blog.service.impl.UserServiceImpl.register(UserServiceImpl.java:84)
	at com.lza.blog.controller.UserController.register(UserController.java:110)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$f3a98c67.register(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-04-10 00:55:53.013 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:56:46.227 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 00:56:46.228 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: user(String)
2020-04-10 00:56:46.271 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 0
2020-04-10 00:56:46.569 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?,?,?,?,?,?,? ) 
2020-04-10 00:56:46.569 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.save.debug:159 -==> Parameters: user(String), ee11cbb19052e40b07aac0ca060c23ee(String), null, 2(Integer), null, user(String), 2@qq.com(String)
2020-04-10 00:56:46.700 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:56:46.701 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=user, password=ee11cbb19052e40b07aac0ca060c23ee, name=null, sex=2, header=null, nickname=user, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.lza.blog.mapper.UserMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.lza.blog.service.impl.UserServiceImpl.register(UserServiceImpl.java:84)
	at com.lza.blog.controller.UserController.register(UserController.java:110)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$f3a98c67.register(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-04-10 00:56:46.797 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:57:30.024 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 00:57:30.025 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: user(String)
2020-04-10 00:57:30.066 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 0
2020-04-10 00:57:30.110 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?,?,?,?,?,?,? ) 
2020-04-10 00:57:30.111 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.save.debug:159 -==> Parameters: user(String), ee11cbb19052e40b07aac0ca060c23ee(String), null, 2(Integer), null, user(String), 2@qq.com(String)
2020-04-10 00:57:30.243 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 00:57:30.244 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=user, password=ee11cbb19052e40b07aac0ca060c23ee, name=null, sex=2, header=null, nickname=user, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.lza.blog.mapper.UserMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.lza.blog.service.impl.UserServiceImpl.register(UserServiceImpl.java:84)
	at com.lza.blog.controller.UserController.register(UserController.java:110)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$f3a98c67.register(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-04-10 00:57:30.335 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 00:58:47.116 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 01:00:43.221 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 01:00:43.450 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: user(String)
2020-04-10 01:00:43.652 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 0
2020-04-10 01:00:49.167 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?,?,?,?,?,?,? ) 
2020-04-10 01:00:49.169 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.UserMapper.save.debug:159 -==> Parameters: user(String), ee11cbb19052e40b07aac0ca060c23ee(String), null, 2(Integer), null, user(String), 2@qq.com(String)
2020-04-10 01:00:49.388 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 01:00:49.389 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=user, password=ee11cbb19052e40b07aac0ca060c23ee, name=null, sex=2, header=null, nickname=user, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.lza.blog.mapper.UserMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.lza.blog.service.impl.UserServiceImpl.register(UserServiceImpl.java:84)
	at com.lza.blog.controller.UserController.register(UserController.java:110)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$b6804ad9.register(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-04-10 01:00:49.482 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 10:02:40.889 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 10:23:06.575 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 10:24:26.141 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 10:25:34.910 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-10 10:25:35.132 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-10 10:25:35.741 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-10 10:25:40.957 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 10:25:40.960 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 62118(Long), {"code":20000,"data":{"token":"376F5D064625F491F9F39809C0AA8582"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 10:25:41.135 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 10:27:15.467 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-10 10:27:15.469 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-10 10:27:15.525 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-10 10:27:28.072 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 10:27:28.073 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 20298(Long), {"code":20000,"data":{"token":"376F5D064625F491F9F39809C0AA8582"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 10:27:28.180 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 10:28:21.316 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-10 10:28:21.318 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-10 10:28:21.378 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-10 10:28:24.708 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 10:28:24.709 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 38395(Long), {"code":20000,"data":{"token":"376F5D064625F491F9F39809C0AA8582"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 10:28:24.823 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 10:32:22.919 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 10:32:22.920 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10000, active 0, maxActive 20, creating 1
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10000, active 0, maxActive 20, creating 1
	at com.lza.blog.service.impl.LogServiceImpl.logSave(LogServiceImpl.java:40)
	at com.lza.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:92)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$3102605d.login(<generated>)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10000, active 0, maxActive 20, creating 1
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10000, active 0, maxActive 20, creating 1
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10000, active 0, maxActive 20, creating 1
Caused by: com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 10000, active 0, maxActive 20, creating 1
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure
Caused by: java.net.ConnectException: Connection timed out: connect
(String), POST(String), 0(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 10:32:23.070 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 10:32:54.582 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-10 10:32:54.584 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-10 10:32:54.636 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-10 10:34:30.519 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 10:34:30.520 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 99679(Long), {"code":20000,"data":{"token":"376F5D064625F491F9F39809C0AA8582"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 10:34:30.679 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 10:43:28.610 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 11:00:30.434 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-10 11:00:30.657 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-10 11:00:30.900 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-10 11:01:50.606 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 11:01:50.608 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 203168(Long), {"code":20000,"data":{"token":"C686AB12A56E928835F5450E9302B761"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 11:01:50.716 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 11:02:01.478 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-10 11:02:01.479 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-10 11:02:01.533 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-10 11:02:01.589 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 11:02:01.590 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 4284(Long), {"code":20000,"data":{"token":"C686AB12A56E928835F5450E9302B761"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 11:02:01.699 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 11:02:07.174 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-10 11:02:07.175 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-10 11:02:07.235 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-10 11:03:04.729 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 11:03:04.730 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 60063(Long), {"code":20000,"data":{"token":"C686AB12A56E928835F5450E9302B761"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 11:03:04.839 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 11:04:15.579 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 11:05:08.850 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-10 11:05:09.074 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-10 11:05:09.311 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-10 11:05:20.347 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 11:05:20.350 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 17006(Long), {"code":20000,"data":{"token":"BC778D5EE3152E7ECDD3A00FACC86BA3"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 11:05:20.464 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 11:05:46.169 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 11:06:01.355 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 11:07:04.240 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-10 11:07:04.264 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-10 11:07:04.338 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-10 11:07:04.464 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 11:07:04.467 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 23013(Long), {"code":20000,"data":{"token":"A3156E00CE10BE2686C48162CB63112A"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 11:07:04.572 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 11:12:39.762 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-10 11:12:39.762 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-10 11:12:39.815 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-10 11:12:39.871 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 11:12:39.872 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 44832(Long), {"code":20000,"data":{"token":"A3156E00CE10BE2686C48162CB63112A"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 11:12:39.983 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:24:02.010 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 13:25:13.904 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:25:13.924 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: admin(String)
2020-04-10 13:25:13.993 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 0
2020-04-10 13:25:14.166 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:25:14.172 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 7628(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 13:25:14.274 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:25:32.978 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:25:32.978 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: admin(String)
2020-04-10 13:25:33.033 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 1
2020-04-10 13:25:33.115 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:25:33.117 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 126(Long), {"code":20000,"data":{"user":{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","password":"","sex":1,"updateTime":"2020-04-10 05:25:29","userEmail":"2@qq.com","userId":4,"username":"admin"},"token":"C21521C07F3ECED3C7E4FAAE86E3EB26"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-10 13:25:33.223 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:31:23.831 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:31:23.832 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: liu(String)
2020-04-10 13:31:23.882 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 0
2020-04-10 13:31:23.934 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?,?,?,?,?,?,? ) 
2020-04-10 13:31:23.935 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.save.debug:159 -==> Parameters: liu(String), 9d4d6204ee943564637f06093236b181(String), null, 1(Integer), null, liuzian(String), 2@qq.com(String)
2020-04-10 13:31:24.193 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:31:24.194 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=liu, password=9d4d6204ee943564637f06093236b181, name=null, sex=1, header=null, nickname=liuzian, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
### The error may involve com.lza.blog.mapper.UserMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
; Column 'name' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
	at com.lza.blog.service.impl.UserServiceImpl.register(UserServiceImpl.java:84)
	at com.lza.blog.controller.UserController.register(UserController.java:118)
	at com.lza.blog.controller.UserController$$FastClassBySpringCGLIB$$389fb775.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.UserController$$EnhancerBySpringCGLIB$$356250f9.register(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'name' cannot be null
(String), POST(String), 0(Long), null, 127.0.0.1(String)
2020-04-10 13:31:24.296 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:37:00.753 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-10 13:37:36.586 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by (blog_goods+blog_read) desc limit 3 
2020-04-10 13:37:36.586 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-10 13:37:36.607 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-04-10 13:37:36.607 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-10 13:37:36.642 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by created_time desc limit ?,? 
2020-04-10 13:37:36.643 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-10 13:37:36.679 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-10 13:37:36.682 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 3
2020-04-10 13:37:36.702 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-10 13:37:36.733 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enable = 1 
2020-04-10 13:37:36.734 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-04-10 13:37:36.740 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-04-10 13:37:36.741 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==> Parameters: 
2020-04-10 13:37:36.761 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-10 13:37:36.762 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-10 13:37:36.784 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 3
2020-04-10 13:37:36.796 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -<==      Total: 2
2020-04-10 13:37:36.817 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-10 13:37:36.833 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:37:36.835 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 185(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":8,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":5,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:37:36.836 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:37:36.837 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 183(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:37:36.839 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:37:36.840 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:37:36.857 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:37:36.858 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 119(Long), {"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:37:36.879 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:37:36.880 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 254(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":8,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-09 13:48:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-09 13:47:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":5,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-09 15:08:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":1,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-09 15:08:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":3,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-09 15:08:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:37:36.944 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:37:36.944 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:37:36.945 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:37:36.968 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:37:37.005 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:38:47.539 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:38:47.540 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: admin111(String)
2020-04-10 13:38:47.596 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 0
2020-04-10 13:38:47.652 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.save.debug:159 -==>  Preparing: insert into bl_user( username, password, name, sex, header, nickname, user_email ) values ( ?,?,?,?,?,?,? ) 
2020-04-10 13:38:47.653 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.save.debug:159 -==> Parameters: admin111(String), 202cb962ac59075b964b07152d234b70(String), null, 2(Integer), null, liuzian(String), 2@qq.com(String)
2020-04-10 13:38:47.764 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.UserMapper.save.debug:159 -<==    Updates: 1
2020-04-10 13:38:47.821 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:38:47.823 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/register(String), [User(userId=null, username=admin111, password=202cb962ac59075b964b07152d234b70, name=null, sex=2, header=null, nickname=liuzian, userEmail=2@qq.com, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 288(Long), {"code":20000,"msg":"注册成功！"}(String), 127.0.0.1(String)
2020-04-10 13:38:47.944 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:41:19.230 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:41:19.231 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: admin(String)
2020-04-10 13:41:19.286 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 1
2020-04-10 13:41:19.347 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:41:19.348 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 121(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-04-10 13:41:19.457 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:41:30.637 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:41:30.637 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: admin(String)
2020-04-10 13:41:30.691 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 1
2020-04-10 13:41:30.750 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:41:30.751 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 115(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-04-10 13:41:30.863 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:41:59.790 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:41:59.791 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: admin(String)
2020-04-10 13:41:59.845 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 1
2020-04-10 13:41:59.910 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:41:59.911 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 118(Long), {"code":20000,"data":{"user":{"createdTime":"2020-04-07 16:27:16","header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqeKAaEzkAAE7-wMNsHI597.png","name":"test11","nickname":"测试","password":"","sex":1,"updateTime":"2020-04-10 05:25:29","userEmail":"2@qq.com","userId":4,"username":"admin"},"token":"C78A6B861DDAB990B80D1BB013C9C516"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:00.020 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:00.226 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by created_time desc limit ?,? 
2020-04-10 13:42:00.227 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-10 13:42:00.285 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-10 13:42:00.515 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by (blog_goods+blog_read) desc limit 3 
2020-04-10 13:42:00.516 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-04-10 13:42:00.520 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-10 13:42:00.520 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-10 13:42:00.522 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-04-10 13:42:00.522 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==> Parameters: 
2020-04-10 13:42:00.789 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enable = 1 
2020-04-10 13:42:00.790 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-04-10 13:42:00.838 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 3
2020-04-10 13:42:00.861 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -<==      Total: 2
2020-04-10 13:42:00.864 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-10 13:42:01.134 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-10 13:42:01.135 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-10 13:42:01.159 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 3
2020-04-10 13:42:01.189 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-10 13:42:01.215 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:01.215 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 695(Long), {"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:01.248 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:01.249 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 1021(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":8,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-09 13:48:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-09 13:47:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":5,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-09 15:08:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":1,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-09 15:08:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":3,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-09 15:08:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:01.328 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:01.358 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:01.437 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:01.438 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 375(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":8,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":5,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:01.480 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:01.481 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 395(Long), {"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:01.484 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:01.485 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 403(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:01.533 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:01.580 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:01.593 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:35.529 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.read.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2020-04-10 13:42:35.529 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.read.debug:159 -==> Parameters: 
2020-04-10 13:42:35.583 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.read.debug:159 -<==      Total: 1
2020-04-10 13:42:35.640 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.update.debug:159 -==>  Preparing: update bl_about set version = version + 1 ,about_title = ? ,about_content = ? ,about_read = ? where about_id = ? and version = ? 
2020-04-10 13:42:35.641 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.update.debug:159 -==> Parameters: 测试2(String), <p><strong>测试内容2</strong></p>(String), 24(Integer), 2(Integer), 26(Integer)
2020-04-10 13:42:35.749 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.AboutMapper.update.debug:159 -<==    Updates: 1
2020-04-10 13:42:35.807 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:35.808 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /about/read(String), [](String), 1(Integer), null, GET(String), 299(Long), {"code":20000,"data":{"aboutContent":"<p><strong>测试内容2</strong></p>","aboutId":2,"aboutRead":24,"aboutTitle":"测试2","createdTime":"2020-04-01 14:57:12","updateTime":"2020-04-09 14:51:19","version":26},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:35.916 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:45.849 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id,blog_title,created_time, date_format(created_time,'%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-04-10 13:42:45.849 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-04-10 13:42:45.905 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 5
2020-04-10 13:42:45.964 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:45.966 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"list":[{"blogId":"1247423893702991872","blogMonth":"2020-04","blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06"},{"blogId":"1247423253719310336","blogMonth":"2020-04","blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33"}],"month":"2020-04"},{"list":[{"blogId":"1247365394201612288","blogMonth":"2020-03","blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38"}],"month":"2020-03"},{"list":[{"blogId":"1247421732856291328","blogMonth":"2020-02","blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31"}],"month":"2020-02"},{"list":[{"blogId":"1247366723137474560","blogMonth":"2019-09","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55"}],"month":"2019-09"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:46.078 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:53.622 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-10 13:42:53.623 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-10 13:42:53.626 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by (blog_goods+blog_read) desc limit 3 
2020-04-10 13:42:53.627 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-04-10 13:42:53.674 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-10 13:42:53.681 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 3
2020-04-10 13:42:53.725 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:53.726 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:53.737 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:53.737 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 113(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":8,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":5,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:53.826 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:53.845 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:53.904 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enable = 1 
2020-04-10 13:42:53.904 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-04-10 13:42:53.922 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-04-10 13:42:53.923 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==> Parameters: 
2020-04-10 13:42:53.973 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -<==      Total: 2
2020-04-10 13:42:54.011 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 3
2020-04-10 13:42:54.024 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:54.024 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 103(Long), {"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:54.065 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:42:54.066 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 163(Long), {"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:42:54.123 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:42:54.175 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:48:24.375 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:48:24.375 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: admin(String)
2020-04-10 13:48:24.429 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 1
2020-04-10 13:48:24.485 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:48:24.485 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=8ad3fac6c6b3528499d347d924443abb, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 112(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-04-10 13:48:24.594 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:49:13.672 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:49:13.673 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: admin(String)
2020-04-10 13:49:13.727 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 1
2020-04-10 13:49:13.784 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:49:13.784 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=8ad3fac6c6b3528499d347d924443abb, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 112(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-04-10 13:49:13.892 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:49:14.130 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:49:14.130 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: admin(String)
2020-04-10 13:49:14.183 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 1
2020-04-10 13:49:14.240 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:49:14.240 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=8ad3fac6c6b3528499d347d924443abb, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 112(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-04-10 13:49:14.348 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:49:15.014 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==>  Preparing: select user_id, username,password, name, sex, header,deleted, nickname, user_email, created_time, update_time from bl_user where username = ? 
2020-04-10 13:49:15.014 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -==> Parameters: admin(String)
2020-04-10 13:49:15.067 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.UserMapper.isNotExist.debug:159 -<==      Total: 1
2020-04-10 13:49:15.123 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:49:15.124 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=admin, password=8ad3fac6c6b3528499d347d924443abb, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 162(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2020-04-10 13:49:15.232 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:52:59.777 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by created_time desc limit ?,? 
2020-04-10 13:52:59.777 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-10 13:52:59.778 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-10 13:52:59.779 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-10 13:52:59.782 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by (blog_goods+blog_read) desc limit 3 
2020-04-10 13:52:59.782 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-04-10 13:52:59.825 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-10 13:52:59.828 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-10 13:52:59.836 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 3
2020-04-10 13:52:59.873 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-10 13:52:59.873 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-10 13:52:59.880 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:52:59.880 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 103(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:52:59.891 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:52:59.891 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":8,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":5,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:52:59.920 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-10 13:52:59.968 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:52:59.969 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 194(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":8,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-09 13:48:41"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-09 13:47:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":5,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-09 15:08:17"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":1,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-09 15:08:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":3,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-09 15:08:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:52:59.979 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:52:59.999 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:53:00.062 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:53:00.064 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-04-10 13:53:00.064 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==> Parameters: 
2020-04-10 13:53:00.069 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enable = 1 
2020-04-10 13:53:00.069 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-04-10 13:53:00.115 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -<==      Total: 2
2020-04-10 13:53:00.122 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 3
2020-04-10 13:53:00.166 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:53:00.166 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 102(Long), {"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:53:00.178 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:53:00.179 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 110(Long), {"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:53:00.265 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:53:00.287 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:56:07.379 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id,blog_title,created_time, date_format(created_time,'%Y-%m') as blog_month from bl_blog order by created_time desc 
2020-04-10 13:56:07.379 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2020-04-10 13:56:07.433 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 5
2020-04-10 13:56:07.489 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:56:07.490 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 112(Long), {"code":20000,"data":[{"list":[{"blogId":"1247423893702991872","blogMonth":"2020-04","blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06"},{"blogId":"1247423253719310336","blogMonth":"2020-04","blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33"}],"month":"2020-04"},{"list":[{"blogId":"1247365394201612288","blogMonth":"2020-03","blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38"}],"month":"2020-03"},{"list":[{"blogId":"1247421732856291328","blogMonth":"2020-02","blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31"}],"month":"2020-02"},{"list":[{"blogId":"1247366723137474560","blogMonth":"2019-09","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55"}],"month":"2019-09"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:56:07.598 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:56:09.402 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==>  Preparing: select blog_id, blog_image,blog_title, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time,version from bl_blog where deleted = 0 and blog_id = ? 
2020-04-10 13:56:09.403 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==> Parameters: 1247365394201612288(String)
2020-04-10 13:56:09.457 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -<==      Total: 1
2020-04-10 13:56:09.459 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-04-10 13:56:09.459 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==> Parameters: java下载字符串(String), http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg(String), <pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>(String), 0(Integer), 6(Integer), 6(Integer), 0(Integer), 1247365394201612288(String), 11(Integer)
2020-04-10 13:56:09.565 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -<==    Updates: 1
2020-04-10 13:56:09.572 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==>  Preparing: select * from bl_type where type_id = ? and deleted = 0 
2020-04-10 13:56:09.573 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==> Parameters: 6(Integer)
2020-04-10 13:56:09.627 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -<==      Total: 1
2020-04-10 13:56:09.843 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:56:09.843 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/read/1247365394201612288(String), [1247365394201612288](String), 1(Integer), null, GET(String), 500(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<pre class=\"language-java\"><code> \nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.*;\nimport java.net.URLEncoder;\n \n/**\n * 下载工具类\n * @author czs\n * @date 2020-2-22 11:02:54\n */\npublic class DownloadUtils {\n \n    /**\n     * 根据字符串下载内容\n     *\n     * @param request  request\n     * @param response response\n     * @param fileName 下载的文件名\n     * @param content  字符串内容\n     * @throws IOException\n     */\n    public static void downloadByStringContent(HttpServletRequest request,\n                                               HttpServletResponse response,\n                                               String fileName, String content)\n            throws IOException {\n        //设置向浏览器端传送的文件格式\n        response.setContentType(\"application/octet-stream;charset=utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        if (request.getHeader(\"User-Agent\").toLowerCase().indexOf(\"firefox\") &gt; 0) {\n            // firefox浏览器\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"MSIE\") &gt; 0) {\n\t\t\t// IE浏览器\n            fileName = URLEncoder.encode(fileName, \"UTF-8\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"CHROME\") &gt; 0) {\n            // 谷歌\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        }\n        response.setHeader(\"Content-disposition\", \"attachment; filename=\" + fileName);\n        BufferedInputStream inp = null;\n        OutputStream out = response.getOutputStream();\n        try {\n            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes(\"utf-8\")));\n            int len = 0;\n            byte[] buf = new byte[1024];\n            while ((len = inp.read(buf)) &gt; 0) {\n                out.write(buf, 0, len);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (inp != null) {\n                inp.close();\n            }\n            if (out != null) {\n                out.close();\n            }\n        }\n    }\n \n}</code></pre>\n<pre class=\"language-java\"><code>@ResponseBody\n@RequestMapping(method = RequestMethod.GET, value = \"/exportKtrAndKjb\")\npublic void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {\n    String xml = xxxService.getXmlByXXX(path);\n    String fileName = xxxService.getFileNameByXml(xml);\n    DownloadUtils.downloadByStringContent(request, response, fileName, xml);\n}</code></pre>","blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":6,"blogTitle":"java下载字符串","blogType":6,"createdTime":"2020-03-27 03:27:38","typeName":"java","version":11},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:56:09.951 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:56:48.760 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==>  Preparing: select blog_id, blog_image,blog_title, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time,version from bl_blog where deleted = 0 and blog_id = ? 
2020-04-10 13:56:48.761 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==> Parameters: 1247423893702991872(String)
2020-04-10 13:56:48.816 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -<==      Total: 1
2020-04-10 13:56:48.817 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-04-10 13:56:48.817 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==> Parameters: 到底要不要重复造轮子?(String), <p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>
<p>那这句有道理吗？</p>
<p>我个人觉得：</p>
<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>
<p>任何事情都有两面性</p>
<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>
<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>
<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>
<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>
<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>
<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>
<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>
<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>
<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>
<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>(String), 0(Integer), 9(Integer), 6(Integer), 0(Integer), 1247423893702991872(String), 9(Integer)
2020-04-10 13:56:48.922 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -<==    Updates: 1
2020-04-10 13:56:48.923 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==>  Preparing: select * from bl_type where type_id = ? and deleted = 0 
2020-04-10 13:56:48.923 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==> Parameters: 6(Integer)
2020-04-10 13:56:48.976 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -<==      Total: 1
2020-04-10 13:56:49.192 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:56:49.192 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/read/1247423893702991872(String), [1247423893702991872](String), 1(Integer), null, GET(String), 484(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>到底要不要重复造轮子?<br />在软件开发领域有一句著名的话：不要重复造轮子</p>\n<p>那这句有道理吗？</p>\n<p>我个人觉得：</p>\n<p>这句话有道理，也没道理，这句话是有矛盾和冲突的！</p>\n<p>任何事情都有两面性</p>\n<p>我们必须要知道一件事情，在企业中工作的程序员，他们除了写代码之外，还有一件最重要的事情，就是帮老板赚钱，程序员怎么帮老板赚钱呢？那就是程序员靠写代码帮老板帮企业赚钱，对于老板和企业而言，老板并不关心程序员们具体怎么写代码，老板关心的是用最短的时间，最低的人工成本，实现利益最大化。(任何企业的第一使命都是赚钱，因为企业每天都要养活一大堆的员工)</p>\n<p>比如：老板要程序员们开发一款软件，然后程序员们就开始写代码，如果什么都要程序员自己从头开始写的话，那这个软件得开发到猴年马月，如果有现成的框架和工具拿来即用，那就可以大大的缩短开发时间，节省人工成本，企业就可以快速的实现利益最大化，这自然是老板喜欢的结果。</p>\n<p>所以说，如果你想缩短开发时间，节约人工成本，实现利益最大化，那就尽量的多多使用现成的轮子，不要重复造轮子</p>\n<p>但是我又特别建议大家多多造轮子，只有多造轮子，才能提高自己的编程能力，高手都是一点一点实践出来的</p>\n<p>对于初学者和学生来说，我建议多多造轮子，这样可以提高自己的动手能力，提高自己的编程能力，同时又可以锻炼自己的思考能力和分析问题和解决问题的能力，拓展自己的思维</p>\n<p>对于老手来说，尽量少造轮子，偶尔造造轮子也是OK的，无伤大雅，但是如果老手是出于研究学习的目的和心态的话，那就多多造轮子吧</p>\n<p>对于希望在最短的时间内实现利益最大化的话，那就少造轮子，直接用现成的轮子，因为这样可以快速的赚钱！</p>\n<p>所以综上所述，不要重复造轮子这句话本身是矛盾和冲突的，因为大家看问题的立场和角度不一样！</p>\n<p>对于企业和老板来说，企业和老板不希望程序员重复造轮子，因为这会耽误老板赚钱，挡了老板的财路</p>\n<p>对于程序员个人来说，我觉得在程序员编程水平还比较初级的时候，多多造轮子可以提高自己的动手能力和编程能力，对于编程水平中等的程序员，我建议也是多多造轮子，以此来提高自己的编程能力，对于高手程序员来说，他在成为高手之前的那些日子里就是天天在造轮子，因为他那时候如果不多多造轮子(如果他那时候不拼命反反复复写代码)，那他现在也不可能成为高手！所以，对于高手程序员来说，此时，可以不必重复造轮子了，如果他是出于精进、精益求精或者是出于研究和学习的目的，那他也可以适当的偶尔的造轮子，那也是OK的</p>","blogGoods":0,"blogId":"1247423893702991872","blogRead":9,"blogTitle":"到底要不要重复造轮子?","blogType":6,"createdTime":"2020-04-07 07:20:06","typeName":"java","version":9},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:56:49.300 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 13:57:03.755 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==>  Preparing: select blog_id, blog_image,blog_title, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time,version from bl_blog where deleted = 0 and blog_id = ? 
2020-04-10 13:57:03.755 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==> Parameters: 1247365394201612288(String)
2020-04-10 13:57:03.809 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -<==      Total: 1
2020-04-10 13:57:03.810 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-04-10 13:57:03.810 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==> Parameters: java下载字符串(String), http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg(String), <pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>(String), 0(Integer), 7(Integer), 6(Integer), 0(Integer), 1247365394201612288(String), 12(Integer)
2020-04-10 13:57:03.917 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -<==    Updates: 1
2020-04-10 13:57:03.917 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==>  Preparing: select * from bl_type where type_id = ? and deleted = 0 
2020-04-10 13:57:03.917 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==> Parameters: 6(Integer)
2020-04-10 13:57:03.969 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -<==      Total: 1
2020-04-10 13:57:04.186 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 13:57:04.187 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/read/1247365394201612288(String), [1247365394201612288](String), 1(Integer), null, GET(String), 501(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<pre class=\"language-java\"><code> \nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.*;\nimport java.net.URLEncoder;\n \n/**\n * 下载工具类\n * @author czs\n * @date 2020-2-22 11:02:54\n */\npublic class DownloadUtils {\n \n    /**\n     * 根据字符串下载内容\n     *\n     * @param request  request\n     * @param response response\n     * @param fileName 下载的文件名\n     * @param content  字符串内容\n     * @throws IOException\n     */\n    public static void downloadByStringContent(HttpServletRequest request,\n                                               HttpServletResponse response,\n                                               String fileName, String content)\n            throws IOException {\n        //设置向浏览器端传送的文件格式\n        response.setContentType(\"application/octet-stream;charset=utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        if (request.getHeader(\"User-Agent\").toLowerCase().indexOf(\"firefox\") &gt; 0) {\n            // firefox浏览器\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"MSIE\") &gt; 0) {\n\t\t\t// IE浏览器\n            fileName = URLEncoder.encode(fileName, \"UTF-8\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"CHROME\") &gt; 0) {\n            // 谷歌\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        }\n        response.setHeader(\"Content-disposition\", \"attachment; filename=\" + fileName);\n        BufferedInputStream inp = null;\n        OutputStream out = response.getOutputStream();\n        try {\n            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes(\"utf-8\")));\n            int len = 0;\n            byte[] buf = new byte[1024];\n            while ((len = inp.read(buf)) &gt; 0) {\n                out.write(buf, 0, len);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (inp != null) {\n                inp.close();\n            }\n            if (out != null) {\n                out.close();\n            }\n        }\n    }\n \n}</code></pre>\n<pre class=\"language-java\"><code>@ResponseBody\n@RequestMapping(method = RequestMethod.GET, value = \"/exportKtrAndKjb\")\npublic void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {\n    String xml = xxxService.getXmlByXXX(path);\n    String fileName = xxxService.getFileNameByXml(xml);\n    DownloadUtils.downloadByStringContent(request, response, fileName, xml);\n}</code></pre>","blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":7,"blogTitle":"java下载字符串","blogType":6,"createdTime":"2020-03-27 03:27:38","typeName":"java","version":12},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 13:57:04.296 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 14:01:10.429 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==>  Preparing: select blog_id, blog_image,blog_title, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time,version from bl_blog where deleted = 0 and blog_id = ? 
2020-04-10 14:01:10.429 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==> Parameters: 1247365394201612288(String)
2020-04-10 14:01:10.498 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -<==      Total: 1
2020-04-10 14:01:10.500 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_image = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-04-10 14:01:10.501 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==> Parameters: java下载字符串(String), http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg(String), <pre class="language-java"><code> 
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
 
/**
 * 下载工具类
 * @author czs
 * @date 2020-2-22 11:02:54
 */
public class DownloadUtils {
 
    /**
     * 根据字符串下载内容
     *
     * @param request  request
     * @param response response
     * @param fileName 下载的文件名
     * @param content  字符串内容
     * @throws IOException
     */
    public static void downloadByStringContent(HttpServletRequest request,
                                               HttpServletResponse response,
                                               String fileName, String content)
            throws IOException {
        //设置向浏览器端传送的文件格式
        response.setContentType("application/octet-stream;charset=utf-8");
        response.setCharacterEncoding("utf-8");
        if (request.getHeader("User-Agent").toLowerCase().indexOf("firefox") &gt; 0) {
            // firefox浏览器
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("MSIE") &gt; 0) {
			// IE浏览器
            fileName = URLEncoder.encode(fileName, "UTF-8");
        } else if (request.getHeader("User-Agent").toUpperCase().indexOf("CHROME") &gt; 0) {
            // 谷歌
            fileName = new String(fileName.getBytes("UTF-8"), "ISO8859-1");
        }
        response.setHeader("Content-disposition", "attachment; filename=" + fileName);
        BufferedInputStream inp = null;
        OutputStream out = response.getOutputStream();
        try {
            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes("utf-8")));
            int len = 0;
            byte[] buf = new byte[1024];
            while ((len = inp.read(buf)) &gt; 0) {
                out.write(buf, 0, len);
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (inp != null) {
                inp.close();
            }
            if (out != null) {
                out.close();
            }
        }
    }
 
}</code></pre>
<pre class="language-java"><code>@ResponseBody
@RequestMapping(method = RequestMethod.GET, value = "/exportKtrAndKjb")
public void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String xml = xxxService.getXmlByXXX(path);
    String fileName = xxxService.getFileNameByXml(xml);
    DownloadUtils.downloadByStringContent(request, response, fileName, xml);
}</code></pre>(String), 0(Integer), 8(Integer), 6(Integer), 0(Integer), 1247365394201612288(String), 13(Integer)
2020-04-10 14:01:10.628 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -<==    Updates: 1
2020-04-10 14:01:10.629 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==>  Preparing: select * from bl_type where type_id = ? and deleted = 0 
2020-04-10 14:01:10.630 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==> Parameters: 6(Integer)
2020-04-10 14:01:10.662 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin 
2020-04-10 14:01:10.663 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -==> Parameters: 
2020-04-10 14:01:10.666 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enable = 1 
2020-04-10 14:01:10.666 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2020-04-10 14:01:10.667 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by (blog_goods+blog_read) desc limit 3 
2020-04-10 14:01:10.668 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2020-04-10 14:01:10.669 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2020-04-10 14:01:10.669 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -==> Parameters: 
2020-04-10 14:01:10.686 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -<==      Total: 1
2020-04-10 14:01:10.718 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.AdminMapper.getAdminInfo.debug:159 -<==      Total: 1
2020-04-10 14:01:10.718 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 3
2020-04-10 14:01:10.742 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LinkMapper.getAllLinkInfo.debug:159 -<==      Total: 2
2020-04-10 14:01:10.775 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getList.debug:159 -<==      Total: 3
2020-04-10 14:01:10.776 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 14:01:10.777 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 125(Long), {"code":20000,"data":{"header":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MqEaAXJe9AAB28yzuliM858.jpg","id":1,"name":"刘子安","signature":"勤能补拙","username":"admin"},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 14:01:10.780 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 14:01:10.781 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 125(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":9,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":7,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 14:01:10.804 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 14:01:10.805 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 141(Long), {"code":20000,"data":[{"createdTime":"2020-03-30 06:40:24","linkId":1,"linkName":"百度","linkUrl":"https://www.baidu.com","updateTime":"2020-04-08 14:20:23"},{"createdTime":"2020-03-30 06:52:22","linkId":2,"linkName":"github","linkUrl":"https://github.com/lza0807/blog","updateTime":"2020-03-30 06:52:22"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 14:01:10.832 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 14:01:10.832 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/getList(String), [](String), 1(Integer), null, GET(String), 177(Long), {"code":20000,"data":[{"artist":"薛之谦","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwLSAXMSaAABUQgn8TDQ402.jpg","id":4,"lrc":"我们都迁就嘴巴\n\n我们都憋着真话\n\n我们都让爱先发芽\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我们会接受惩罚\n\n有一个变成哑巴\n\n越退让越不会表达\n\n所有的安静都是人造的冷清\n\n所有的杂音在安慰后平静\n\n我不需要证明\n\n我不需要声音\n\n我就像一个哑巴一样\n\n你翻译不了我的声响\n\n怕腻烦过量\n\n我举止要限量\n\n你可以当我哑巴一样\n\n你不会看见我的抵抗\n\n请别怕我受伤 我自己会圆场\n\n我就像一个哑巴一样\n\n反正我也不擅长抵抗","name":"哑巴","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6NwL2AQNqoAECd-iFlcLw799.mp3"},{"artist":"毛不易","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tCAXf86AAEnuTs7KeY474.jpg","id":5,"lrc":"[00:00.02]李晓东 - 消愁(Live)\n[00:01.64]作词：毛不易\n[00:03.05]作曲：毛不易\n[00:04.47]原唱：毛不易\n[00:05.63]编曲：吴牧禅、范郡哲\n[00:07.65]program：吴牧禅\n[00:08.66]制作人：吴牧禅\n[00:06.24]花腔女高音：王莉\n[00:12.10]大提琴：翟慧莉\n[00:52.14]当你走进这欢乐场\n[00:56.69]背上所有的梦与想\n[01:01.19]各色的脸上各色的妆\n[01:06.08]没人记得你的模样\n[01:10.92]三巡酒过你在角落\n[01:15.46]固执地唱着苦涩的歌\n[01:20.51]听他在喧嚣里被淹没\n[01:24.93]你拿起酒杯对自己说\n[01:30.07]一杯敬朝阳\n[01:32.19]一杯敬月光\n[01:35.14]唤醒我的向往\n[01:37.27]温柔了寒窗\n[01:39.24]于是可以不回头地\n[01:41.92]逆风飞翔\n[01:44.34]不怕心头有雨\n[01:46.62]眼底有霜\n[01:49.28]一杯敬故乡\n[01:51.41]一杯敬远方\n[01:53.98]守着我的善良\n[01:56.49]催着我成长\n[01:58.31]所以南北的路\n[02:00.18]从此不再漫长\n[02:03.71]灵魂不再无处安放\n[02:32.70]当你走进这欢乐场\n[02:37.25]背上所有的梦与想\n[02:42.04]各色的脸上各色的妆\n[02:46.79]没人记得你的模样\n[02:51.69]三巡酒过你在角落\n[02:56.44]固执地唱着苦涩的歌\n[03:01.24]听他在喧嚣里被淹没\n[03:05.73]你拿起酒杯对自己说\n[03:15.93]一杯敬朝阳\n[03:17.69]一杯敬月光\n[03:20.75]唤醒我的向往\n[03:22.82]温柔了寒窗\n[03:24.64]于是可以不回头地\n[03:27.42]逆风飞翔\n[03:30.14]不怕心头有雨\n[03:32.21]眼底有霜\n[03:35.19]一杯敬故乡\n[03:36.96]一杯敬远方\n[03:39.63]守着我的善良\n[03:42.00]催着我成长\n[03:43.92]所以南北的路\n[03:45.72]从此不再漫长\n[03:49.26]灵魂不再无处安放\n[03:56.79]一杯敬明天\n[03:58.46]一杯敬过往\n[04:01.23]支撑我的身体\n[04:03.75]厚重了肩膀\n[04:05.52]虽然从不相信\n[04:07.34]所谓山高水长\n[04:10.84]人生苦短\n[04:12.07]何必念念不忘\n[04:15.76]一杯敬自由\n[04:17.79]一杯敬死亡\n[04:20.46]宽恕我的平凡\n[04:22.88]驱散了迷惘\n[04:24.69]好吧天亮之后\n[04:26.51]总是潦草离场\n[04:30.39]清醒的人最荒唐\n[04:34.58]好吧天亮之后\n[04:36.15]总是潦草离场\n[04:39.82]清醒的人最荒唐\n[04:48.92]一杯敬自由\n[04:50.79]一杯敬死亡\n[04:53.62]宽恕我的平凡\n[04:56.00]驱散了迷惘\n[04:57.87]好吧天亮之后\n[04:59.68]总是潦草离场\n[05:03.27]清醒的人最荒唐\n[05:07.45]好吧天亮之后\n[05:09.22]总是潦草离场\n[05:13.07]清醒的人最荒唐","name":"消愁 (Live)","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2tuAIYnhACuroacKT6g509.mp3"},{"artist":"许嵩","cover":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_OAQrF4AADgUZTFOG8276.jpg","id":6,"lrc":"清明雨上 - 许嵩 (Vae Xu)词：许嵩、安琪曲：许嵩窗透初晓 日照西桥 云自摇想你当年荷风微摆的衣角木雕鎏金 岁月涟漪 七年前封笔因为我今生挥毫只为你雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱远方有琴 愀然空灵 声声催天雨涓涓心事说给自己听月影憧憧 烟火几重 烛花红红尘旧梦 梦断都成空雨打湿了眼眶 年年倚井盼归堂最怕不觉泪已拆两行我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱我在人间彷徨 寻不到你的天堂东瓶西镜放 恨不能遗忘又是清明雨上 折菊寄到你身旁把你最爱的歌来轻轻唱","name":"清明雨上","url":"http://139.9.130.249/group1/M00/00/00/wKgAbl6N2_-AdPXAADb-sifc6g4167.mp3"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 14:01:10.895 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 14:01:10.895 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 14:01:10.914 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 14:01:10.916 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 14:01:10.917 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/read/1247365394201612288(String), [1247365394201612288](String), 1(Integer), null, GET(String), 572(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<pre class=\"language-java\"><code> \nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.*;\nimport java.net.URLEncoder;\n \n/**\n * 下载工具类\n * @author czs\n * @date 2020-2-22 11:02:54\n */\npublic class DownloadUtils {\n \n    /**\n     * 根据字符串下载内容\n     *\n     * @param request  request\n     * @param response response\n     * @param fileName 下载的文件名\n     * @param content  字符串内容\n     * @throws IOException\n     */\n    public static void downloadByStringContent(HttpServletRequest request,\n                                               HttpServletResponse response,\n                                               String fileName, String content)\n            throws IOException {\n        //设置向浏览器端传送的文件格式\n        response.setContentType(\"application/octet-stream;charset=utf-8\");\n        response.setCharacterEncoding(\"utf-8\");\n        if (request.getHeader(\"User-Agent\").toLowerCase().indexOf(\"firefox\") &gt; 0) {\n            // firefox浏览器\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"MSIE\") &gt; 0) {\n\t\t\t// IE浏览器\n            fileName = URLEncoder.encode(fileName, \"UTF-8\");\n        } else if (request.getHeader(\"User-Agent\").toUpperCase().indexOf(\"CHROME\") &gt; 0) {\n            // 谷歌\n            fileName = new String(fileName.getBytes(\"UTF-8\"), \"ISO8859-1\");\n        }\n        response.setHeader(\"Content-disposition\", \"attachment; filename=\" + fileName);\n        BufferedInputStream inp = null;\n        OutputStream out = response.getOutputStream();\n        try {\n            inp = new BufferedInputStream(new ByteArrayInputStream(content.getBytes(\"utf-8\")));\n            int len = 0;\n            byte[] buf = new byte[1024];\n            while ((len = inp.read(buf)) &gt; 0) {\n                out.write(buf, 0, len);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            if (inp != null) {\n                inp.close();\n            }\n            if (out != null) {\n                out.close();\n            }\n        }\n    }\n \n}</code></pre>\n<pre class=\"language-java\"><code>@ResponseBody\n@RequestMapping(method = RequestMethod.GET, value = \"/exportKtrAndKjb\")\npublic void exportKtrAndKjb(@RequestParam String path, @RequestParam String type, HttpServletRequest request, HttpServletResponse response) throws Exception {\n    String xml = xxxService.getXmlByXXX(path);\n    String fileName = xxxService.getFileNameByXml(xml);\n    DownloadUtils.downloadByStringContent(request, response, fileName, xml);\n}</code></pre>","blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":8,"blogTitle":"java下载字符串","blogType":6,"createdTime":"2020-03-27 03:27:38","typeName":"java","version":13},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 14:01:10.953 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 14:01:11.030 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 14:01:19.994 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by created_time desc limit ?,? 
2020-04-10 14:01:19.995 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-10 14:01:20.050 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-10 14:01:20.105 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-10 14:01:20.106 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-10 14:01:20.159 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-10 14:01:20.216 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 14:01:20.216 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 223(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":9,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-10 05:56:48"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-09 13:47:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":8,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-10 06:01:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":1,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-09 15:08:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":3,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-09 15:08:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 14:01:20.325 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 14:01:23.282 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2020-04-10 14:01:23.283 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.TypeMapper.getList.debug:159 -==> Parameters: 
2020-04-10 14:01:23.336 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.TypeMapper.getList.debug:159 -<==      Total: 7
2020-04-10 14:01:23.393 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 14:01:23.394 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 114(Long), {"code":20000,"data":[{"typeBlogCount":2,"typeId":6,"typeName":"java"},{"typeBlogCount":2,"typeId":7,"typeName":"springboot"},{"typeBlogCount":0,"typeId":8,"typeName":"springcloud"},{"typeBlogCount":0,"typeId":9,"typeName":"docker"},{"typeBlogCount":0,"typeId":10,"typeName":"spring"},{"typeBlogCount":0,"typeId":12,"typeName":"mysql"},{"typeBlogCount":1,"typeId":14,"typeName":"dubbo"}],"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 14:01:23.504 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 14:01:25.728 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title,blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 order by created_time desc limit ?,? 
2020-04-10 14:01:25.728 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2020-04-10 14:01:25.784 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 5
2020-04-10 14:01:25.838 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog b inner join bl_type t on b.blog_type = t.type_id where b.deleted = 0 and t.deleted = 0 
2020-04-10 14:01:25.839 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-10 14:01:25.891 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-10 14:01:25.949 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 14:01:25.951 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 221(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423893702991872","blogRead":9,"blogTitle":"到底要不要重复造轮子?","createdTime":"2020-04-07 07:20:06","typeName":"java","updateTime":"2020-04-10 05:56:48"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247423253719310336","blogRead":6,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","createdTime":"2020-04-07 07:17:33","typeName":"dubbo","updateTime":"2020-04-09 13:47:11"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247365394201612288","blogImage":"http://139.9.130.249/group1/M00/00/00/wKgAbl6MeK-AJ7A8AAB28yzuliM104.jpg","blogRead":8,"blogTitle":"java下载字符串","createdTime":"2020-03-27 03:27:38","typeName":"java","updateTime":"2020-04-10 06:01:09"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247421732856291328","blogRead":1,"blogTitle":"SpringBoot-thymeleaf模板语法","createdTime":"2020-02-17 07:11:31","typeName":"springboot","updateTime":"2020-04-09 15:08:40"},{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1247366723137474560","blogRead":3,"blogRemark":"测试接口","blogTitle":"spring boot通用mapper配置","createdTime":"2019-09-09 03:32:55","typeName":"springboot","updateTime":"2020-04-09 15:08:27"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":5,"totalPage":1},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 14:01:26.059 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-10 14:01:27.708 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==>  Preparing: select blog_id, blog_image,blog_title, blog_content, blog_goods, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time,version from bl_blog where deleted = 0 and blog_id = ? 
2020-04-10 14:01:27.709 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -==> Parameters: 1247423253719310336(String)
2020-04-10 14:01:27.763 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.getBlogInfoById.debug:159 -<==      Total: 1
2020-04-10 14:01:27.764 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_type = ? ,blog_comment = ? where blog_id = ? and version = ? 
2020-04-10 14:01:27.764 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -==> Parameters: dubbo监控中心dubbo-simple-monitor安装(String), <p>1、从百度上搜索下载dubbo-admin-2.*.war然后传输到linux的webapp目录下</p>
<p>建议更改一下war的名字</p>
<p><img src="https://img-blog.csdn.net/20180509211247640?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTM4MzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" /></p>
<p>2、访问公网地址/dubbo-admin</p>
<p>用户名密码都是dubbo</p>
<p>如果监控中心和注册中心在同一台服务器上，可以不需要任何配置。</p>
<p>如果不在同一台服务器，需要修改配置文件：</p>
<p>在tomcat的/webapps/dubbo-admin/WEB-INF/dubbo.properties</p>
<p><img src="https://img-blog.csdn.net/20180509211657191?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTM4MzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" /></p>
<p>这下知道为什么用户名和密码都是root了吧<br /><br /></p>(String), 0(Integer), 7(Integer), 14(Integer), 0(Integer), 1247423253719310336(String), 8(Integer)
2020-04-10 14:01:27.869 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.BlogMapper.updateBlogInfoByid.debug:159 -<==    Updates: 1
2020-04-10 14:01:27.870 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==>  Preparing: select * from bl_type where type_id = ? and deleted = 0 
2020-04-10 14:01:27.870 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -==> Parameters: 14(Integer)
2020-04-10 14:01:27.923 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.TypeMapper.getTypeInfoById.debug:159 -<==      Total: 1
2020-04-10 14:01:28.139 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-10 14:01:28.139 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /blog/read/1247423253719310336(String), [1247423253719310336](String), 1(Integer), null, GET(String), 483(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>1、从百度上搜索下载dubbo-admin-2.*.war然后传输到linux的webapp目录下</p>\n<p>建议更改一下war的名字</p>\n<p><img src=\"https://img-blog.csdn.net/20180509211247640?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTM4MzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" /></p>\n<p>2、访问公网地址/dubbo-admin</p>\n<p>用户名密码都是dubbo</p>\n<p>如果监控中心和注册中心在同一台服务器上，可以不需要任何配置。</p>\n<p>如果不在同一台服务器，需要修改配置文件：</p>\n<p>在tomcat的/webapps/dubbo-admin/WEB-INF/dubbo.properties</p>\n<p><img src=\"https://img-blog.csdn.net/20180509211657191?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2MTM4MzI0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" /></p>\n<p>这下知道为什么用户名和密码都是root了吧<br /><br /></p>","blogGoods":0,"blogId":"1247423253719310336","blogRead":7,"blogTitle":"dubbo监控中心dubbo-simple-monitor安装","blogType":14,"createdTime":"2020-04-07 07:17:33","typeName":"dubbo","version":8},"msg":"操作成功!"}(String), 127.0.0.1(String)
2020-04-10 14:01:28.248 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
