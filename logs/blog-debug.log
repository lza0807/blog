2020-04-06 20:41:59.486 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-06 20:42:32.147 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-06 20:42:32.165 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-06 20:42:32.229 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-06 20:42:32.335 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:42:32.338 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 168(Long), {"code":20000,"data":{"token":"69B59912A3E18656970756314C1BAF48"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:42:32.434 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:45:20.661 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-06 20:45:41.257 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-06 20:45:41.277 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-06 20:45:41.343 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-06 20:45:41.456 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:45:41.458 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 175(Long), {"code":20000,"data":{"token":"2EEC5D8326AD03608EC7FCE6557A4D52"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:45:41.557 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:45:45.720 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.save.debug:159 -==>  Preparing: insert into bl_music( id, name, artist, url, cover, lrc ) values (?,?,?,?,?,?) 
2020-04-06 20:45:45.721 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.save.debug:159 -==> Parameters: null, 算什么男人(String), 周杰伦(String), 地址(String), 封面(String), null
2020-04-06 20:45:45.814 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.save.debug:159 -<==    Updates: 1
2020-04-06 20:45:45.861 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:45:45.862 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/save(String), [Music(id=null, name=算什么男人, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=null, enabled=null, deleted=null)](String), 1(Integer), null, POST(String), 144(Long), {"code":20000,"msg":"添加成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:45:45.965 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:45:56.409 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.MusicMapper.save.debug:159 -==>  Preparing: insert into bl_music( id, name, artist, url, cover, lrc ) values (?,?,?,?,?,?) 
2020-04-06 20:45:56.410 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.MusicMapper.save.debug:159 -==> Parameters: null, 晴天(String), 周杰伦(String), 地址(String), 封面(String), null
2020-04-06 20:45:56.503 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.MusicMapper.save.debug:159 -<==    Updates: 1
2020-04-06 20:45:56.551 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:45:56.552 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/save(String), [Music(id=null, name=晴天, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=null, enabled=null, deleted=null)](String), 1(Integer), null, POST(String), 150(Long), {"code":20000,"msg":"添加成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:45:56.648 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:46:05.380 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.save.debug:159 -==>  Preparing: insert into bl_music( id, name, artist, url, cover, lrc ) values (?,?,?,?,?,?) 
2020-04-06 20:46:05.381 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.save.debug:159 -==> Parameters: null, 青花瓷(String), 周杰伦(String), 地址(String), 封面(String), null
2020-04-06 20:46:05.475 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.save.debug:159 -<==    Updates: 1
2020-04-06 20:46:05.522 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:46:05.523 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/save(String), [Music(id=null, name=青花瓷, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=null, enabled=null, deleted=null)](String), 1(Integer), null, POST(String), 144(Long), {"code":20000,"msg":"添加成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:46:05.619 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:46:44.390 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enabled from bl_music where id = ? and deleted = 0 
2020-04-06 20:46:44.390 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-04-06 20:46:44.595 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:46:44.596 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/get/1(String), [1](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
	at com.lza.blog.service.impl.MusicServiceImpl.getById(MusicServiceImpl.java:48)
	at com.lza.blog.controller.MusicController.getById(MusicController.java:54)
	at com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$843f8796.getById(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
(String), GET(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-06 20:46:44.703 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:46:52.710 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enabled from bl_music where id = ? and deleted = 0 
2020-04-06 20:46:52.711 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-04-06 20:46:52.809 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:46:52.809 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/get/1(String), [1](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
	at com.lza.blog.service.impl.MusicServiceImpl.getById(MusicServiceImpl.java:48)
	at com.lza.blog.controller.MusicController.getById(MusicController.java:54)
	at com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$843f8796.getById(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'field list'
(String), GET(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-06 20:46:52.903 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:49:13.034 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-06 20:49:25.503 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-06 20:49:25.523 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-06 20:49:25.591 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-06 20:49:25.702 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:49:25.705 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 178(Long), {"code":20000,"data":{"token":"54F4A80E53AFC622AE153FA2BB65F574"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:49:25.804 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:49:30.943 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enable from bl_music where id = ? and deleted = 0 
2020-04-06 20:49:30.944 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-04-06 20:49:30.993 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 1
2020-04-06 20:49:31.045 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:49:31.045 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/get/1(String), [1](String), 1(Integer), null, GET(String), 103(Long), {"code":20000,"data":{"artist":"周杰伦","cover":"封面","id":1,"name":"算什么男人","url":"地址"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:49:31.160 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:49:35.050 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enable from bl_music where id = ? and deleted = 0 
2020-04-06 20:49:35.051 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 2(Integer)
2020-04-06 20:49:35.099 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 1
2020-04-06 20:49:35.149 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:49:35.150 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/get/2(String), [2](String), 1(Integer), null, GET(String), 101(Long), {"code":20000,"data":{"artist":"周杰伦","cover":"封面","id":2,"name":"晴天","url":"地址"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:49:35.259 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:50:51.136 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enable from bl_music where id = ? and deleted = 0 
2020-04-06 20:50:51.137 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-04-06 20:50:51.186 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 1
2020-04-06 20:50:51.241 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:50:51.242 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/get/3(String), [3](String), 1(Integer), null, GET(String), 107(Long), {"code":20000,"data":{"artist":"周杰伦","cover":"封面","id":3,"name":"青花瓷","url":"地址"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:50:51.341 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:52:20.098 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enable from bl_music where id = ? and deleted = 0 
2020-04-06 20:52:20.099 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-04-06 20:52:20.146 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 1
2020-04-06 20:52:20.195 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:52:20.196 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/get/3(String), [3](String), 1(Integer), null, GET(String), 100(Long), {"code":20000,"data":{"artist":"周杰伦","cover":"封面","id":3,"name":"青花瓷","url":"地址"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:52:20.294 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:52:32.911 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-06 20:52:32.911 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-06 20:52:32.960 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-06 20:52:33.010 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:52:33.011 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 101(Long), {"code":20000,"data":{"token":"54F4A80E53AFC622AE153FA2BB65F574"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:52:33.113 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:52:54.501 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:52:54.502 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/update(String), [Music(id=3, name=青花瓷1, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=null, enabled=null, deleted=null)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enable' in 'class com.lza.blog.pojo.Music'
	at com.lza.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:43)
	at com.lza.blog.controller.MusicController.update(MusicController.java:44)
	at com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$d60b77f5.update(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'enable' in 'class com.lza.blog.pojo.Music'
(String), PUT(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-06 20:52:54.637 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:53:50.634 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-06 20:54:03.601 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-06 20:54:03.620 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-06 20:54:03.688 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-06 20:54:03.797 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:54:03.799 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 179(Long), {"code":20000,"data":{"token":"EF641CD466F9814D5C1A0021434DE854"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 20:54:03.903 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:54:11.127 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ? artist = ? url = ? cover = ? where id = ? and deleted = 0 
2020-04-06 20:54:11.128 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 青花瓷1(String), 周杰伦(String), 地址(String), 封面(String), 3(Integer)
2020-04-06 20:54:11.379 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:54:11.380 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/update(String), [Music(id=3, name=青花瓷1, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=null, enable=null, deleted=null)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'artist = '周杰伦'
### The error may involve com.lza.blog.mapper.MusicMapper.update-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'artist = '周杰伦'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'artist = '周杰伦'
	at com.lza.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:43)
	at com.lza.blog.controller.MusicController.update(MusicController.java:44)
	at com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2fc70147.update(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'artist = '周杰伦'
(String), PUT(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-06 20:54:11.481 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 20:55:31.978 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ? artist = ? url = ? cover = ? where id = ? and deleted = 0 
2020-04-06 20:55:31.979 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 青花瓷1(String), 周杰伦(String), 地址(String), 封面(String), 3(Integer)
2020-04-06 20:55:32.138 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 20:55:32.139 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/update(String), [Music(id=3, name=青花瓷1, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=null, enable=null, deleted=null)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'artist = '周杰伦'
### The error may involve com.lza.blog.mapper.MusicMapper.update-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'artist = '周杰伦'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'artist = '周杰伦'
	at com.lza.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:43)
	at com.lza.blog.controller.MusicController.update(MusicController.java:44)
	at com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$2fc70147.update(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'artist = '周杰伦'
(String), PUT(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-06 20:55:32.240 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:08:57.867 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-06 21:09:04.670 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-06 21:09:04.690 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-06 21:09:04.757 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-06 21:09:04.869 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:09:04.871 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 186(Long), {"code":20000,"data":{"token":"23F62888A8172F50DC029405B07660DA"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:09:04.965 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:09:12.021 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET ,name = ? ,artist = ? ,url = ? ,cover = ? where id = ? and deleted = 0 
2020-04-06 21:09:12.021 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 青花瓷1(String), 周杰伦(String), 地址(String), 封面(String), 3(Integer)
2020-04-06 21:09:12.257 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:09:12.258 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/update(String), [Music(id=3, name=青花瓷1, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=null, enable=null, deleted=null)](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'name = '青花瓷1'
### The error may involve com.lza.blog.mapper.MusicMapper.update-Inline
### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'name = '青花瓷1'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'name = '青花瓷1'
	at com.lza.blog.service.impl.MusicServiceImpl.update(MusicServiceImpl.java:43)
	at com.lza.blog.controller.MusicController.update(MusicController.java:44)
	at com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$b757aa79.update(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'name = '青花瓷1'
(String), PUT(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-06 21:09:12.352 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:10:29.991 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-06 21:12:44.306 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-06 21:12:44.327 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-06 21:12:44.402 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-06 21:12:44.524 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:12:44.527 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 195(Long), {"code":20000,"data":{"token":"5BA83140B0431DD938C9BADBCBF87BEF"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:12:44.623 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:12:49.415 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ? ,artist = ? ,url = ? ,cover = ? where id = ? and deleted = 0 
2020-04-06 21:12:49.416 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 青花瓷1(String), 周杰伦(String), 地址(String), 封面(String), 3(Integer)
2020-04-06 21:12:49.509 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.update.debug:159 -<==    Updates: 1
2020-04-06 21:12:49.558 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:12:49.559 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/update(String), [Music(id=3, name=青花瓷1, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=null, enable=null, deleted=null)](String), 1(Integer), null, PUT(String), 171(Long), {"code":20000,"msg":"修改成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:12:49.654 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:13:59.478 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.delete.debug:159 -==>  Preparing: update bl_music set deleted = 1 and id = ? 
2020-04-06 21:13:59.479 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.delete.debug:159 -==> Parameters: 3(Integer)
2020-04-06 21:13:59.574 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.delete.debug:159 -<==    Updates: 3
2020-04-06 21:13:59.628 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:13:59.629 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/delete/3(String), [3](String), 1(Integer), null, DELETE(String), 154(Long), {"code":20000,"msg":"删除成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:13:59.723 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:14:08.815 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ? ,artist = ? ,url = ? ,cover = ? where id = ? and deleted = 0 
2020-04-06 21:14:08.815 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 青花瓷1(String), 周杰伦(String), 地址(String), 封面(String), 3(Integer)
2020-04-06 21:14:08.907 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.MusicMapper.update.debug:159 -<==    Updates: 0
2020-04-06 21:14:08.958 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:14:08.959 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/update(String), [Music(id=3, name=青花瓷1, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=null, enable=null, deleted=null)](String), 1(Integer), null, PUT(String), 141(Long), {"code":20000,"msg":"修改成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:14:09.065 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:14:18.789 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ? ,artist = ? ,url = ? ,cover = ? where id = ? and deleted = 0 
2020-04-06 21:14:18.790 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 青花瓷(String), 周杰伦(String), 地址(String), 封面(String), 3(Integer)
2020-04-06 21:14:18.881 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.MusicMapper.update.debug:159 -<==    Updates: 0
2020-04-06 21:14:18.927 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:14:18.928 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/update(String), [Music(id=3, name=青花瓷, artist=周杰伦, url=地址, cover=封面, lrc=null, createdTime=null, enable=null, deleted=null)](String), 1(Integer), null, PUT(String), 144(Long), {"code":20000,"msg":"修改成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:14:19.021 DEBUG [http-nio-1000-exec-9]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:15:26.586 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enable from bl_music where id = ? and deleted = 0 
2020-04-06 21:15:26.586 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 3(Integer)
2020-04-06 21:15:26.633 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 0
2020-04-06 21:15:26.682 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:15:26.682 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/enableById/3(String), [3](String), 0(Integer), 	at com.lza.blog.service.impl.MusicServiceImpl.enableById(MusicServiceImpl.java:59)
	at com.lza.blog.controller.MusicController.enableById(MusicController.java:77)
	at com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$e3bb2c94.enableById(<generated>)
(String), PUT(String), 0(Long), {"code":20000,"data":{"token":"5BA83140B0431DD938C9BADBCBF87BEF"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:15:26.777 DEBUG [http-nio-1000-exec-1]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:16:05.617 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enable from bl_music where id = ? and deleted = 0 
2020-04-06 21:16:05.618 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-04-06 21:16:05.671 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 1
2020-04-06 21:16:05.718 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ? ,artist = ? ,url = ? ,cover = ? ,enable = ? where id = ? and deleted = 0 
2020-04-06 21:16:05.718 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 算什么男人(String), 周杰伦(String), 地址(String), 封面(String), 1(Integer), 1(Integer)
2020-04-06 21:16:05.814 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.MusicMapper.update.debug:159 -<==    Updates: 1
2020-04-06 21:16:05.893 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:16:05.894 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/enableById/1(String), [1](String), 1(Integer), null, PUT(String), 263(Long), {"code":20000,"msg":"启用成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:16:05.987 DEBUG [http-nio-1000-exec-4]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:16:24.253 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enable from bl_music where id = ? and deleted = 0 
2020-04-06 21:16:24.254 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-04-06 21:16:24.300 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 1
2020-04-06 21:16:24.351 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ? ,artist = ? ,url = ? ,cover = ? ,enable = ? where id = ? and deleted = 0 
2020-04-06 21:16:24.352 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 算什么男人(String), 周杰伦(String), 地址(String), 封面(String), 0(Integer), 1(Integer)
2020-04-06 21:16:24.444 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.MusicMapper.update.debug:159 -<==    Updates: 1
2020-04-06 21:16:24.491 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:16:24.492 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/disable/1(String), [1](String), 1(Integer), null, PUT(String), 239(Long), {"code":20000,"msg":"禁用成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:16:24.591 DEBUG [http-nio-1000-exec-5]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:16:37.262 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enable from bl_music where id = ? and deleted = 0 
2020-04-06 21:16:37.262 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-04-06 21:16:37.309 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 1
2020-04-06 21:16:37.359 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ? ,artist = ? ,url = ? ,cover = ? ,enable = ? where id = ? and deleted = 0 
2020-04-06 21:16:37.360 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 算什么男人(String), 周杰伦(String), 地址(String), 封面(String), 0(Integer), 1(Integer)
2020-04-06 21:16:37.459 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.MusicMapper.update.debug:159 -<==    Updates: 1
2020-04-06 21:16:37.506 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:16:37.507 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/disable/1(String), [1](String), 1(Integer), null, PUT(String), 246(Long), {"code":20000,"msg":"禁用成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:16:37.602 DEBUG [http-nio-1000-exec-6]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:16:40.535 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, enable from bl_music where id = ? and deleted = 0 
2020-04-06 21:16:40.536 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getById.debug:159 -==> Parameters: 1(Integer)
2020-04-06 21:16:40.582 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.getById.debug:159 -<==      Total: 1
2020-04-06 21:16:40.630 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.update.debug:159 -==>  Preparing: update bl_music SET name = ? ,artist = ? ,url = ? ,cover = ? ,enable = ? where id = ? and deleted = 0 
2020-04-06 21:16:40.631 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.update.debug:159 -==> Parameters: 算什么男人(String), 周杰伦(String), 地址(String), 封面(String), 1(Integer), 1(Integer)
2020-04-06 21:16:40.734 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.MusicMapper.update.debug:159 -<==    Updates: 1
2020-04-06 21:16:40.783 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:16:40.783 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/enableById/1(String), [1](String), 1(Integer), null, PUT(String), 248(Long), {"code":20000,"msg":"启用成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:16:40.877 DEBUG [http-nio-1000-exec-7]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:17:33.468 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, created_time, enable from bl_music where deleted = 0 limit ?,? 
2020-04-06 21:17:33.469 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-04-06 21:17:33.520 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 2
2020-04-06 21:17:33.571 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:17:33.572 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'name' in 'class com.lza.blog.utils.Page'
	at com.lza.blog.service.impl.MusicServiceImpl.getByPage(MusicServiceImpl.java:76)
	at com.lza.blog.controller.MusicController.getByPage(MusicController.java:108)
	at com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$e3bb2c94.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'name' in 'class com.lza.blog.utils.Page'
(String), GET(String), 0(Long), {"code":20000,"msg":"修改成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:17:33.664 DEBUG [http-nio-1000-exec-8]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:17:43.986 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, created_time, enable from bl_music where deleted = 0 limit ?,? 
2020-04-06 21:17:43.987 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-04-06 21:17:44.033 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 2
2020-04-06 21:17:44.082 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:17:44.082 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'name' in 'class com.lza.blog.utils.Page'
	at com.lza.blog.service.impl.MusicServiceImpl.getByPage(MusicServiceImpl.java:76)
	at com.lza.blog.controller.MusicController.getByPage(MusicController.java:108)
	at com.lza.blog.controller.MusicController$$FastClassBySpringCGLIB$$ca2cabb3.invoke(<generated>)
	at com.lza.blog.aspect.RequestAspect.doAround(RequestAspect.java:72)
	at com.lza.blog.controller.MusicController$$EnhancerBySpringCGLIB$$e3bb2c94.getByPage(<generated>)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'name' in 'class com.lza.blog.utils.Page'
(String), GET(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-06 21:17:44.176 DEBUG [http-nio-1000-exec-10]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:18:31.227 DEBUG [main]com.lza.blog.BlogApplication.logStarting:53 -Running with Spring Boot v2.1.13.RELEASE, Spring v5.1.14.RELEASE
2020-04-06 21:21:34.785 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==>  Preparing: select name,header,signature,comment,username,password from bl_admin where username = ? 
2020-04-06 21:21:34.812 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -==> Parameters: admin(String)
2020-04-06 21:21:34.988 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.AdminMapper.getUserByName.debug:159 -<==      Total: 1
2020-04-06 21:21:35.170 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:21:35.173 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=21232f297a57a5a743894a0e4a801fc3)](String), 1(Integer), null, POST(String), 429(Long), {"code":20000,"data":{"token":"EE8070BF6ADA820290ABBD3E03BA86D2"},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:21:35.379 DEBUG [http-nio-1000-exec-2]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
2020-04-06 21:21:42.695 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getByPage.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc, created_time, enable from bl_music where deleted = 0 limit ?,? 
2020-04-06 21:21:42.696 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 20(Integer)
2020-04-06 21:21:42.842 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getByPage.debug:159 -<==      Total: 2
2020-04-06 21:21:42.935 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_music where deleted = 0 
2020-04-06 21:21:42.935 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getCountByPage.debug:159 -==> Parameters: 
2020-04-06 21:21:43.005 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.MusicMapper.getCountByPage.debug:159 -<==      Total: 1
2020-04-06 21:21:43.081 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==>  Preparing: insert into bl_log(log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip) values (?,?,?,?,?,?,?,?) 
2020-04-06 21:21:43.081 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -==> Parameters: /music/getByPage(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, GET(String), 454(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:45","enable":1,"id":1,"name":"算什么男人","url":"地址"},{"artist":"周杰伦","cover":"封面","createdTime":"2020-04-06 12:45:56","enable":1,"id":2,"name":"晴天","url":"地址"}],"pageSize":20,"params":{},"sortMethod":"asc","totalCount":2,"totalPage":1},"msg":"操作成功!"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-06 21:21:43.252 DEBUG [http-nio-1000-exec-3]com.lza.blog.mapper.LogMapper.logSave.debug:159 -<==    Updates: 1
